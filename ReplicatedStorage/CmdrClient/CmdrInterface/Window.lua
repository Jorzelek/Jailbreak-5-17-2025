-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 

-- Decompiled by Krnl

local v_u_1 = game:GetService("GuiService")
local v_u_2 = game:GetService("UserInputService")
game:GetService("TextService")
local v_u_3 = game:GetService("Players").LocalPlayer
local v_u_4 = { Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2, Enum.UserInputType.Touch }
local v_u_5 = {
	["Valid"] = true,
	["AutoComplete"] = nil,
	["ProcessEntry"] = nil,
	["OnTextChanged"] = nil,
	["Cmdr"] = nil,
	["HistoryState"] = nil
}
local v_u_6 = v_u_3:WaitForChild("CmdrFrameValue").Value
local v_u_7 = v_u_6:WaitForChild("Line")
local v_u_8 = v_u_6:WaitForChild("Entry")
v_u_7.Parent = nil
function v_u_5.UpdateLabel(p9)
	-- upvalues: (copy) v_u_8, (copy) v_u_3
	v_u_8.TextLabel.Text = v_u_3.Name .. "@" .. p9.Cmdr.PlaceName .. "$"
end
function v_u_5.GetLabel(_)
	-- upvalues: (copy) v_u_8
	return v_u_8.TextLabel.Text
end
function v_u_5.UpdateWindowHeight(_)
	-- upvalues: (copy) v_u_6
	local v10 = 20
	for _, v11 in pairs(v_u_6:GetChildren()) do
		if v11:IsA("GuiObject") then
			v10 = v10 + v11.Size.Y.Offset
		end
	end
	v_u_6.CanvasSize = UDim2.new(v_u_6.CanvasSize.X.Scale, v_u_6.CanvasSize.X.Offset, 0, v10)
	local v12 = v_u_6
	local v13 = Vector2.new
	local v14 = v10 - v_u_6.AbsoluteWindowSize.Y
	v12.CanvasPosition = v13(0, (math.max(v14, 0)))
end
function v_u_5.AddLine(p15, p16, p17)
	-- upvalues: (copy) v_u_5, (copy) v_u_7, (copy) v_u_6
	local v18 = p17 or {}
	local v19 = tostring(p16)
	local v20 = typeof(v18) == "Color3" and {
		["Color"] = v18
	} or v18
	if #v19 == 0 then
		v_u_5:UpdateWindowHeight()
	else
		local v21 = p15.Cmdr.Util.EmulateTabstops(v19 or "nil", 8)
		local v22 = v_u_7:Clone()
		v22.Text = v21
		v22.TextColor3 = v20.Color or v22.TextColor3
		v22.RichText = v20.RichText or false
		v22.Parent = v_u_6
	end
end
function v_u_5.IsVisible(_)
	-- upvalues: (copy) v_u_6
	return v_u_6.Visible
end
function v_u_5.SetVisible(p23, p24)
	-- upvalues: (copy) v_u_6, (copy) v_u_8, (copy) v_u_2
	v_u_6.Visible = p24
	if p24 then
		v_u_8.TextBox:CaptureFocus()
		task.wait()
		p23:SetEntryText("")
		if p23.Cmdr.ActivationUnlocksMouse then
			p23.PreviousMouseBehavior = v_u_2.MouseBehavior
			v_u_2.MouseBehavior = Enum.MouseBehavior.Default
			return
		end
	else
		v_u_8.TextBox:ReleaseFocus()
		p23.AutoComplete:Hide()
		if p23.PreviousMouseBehavior then
			v_u_2.MouseBehavior = p23.PreviousMouseBehavior
			p23.PreviousMouseBehavior = nil
		end
	end
end
function v_u_5.Hide(p25)
	return p25:SetVisible(false)
end
function v_u_5.Show(p26)
	return p26:SetVisible(true)
end
function v_u_5.SetEntryText(p27, p28)
	-- upvalues: (copy) v_u_8, (copy) v_u_5
	v_u_8.TextBox.Text = p28
	if p27:IsVisible() then
		v_u_8.TextBox:CaptureFocus()
		v_u_8.TextBox.CursorPosition = #p28 + 1
		v_u_5:UpdateWindowHeight()
	end
end
function v_u_5.GetEntryText(_)
	-- upvalues: (copy) v_u_8
	return v_u_8.TextBox.Text:gsub("\t", "")
end
function v_u_5.SetIsValidInput(p29, p30, p31)
	-- upvalues: (copy) v_u_8
	v_u_8.TextBox.TextColor3 = p30 and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(255, 73, 73)
	p29.Valid = p30
	p29._errorText = p31
end
function v_u_5.HideInvalidState(_)
	-- upvalues: (copy) v_u_8
	v_u_8.TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
end
function v_u_5.LoseFocus(p32, p33)
	-- upvalues: (copy) v_u_8, (copy) v_u_6, (copy) v_u_1
	local v34 = v_u_8.TextBox.Text
	p32:ClearHistoryState()
	if v_u_6.Visible and not v_u_1.MenuIsOpen then
		v_u_8.TextBox:CaptureFocus()
	elseif v_u_1.MenuIsOpen and v_u_6.Visible then
		p32:Hide()
	end
	if p33 and p32.Valid then
		wait()
		p32:SetEntryText("")
		p32.ProcessEntry(v34)
	elseif p33 then
		p32:AddLine(p32._errorText, Color3.fromRGB(255, 153, 153))
	end
end
function v_u_5.TraverseHistory(p35, p36)
	local v37 = p35.Cmdr.Dispatcher:GetHistory()
	if p35.HistoryState == nil then
		p35.HistoryState = {
			["Position"] = #v37 + 1,
			["InitialText"] = p35:GetEntryText()
		}
	end
	local v38 = p35.HistoryState
	local v39 = p35.HistoryState.Position + p36
	local v40 = #v37 + 1
	v38.Position = math.clamp(v39, 1, v40)
	p35:SetEntryText(p35.HistoryState.Position == #v37 + 1 and p35.HistoryState.InitialText or v37[p35.HistoryState.Position])
end
function v_u_5.ClearHistoryState(p41)
	p41.HistoryState = nil
end
function v_u_5.SelectVertical(p42, p43)
	if p42.AutoComplete:IsVisible() and not p42.HistoryState then
		p42.AutoComplete:Select(p43)
	else
		p42:TraverseHistory(p43)
	end
end
local v_u_44 = 0
local v_u_45 = 0
function v_u_5.BeginInput(p46, p47, p48)
	-- upvalues: (copy) v_u_1, (ref) v_u_44, (ref) v_u_45, (copy) v_u_4, (copy) v_u_6
	if v_u_1.MenuIsOpen then
		p46:Hide()
	end
	if p48 and p46:IsVisible() == false then
		return
	elseif p46.Cmdr.ActivationKeys[p47.KeyCode] then
		if p46.Cmdr.MashToEnable and not p46.Cmdr.Enabled then
			if tick() - v_u_44 < 1 then
				if v_u_45 >= 5 then
					return p46.Cmdr:SetEnabled(true)
				end
				v_u_45 = v_u_45 + 1
			else
				v_u_45 = 1
			end
			v_u_44 = tick()
		elseif p46.Cmdr.Enabled then
			p46:SetVisible(not p46:IsVisible())
			wait()
			p46:SetEntryText("")
			if v_u_1.MenuIsOpen then
				p46:Hide()
			end
		end
	elseif p46.Cmdr.Enabled == false or not p46:IsVisible() then
		if p46:IsVisible() then
			p46:Hide()
		end
	elseif p46.Cmdr.HideOnLostFocus and table.find(v_u_4, p47.UserInputType) then
		local v49 = p47.Position
		local v50 = v_u_6.AbsolutePosition
		local v51 = v_u_6.AbsoluteSize
		if v49.X < v50.X or (v49.X > v50.X + v51.X or (v49.Y < v50.Y or v49.Y > v50.Y + v51.Y)) then
			p46:Hide()
			return
		end
	else
		if p47.KeyCode == Enum.KeyCode.Down then
			p46:SelectVertical(1)
			return
		end
		if p47.KeyCode == Enum.KeyCode.Up then
			p46:SelectVertical(-1)
			return
		end
		if p47.KeyCode == Enum.KeyCode.Return then
			wait()
			p46:SetEntryText(p46:GetEntryText():gsub("\n", ""):gsub("\r", ""))
			return
		end
		if p47.KeyCode == Enum.KeyCode.Tab then
			local v52 = p46.AutoComplete:GetSelectedItem()
			local v53 = p46:GetEntryText()
			if v52 and not (v53:sub(#v53, #v53):match("%s") and p46.AutoComplete.LastItem) then
				local v54 = v52[2]
				local v55 = p46.AutoComplete.Command
				local v56, v57
				if v55 then
					local v58 = p46.AutoComplete.Arg
					v56 = v55.Alias
					if p46.AutoComplete.NumArgs == #v55.ArgumentDefinitions then
						v57 = false
					else
						v57 = p46.AutoComplete.IsPartial == false
					end
					local v59 = v55.Arguments
					for v60 = 1, #v59 do
						local v61 = v59[v60]
						local v62 = v61.RawSegments
						if v61 == v58 then
							v62[#v62] = v54
						end
						local v63 = v61.Prefix .. table.concat(v62, ",")
						if v63:find(" ") or v63 == "" then
							v63 = ("%q"):format(v63)
						end
						v56 = ("%s %s"):format(v56, v63)
						if v61 == v58 then
							break
						end
					end
				else
					v56 = v54
					v57 = true
				end
				wait()
				p46:SetEntryText(v56 .. (v57 and " " or ""))
			else
				wait()
				p46:SetEntryText(p46:GetEntryText())
			end
		end
		p46:ClearHistoryState()
	end
end
v_u_8.TextBox.FocusLost:Connect(function(p64)
	-- upvalues: (copy) v_u_5
	return v_u_5:LoseFocus(p64)
end)
v_u_2.InputBegan:Connect(function(p65, p66)
	-- upvalues: (copy) v_u_5
	return v_u_5:BeginInput(p65, p66)
end)
v_u_8.TextBox:GetPropertyChangedSignal("Text"):Connect(function()
	-- upvalues: (copy) v_u_8, (copy) v_u_5
	if v_u_8.TextBox.Text:match("\t") then
		v_u_8.TextBox.Text = v_u_8.TextBox.Text:gsub("\t", "")
	elseif v_u_5.OnTextChanged then
		return v_u_5.OnTextChanged(v_u_8.TextBox.Text)
	end
end)
v_u_6.ChildAdded:Connect(v_u_5.UpdateWindowHeight)
return v_u_5
