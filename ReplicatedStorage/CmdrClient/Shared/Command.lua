-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgNZCkRpc3BhdGNoZXIEQ21kcgROYW1lB1Jhd1RleHQGT2JqZWN0BUdyb3VwBVN0YXRlB0FsaWFzZXMFQWxpYXMLRGVzY3JpcHRpb24IRXhlY3V0b3ITQXJndW1lbnREZWZpbml0aW9ucwxSYXdBcmd1bWVudHMJQXJndW1lbnRzBERhdGEIUmVzcG9uc2UNQ29tbWFuZE9iamVjdARUZXh0BEFyZ3MMc2V0bWV0YXRhYmxlA25ldwZpcGFpcnMEdHlwZQhmdW5jdGlvbgdEZWZhdWx0CE9wdGlvbmFsBWVycm9yRUNvbW1hbmQgJXE6IFJlcXVpcmVkIGFyZ3VtZW50cyBjYW5ub3Qgb2NjdXIgYWZ0ZXIgb3B0aW9uYWwgYXJndW1lbnRzLgZmb3JtYXQkUmVxdWlyZWQgYXJndW1lbnQgIyVkICVzIGlzIG1pc3NpbmcuAAVQYXJzZQpfVmFsaWRhdGVkBXBhaXJzCFZhbGlkYXRlDiVzOyAjJWQgJXM6ICVzA3N1YghSYXdWYWx1ZQ9HZXRMYXN0QXJndW1lbnQIR2V0VmFsdWUFdGFibGUUR2F0aGVyQXJndW1lbnRWYWx1ZXMnTXVzdCB2YWxpZGF0ZSBhIGNvbW1hbmQgYmVmb3JlIHJ1bm5pbmcuCUJlZm9yZVJ1bghSdW5Ib29rcwZ1bnBhY2sJQ2xpZW50UnVuA1J1bgR3YXJuwQFjb21tYW5kIGZlbGwgYmFjayB0byB0aGUgc2VydmVyIGJlY2F1c2UgQ2xpZW50UnVuIHJldHVybmVkIG5pbCwgYnV0IHRoZXJlIGlzIG5vIHNlcnZlciBpbXBsZW1lbnRhdGlvbiEgRWl0aGVyIHJldHVybiBhIHN0cmluZyBmcm9tIENsaWVudFJ1biwgb3IgY3JlYXRlIGEgc2VydmVyIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIGNvbW1hbmQuHmNvbW1hbmQgaGFzIG5vIGltcGxlbWVudGF0aW9uIRJObyBpbXBsZW1lbnRhdGlvbi4EU2VuZAhBZnRlclJ1bgtHZXRBcmd1bWVudAdHZXREYXRhBnR5cGVvZghJbnN0YW5jZRxBcmd1bWVudCAjMSBtdXN0IGJlIGEgUGxheWVyBmFzc2VydAZQbGF5ZXIDSXNBBnN0cmluZxxBcmd1bWVudCAj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

-- Decompiled by Krnl

local v_u_1 = game:GetService("RunService")
local v_u_2 = game:GetService("Players")
local v_u_3 = require(script.Parent.Argument)
local v_u_4 = v_u_1:IsServer()
local v_u_5 = {}
v_u_5.__index = v_u_5
function v_u_5.new(p6)
	-- upvalues: (copy) v_u_5
	local v7 = {
		["Dispatcher"] = p6.Dispatcher,
		["Cmdr"] = p6.Dispatcher.Cmdr,
		["Name"] = p6.CommandObject.Name,
		["RawText"] = p6.Text,
		["Object"] = p6.CommandObject,
		["Group"] = p6.CommandObject.Group,
		["State"] = {},
		["Aliases"] = p6.CommandObject.Aliases,
		["Alias"] = p6.Alias,
		["Description"] = p6.CommandObject.Description,
		["Executor"] = p6.Executor,
		["ArgumentDefinitions"] = p6.CommandObject.Args,
		["RawArguments"] = p6.Arguments,
		["Arguments"] = {},
		["Data"] = p6.Data,
		["Response"] = nil
	}
	local v8 = v_u_5
	setmetatable(v7, v8)
	return v7
end
function v_u_5.Parse(p9, p10)
	-- upvalues: (copy) v_u_3
	local v11 = false
	for v12, v14 in ipairs(p9.ArgumentDefinitions) do
		if type(v14) == "function" then
			local v14 = v14(p9)
			if v14 == nil then
				break
			end
		end
		local v15
		if v14.Default == nil then
			v15 = v14.Optional ~= true
		else
			v15 = false
		end
		if v15 and v11 then
			error(("Command %q: Required arguments cannot occur after optional arguments."):format(p9.Name))
		else
			v11 = not v15 and true or v11
		end
		if p9.RawArguments[v12] == nil and (v15 and p10 ~= true) then
			return false, ("Required argument #%d %s is missing."):format(v12, v14.Name)
		end
		if p9.RawArguments[v12] or p10 then
			p9.Arguments[v12] = v_u_3.new(p9, v14, p9.RawArguments[v12] or "")
		end
	end
	return true
end
function v_u_5.Validate(p16, p17)
	p16._Validated = true
	local v18 = ""
	local v19 = true
	for v20, v21 in pairs(p16.Arguments) do
		local v22, v23 = v21:Validate(p17)
		if not v22 then
			v18 = ("%s; #%d %s: %s"):format(v18, v20, v21.Name, v23 or "error")
			v19 = false
		end
	end
	return v19, v18:sub(3)
end
function v_u_5.GetLastArgument(p24)
	for v25 = #p24.Arguments, 1, -1 do
		if p24.Arguments[v25].RawValue then
			return p24.Arguments[v25]
		end
	end
end
function v_u_5.GatherArgumentValues(p26)
	local v27 = {}
	for v28 = 1, #p26.ArgumentDefinitions do
		local v29 = p26.Arguments[v28]
		if v29 then
			v27[v28] = v29:GetValue()
		else
			local v30 = p26.ArgumentDefinitions[v28]
			if type(v30) == "table" then
				v27[v28] = p26.ArgumentDefinitions[v28].Default
			end
		end
	end
	return v27, #p26.ArgumentDefinitions
end
function v_u_5.Run(p31)
	-- upvalues: (copy) v_u_4
	if p31._Validated == nil then
		error("Must validate a command before running.")
	end
	local v32 = p31.Dispatcher:RunHooks("BeforeRun", p31)
	if v32 then
		return v32
	end
	if not v_u_4 and (p31.Object.Data and p31.Data == nil) then
		local v33, v34 = p31:GatherArgumentValues()
		p31.Data = p31.Object.Data(p31, unpack(v33, 1, v34))
	end
	if not v_u_4 and p31.Object.ClientRun then
		local v35, v36 = p31:GatherArgumentValues()
		p31.Response = p31.Object.ClientRun(p31, unpack(v35, 1, v36))
	end
	if p31.Response == nil then
		if p31.Object.Run then
			local v37, v38 = p31:GatherArgumentValues()
			p31.Response = p31.Object.Run(p31, unpack(v37, 1, v38))
		elseif v_u_4 then
			if p31.Object.ClientRun then
				warn(p31.Name, "command fell back to the server because ClientRun returned nil, but there is no server implementation! Either return a string from ClientRun, or create a server implementation for this command.")
			else
				warn(p31.Name, "command has no implementation!")
			end
			p31.Response = "No implementation."
		else
			p31.Response = p31.Dispatcher:Send(p31.RawText, p31.Data)
		end
	end
	return p31.Dispatcher:RunHooks("AfterRun", p31) or p31.Response
end
function v_u_5.GetArgument(p39, p40)
	return p39.Arguments[p40]
end
function v_u_5.GetData(p41)
	-- upvalues: (copy) v_u_4
	if p41.Data then
		return p41.Data
	end
	if p41.Object.Data and not v_u_4 then
		p41.Data = p41.Object.Data(p41)
	end
	return p41.Data
end
function v_u_5.SendEvent(p42, p43, p44, ...)
	-- upvalues: (copy) v_u_4, (copy) v_u_2
	local v45 = typeof(p43) == "Instance"
	assert(v45, "Argument #1 must be a Player")
	local v46 = p43:IsA("Player")
	assert(v46, "Argument #1 must be a Player")
	local v47 = type(p44) == "string"
	assert(v47, "Argument #2 must be a string")
	if v_u_4 then
		p42.Dispatcher.Cmdr.RemoteEvent:FireClient(p43, p44, ...)
	elseif p42.Dispatcher.Cmdr.Events[p44] then
		local v48 = p43 == v_u_2.LocalPlayer
		assert(v48, "Event messages can only be sent to the local player on the client.")
		p42.Dispatcher.Cmdr.Events[p44](...)
	end
end
function v_u_5.BroadcastEvent(p49, ...)
	-- upvalues: (copy) v_u_4
	if not v_u_4 then
		error("Can\'t broadcast event messages from the client.", 2)
	end
	p49.Dispatcher.Cmdr.RemoteEvent:FireAllClients(...)
end
function v_u_5.Reply(p50, ...)
	return p50:SendEvent(p50.Executor, "AddLine", ...)
end
function v_u_5.GetStore(p51, ...)
	return p51.Dispatcher.Cmdr.Registry:GetStore(...)
end
function v_u_5.HasImplementation(p52)
	-- upvalues: (copy) v_u_1
	return (v_u_1:IsClient() and p52.Object.ClientRun or p52.Object.Run) and true or false
end
return v_u_5
