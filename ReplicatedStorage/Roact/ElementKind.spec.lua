-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

return function()
	local v_u_1 = require(script.Parent.Portal)
	local v_u_2 = require(script.Parent.Component)
	local v_u_3 = require(script.Parent.ElementKind)
	describe("of", function()
		-- upvalues: (copy) v_u_3
		it("should return nil for non-table values", function()
			-- upvalues: (ref) v_u_3
			expect(v_u_3.of(nil)).to.equal(nil)
			expect(v_u_3.of(5)).to.equal(nil)
			expect(v_u_3.of(newproxy(true))).to.equal(nil)
		end)
		it("should return nil for table values without an ElementKind key", function()
			-- upvalues: (ref) v_u_3
			expect(v_u_3.of({})).to.equal(nil)
		end)
		it("should return the ElementKind from a table", function()
			-- upvalues: (ref) v_u_3
			local v4 = {
				[v_u_3] = v_u_3.Stateful
			}
			expect(v_u_3.of(v4)).to.equal(v_u_3.Stateful)
		end)
	end)
	describe("fromComponent", function()
		-- upvalues: (copy) v_u_3, (copy) v_u_2, (copy) v_u_1
		it("should handle host components", function()
			-- upvalues: (ref) v_u_3
			expect(v_u_3.fromComponent("foo")).to.equal(v_u_3.Host)
		end)
		it("should handle function components", function()
			-- upvalues: (ref) v_u_3
			expect(v_u_3.fromComponent(function() end)).to.equal(v_u_3.Function)
		end)
		it("should handle stateful components", function()
			-- upvalues: (ref) v_u_2, (ref) v_u_3
			local v5 = v_u_2:extend("Foo")
			expect(v_u_3.fromComponent(v5)).to.equal(v_u_3.Stateful)
		end)
		it("should handle portals", function()
			-- upvalues: (ref) v_u_3, (ref) v_u_1
			expect(v_u_3.fromComponent(v_u_1)).to.equal(v_u_3.Portal)
		end)
		it("should return nil for invalid inputs", function()
			-- upvalues: (ref) v_u_3
			expect(v_u_3.fromComponent(5)).to.equal(nil)
			expect(v_u_3.fromComponent(newproxy(true))).to.equal(nil)
		end)
	end)
end
