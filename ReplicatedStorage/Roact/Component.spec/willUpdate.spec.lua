-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

return function()
	local v_u_1 = require(script.Parent.Parent.assertDeepEqual)
	local v_u_2 = require(script.Parent.Parent.createElement)
	local v3 = require(script.Parent.Parent.createReconciler)
	local v_u_4 = require(script.Parent.Parent.createSpy)
	local v5 = require(script.Parent.Parent.NoopRenderer)
	local v_u_6 = require(script.Parent.Parent.Type)
	local v_u_7 = require(script.Parent.Parent.Component)
	local v_u_8 = v3(v5)
	it("should be invoked when updated via updateVirtualNode", function()
		-- upvalues: (copy) v_u_7, (copy) v_u_4, (copy) v_u_2, (copy) v_u_8, (copy) v_u_6, (copy) v_u_1
		local v9 = v_u_7:extend("MyComponent")
		local v10 = v_u_4()
		v9.willUpdate = v10.value
		function v9.render(_)
			return nil
		end
		local v11 = v_u_2(v9, {
			["a"] = 5
		})
		local v12 = v_u_8.mountVirtualNode(v11, nil, "Test")
		local v13 = {
			["a"] = 6,
			["b"] = 2
		}
		local v14 = v_u_2(v9, v13)
		v_u_8.updateVirtualNode(v12, v14)
		expect(v10.callCount).to.equal(1)
		local v15 = v10:captureValues("self", "newProps", "newState")
		expect(v_u_6.of(v15.self)).to.equal(v_u_6.StatefulComponentInstance)
		v_u_1(v15.newProps, v13)
		v_u_1(v15.newState, {})
	end)
	it("it should be invoked when updated via setState", function()
		-- upvalues: (copy) v_u_7, (copy) v_u_4, (copy) v_u_2, (copy) v_u_8, (copy) v_u_6, (copy) v_u_1
		local v16 = v_u_7:extend("MyComponent")
		local v_u_17 = nil
		local v18 = v_u_4()
		v16.willUpdate = v18.value
		function v16.init(p_u_19)
			-- upvalues: (ref) v_u_17
			v_u_17 = function(p20)
				-- upvalues: (copy) p_u_19
				p_u_19:setState(p20)
			end
			p_u_19:setState({
				["foo"] = 1
			})
		end
		function v16.render(_)
			return nil
		end
		local v21 = v_u_2(v16)
		v_u_8.mountVirtualNode(v21, nil, "Test")
		expect(v18.callCount).to.equal(0)
		v_u_17({
			["foo"] = 2
		})
		expect(v18.callCount).to.equal(1)
		local v22 = v18:captureValues("self", "newProps", "newState")
		expect(v_u_6.of(v22.self)).to.equal(v_u_6.StatefulComponentInstance)
		v_u_1(v22.newProps, {})
		v_u_1(v22.newState, {
			["foo"] = 2
		})
	end)
end
