-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

return function()
	local v_u_1 = require(script.Parent.Binding)
	local v_u_2 = require(script.Parent.Type)
	local v_u_3 = require(script.Parent.createRef)
	it("should create refs, which are specialized bindings", function()
		-- upvalues: (copy) v_u_3, (copy) v_u_2
		local v4 = v_u_3()
		expect(v_u_2.of(v4)).to.equal(v_u_2.Binding)
		expect(v4.current).to.equal(nil)
	end)
	it("should have a \'current\' field that is the same as the internal binding\'s value", function()
		-- upvalues: (copy) v_u_3, (copy) v_u_1
		local v5 = v_u_3()
		expect(v5.current).to.equal(nil)
		v_u_1.update(v5, 10)
		expect(v5.current).to.equal(10)
	end)
	it("should support tostring on refs", function()
		-- upvalues: (copy) v_u_3, (copy) v_u_1
		local v6 = v_u_3()
		expect(v6.current).to.equal(nil)
		expect((tostring(v6))).to.equal("RoactRef(nil)")
		v_u_1.update(v6, 10)
		expect((tostring(v6))).to.equal("RoactRef(10)")
	end)
	it("should not allow assignments to the \'current\' field", function()
		-- upvalues: (copy) v_u_3, (copy) v_u_1
		local v_u_7 = v_u_3()
		expect(v_u_7.current).to.equal(nil)
		v_u_1.update(v_u_7, 99)
		expect(v_u_7.current).to.equal(99)
		expect(function()
			-- upvalues: (copy) v_u_7
			v_u_7.current = 77
		end).to.throw()
		expect(v_u_7.current).to.equal(99)
	end)
	it("should return the same thing from getValue as its current field", function()
		-- upvalues: (copy) v_u_3, (copy) v_u_1
		local v8 = v_u_3()
		v_u_1.update(v8, 10)
		expect(v8:getValue()).to.equal(10)
		expect(v8:getValue()).to.equal(v8.current)
	end)
end
