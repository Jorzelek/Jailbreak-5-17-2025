-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v1 = game:GetService("ReplicatedStorage")
local v_u_2 = game:GetService("CollectionService")
local v_u_3 = require(v1.MansionRobbery.BossNPCConsts)
return {
	["setMovementState"] = function(p4, p5)
		-- upvalues: (copy) v_u_2, (copy) v_u_3
		local v6 = typeof(p4) == "Instance"
		assert(v6, "Invalid obj passed")
		local v7 = v_u_2:HasTag(p4, v_u_3.TAG_NAME)
		assert(v7, "Obj does not have tag")
		p4:SetAttribute(v_u_3.MOVEMENT_STATE_ATTR_NAME, p5)
		return true
	end,
	["getMovementState"] = function(p8)
		-- upvalues: (copy) v_u_2, (copy) v_u_3
		local v9 = typeof(p8) == "Instance"
		assert(v9, "Invalid obj passed")
		local v10 = v_u_2:HasTag(p8, v_u_3.TAG_NAME)
		assert(v10, "Obj does not have tag")
		return p8:GetAttribute(v_u_3.MOVEMENT_STATE_ATTR_NAME)
	end,
	["getMovementStateChangedSignal"] = function(p11)
		-- upvalues: (copy) v_u_2, (copy) v_u_3
		local v12 = typeof(p11) == "Instance"
		assert(v12, "Invalid obj passed")
		local v13 = v_u_2:HasTag(p11, v_u_3.TAG_NAME)
		assert(v13, "Obj does not have tag")
		return p11:GetAttributeChangedSignal(v_u_3.MOVEMENT_STATE_ATTR_NAME)
	end,
	["setAttackState"] = function(p14, p15)
		-- upvalues: (copy) v_u_2, (copy) v_u_3
		local v16 = typeof(p14) == "Instance"
		assert(v16, "Invalid obj passed")
		local v17 = v_u_2:HasTag(p14, v_u_3.TAG_NAME)
		assert(v17, "Obj does not have tag")
		p14:SetAttribute(v_u_3.ATTACK_STATE_ATTR_NAME, p15)
	end,
	["getAttackState"] = function(p18)
		-- upvalues: (copy) v_u_2, (copy) v_u_3
		local v19 = typeof(p18) == "Instance"
		assert(v19, "Invalid obj passed")
		local v20 = v_u_2:HasTag(p18, v_u_3.TAG_NAME)
		assert(v20, "Obj does not have tag")
		return p18:GetAttribute(v_u_3.ATTACK_STATE_ATTR_NAME)
	end,
	["getAttackStateChangedSignal"] = function(p21)
		-- upvalues: (copy) v_u_2, (copy) v_u_3
		local v22 = typeof(p21) == "Instance"
		assert(v22, "Invalid obj passed")
		local v23 = v_u_2:HasTag(p21, v_u_3.TAG_NAME)
		assert(v23, "Obj does not have tag")
		return p21:GetAttributeChangedSignal(v_u_3.ATTACK_STATE_ATTR_NAME)
	end
}
