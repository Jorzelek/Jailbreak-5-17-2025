-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

function cubicBezier(p1, p2, p3, p4, p5)
	return (1 - p1) ^ 3 * p2 + 3 * (1 - p1) ^ 2 * p1 * p3 + 3 * (1 - p1) * p1 ^ 2 * p4 + p1 ^ 3 * p5
end
function cubicBezierDerivative(p6, p7, p8, p9, p10)
	return 3 * (1 - p6) ^ 2 * (p8 - p7) + 6 * p6 * (1 - p6) * (p9 - p8) + 3 * p6 ^ 2 * (p10 - p9)
end
local v_u_11 = {}
v_u_11.__index = v_u_11
function v_u_11.new(p12)
	-- upvalues: (copy) v_u_11
	local v13 = v_u_11
	local v14 = setmetatable({}, v13)
	v14.keyframes = p12 and { unpack(p12) } or {}
	return v14
end
function v_u_11.UpdateKeyframes(p15, p16)
	table.clear(p15.keyframes)
	table.move(p16, 1, #p16, 1, p15.keyframes)
end
function v_u_11.CalculateSegmentAt(p17, p18)
	local v19 = p18 * (#p17.keyframes - 1)
	local v20 = math.floor(v19) + 1
	local v21 = v19 % 1
	if v20 < 1 then
		v21 = 0
		v20 = 1
	elseif #p17.keyframes <= v20 then
		v20 = #p17.keyframes - 1
		v21 = 1
	end
	return v21, p17.keyframes[v20], p17.keyframes[v20 + 1]
end
function v_u_11.CalculateSpeedAt(p22, p23)
	local v24, v25, v26 = p22:CalculateSegmentAt(p23)
	local v27 = v25.pos
	local v28 = v25.pos + v25.right
	local v29 = v26.pos + v26.left
	local v30 = v26.pos
	local v31 = v27 - v28
	local v32 = v30 - v29
	local v33 = v30.X - v27.X
	local v34 = v31.X
	local v35 = math.abs(v34)
	local v36 = v32.X
	local v37 = math.abs(v36)
	if v33 < v35 then
		v28 = v27 - v33 / v35 * v31
	end
	if v33 < v37 then
		v29 = v30 - v33 / v37 * v32
	end
	local v38 = cubicBezierDerivative(v24, v27, v28, v29, v30)
	local v39 = v38.Y
	local v40 = v38.X ^ 2 + v38.Y ^ 2
	return v39 / math.sqrt(v40)
end
function v_u_11.CalculatePositionAt(p41, p42)
	local v43, v44, v45 = p41:CalculateSegmentAt(p42)
	local v46 = v44.pos
	local v47 = v44.pos + v44.right
	local v48 = v45.pos + v45.left
	local v49 = v45.pos
	local v50 = v46 - v47
	local v51 = v49 - v48
	local v52 = v49.X - v46.X
	local v53 = v50.X
	local v54 = math.abs(v53)
	local v55 = v51.X
	local v56 = math.abs(v55)
	if v52 < v54 then
		v47 = v46 - v52 / v54 * v50
	end
	if v52 < v56 then
		v48 = v49 - v52 / v56 * v51
	end
	return cubicBezier(v43, v46, v47, v48, v49)
end
function v_u_11.CalculateValueAt(p57, p58)
	local v59 = 0
	local v60 = 1
	while v59 + 0.00001 < v60 do
		local v61 = (v59 + v60) / 2
		if p58 < p57:CalculatePositionAt(v61).X then
			v60 = v61
			v61 = v59
		end
		v59 = v61
	end
	local v62 = (v59 + v60) / 2
	return p57:CalculatePositionAt(v62).Y, v62
end
return v_u_11
