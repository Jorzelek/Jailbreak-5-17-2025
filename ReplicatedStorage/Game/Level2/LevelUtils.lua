-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v1 = game:GetService("ReplicatedStorage")
local v_u_2 = require(v1.Game.Season.SeasonConsts)
local v_u_3 = require(script.Parent.LevelConsts)
local v_u_22 = {
	["getLevelValue"] = function(p4)
		-- upvalues: (copy) v_u_3
		local v5 = p4 ~= nil
		assert(v5)
		return p4:FindFirstChild(v_u_3.LEVEL_VALUE_NAME)
	end,
	["yieldLevelValue"] = function(p6)
		-- upvalues: (copy) v_u_3
		local v7 = p6 ~= nil
		assert(v7)
		return p6:WaitForChild(v_u_3.LEVEL_VALUE_NAME)
	end,
	["yieldLevel"] = function(p8)
		-- upvalues: (copy) v_u_22
		local v9 = p8 ~= nil
		assert(v9)
		return v_u_22.yieldLevelValue(p8).Value
	end,
	["getLevel"] = function(p10)
		-- upvalues: (copy) v_u_22
		local v11 = v_u_22.getLevelValue(p10)
		if v11 then
			return v11.Value
		end
	end,
	["getExpValue"] = function(p12)
		-- upvalues: (copy) v_u_3
		local v13 = p12 ~= nil
		assert(v13)
		return p12:FindFirstChild(v_u_3.EXP_VALUE_NAME)
	end,
	["yieldExpValue"] = function(p14)
		-- upvalues: (copy) v_u_3
		local v15 = p14 ~= nil
		assert(v15)
		return p14:WaitForChild(v_u_3.EXP_VALUE_NAME)
	end,
	["yieldExp"] = function(p16)
		-- upvalues: (copy) v_u_22
		local v17 = p16 ~= nil
		assert(v17)
		return v_u_22.yieldExpValue(p16).Value
	end,
	["getExp"] = function(p18)
		-- upvalues: (copy) v_u_22
		local v19 = v_u_22.getExpValue(p18)
		if v19 then
			return v19.Value
		end
	end,
	["yieldTotalExp"] = function(p20)
		-- upvalues: (copy) v_u_22
		local v21 = v_u_22.yieldLevel(p20)
		return v_u_22.calculateExpOfLevel(v21) + v_u_22.yieldExp(p20)
	end
}
local v_u_23 = v_u_3.EFFICIENCY * (v_u_3.AVG_EXP_PER_CONTRACT * v_u_3.CONTRACTS_PER_DAY * v_u_3.TOTAL_DAYS + v_u_3.MAX_DAILY_EXP * v_u_3.TOTAL_DAYS)
local v_u_24 = v_u_3.CURVE_K
function v_u_22.calculateExpNextLevel(p25)
	-- upvalues: (copy) v_u_22
	return v_u_22.calculateExpOfLevel(p25 + 1) - v_u_22.calculateExpOfLevel(p25)
end
function v_u_22.calculateExpOfLevel(p26)
	-- upvalues: (copy) v_u_23, (copy) v_u_2, (copy) v_u_24
	if p26 <= 0 then
		return 0
	end
	local v27 = p26 - 1
	local v28 = v_u_23
	local v29 = v_u_2.MAX_REWARD_LEVEL - 1
	local v30 = v_u_24
	local v31
	if v30 == 1 then
		v31 = v28 / v29
	else
		v31 = v28 * (1 - v30) / (1 - v30 ^ v29)
	end
	local v32
	if v30 == 1 then
		v32 = v31 * v27
	else
		v32 = v31 * (1 - v30 ^ v27) / (1 - v30)
	end
	local v33 = math.floor(v32)
	if v32 - v33 >= 0.5 then
		v33 = v33 + 1
	end
	return v33
end
function v_u_22.calculateLevelFromExp(p34)
	-- upvalues: (copy) v_u_22
	local v35 = 1
	local v36 = 0
	while true do
		v35 = v35 + 1
		local v37 = v_u_22.calculateExpOfLevel(v35)
		if p34 < v37 then
			break
		end
		v36 = v37
	end
	return v35 - 1, p34 - v36
end
return v_u_22
