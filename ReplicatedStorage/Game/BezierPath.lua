-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgMeEEN1YmljQmV6aWVyQ3VydmURREN1YmljQmV6aWVyQ3VydmUJTWFnbml0dWRlJ0FwcHJveGltYXRlVmVjdG9yQ3ViaWNCZXppZXJDdXJ2ZUxlbmd0aAxzZXRtZXRhdGFibGUGUG9pbnRzCU51bVBvaW50cwlMYXN0SW5kZXgLT2Zmc2V0U3RhcnQJT2Zmc2V0RW5kAXQLbGVuZ3RoQ2FjaGUDbmV3BmFzc2VydA1TZXROb2RlT2Zmc2V0FV9yZWNvbXB1dGVMZW5ndGhDYWNoZQlTZXRQb2ludHMIR2V0UG9pbnQEVW5pdBFBcHByb3hpbWF0ZUxlbmd0aARtYXRoBWZsb29yA19wMANfYzADX2MxA19wMQRTdGVwEkdldFdvcmxkUG9zaXRpb25BdAVSZXNldAdfX2luZGV4AA0PBQAAAAAV9QUAAAkLBQUJCgsFCQkKAYwOAwAJDQ4FCQwNBQkLDAAJCgsCQwgJCowNAwAJDA0FCQsMAAkKCwAJCQoDQwcICQkKAAAJCQoACQgJBEMGBwiCBgIAAQIAAAAAAADwPwACAQEYAAEAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAANBQAAAAAT9QUAAIwLAwAJCgsFCQkKBSYKAgEJCAkKjAwGAAkLDAUJCgsAJgsDAgkJCgtDBwgJjAsDAAkKCwAJCQoAJgoEAwkICQpDBgcIggYCAAECAAAAAAAA8D8ABwIBGAABAAAAAAAAAAAAAAAAAAAAAAAIAAAAABQFAAAAAB+MBQAAjAgBAFIGAACMBwEAqAYZAHgKCADsCQoA9Q0ACYwSAwAJERINCRARDSYRAgEJDxARjBMGAAkSEw0JERIJJhIDAgkQERJDDg8QjBIDAAkREgkJEBEJJhEEAwkPEBFDDA4PTQsMqgEAAADsCgsAQwUFCosG5/+CBQIAAgIAAAAAAADwPwMDAAsEARgEAQAAAAEA+gEAAAAAAAAAAAAAAAAAAAAABgAAAP4FCAAAAAADAAEAAAAf/wEEAAAAAAD7AgAAnj0BAwIAAACkAAEAAAAAQJ8AAwLGAQAAMAEALQIAAADGAQAAMAEADAMAAADGAQAAMAEAOAQAAACMAQAAMAEA5wUAAACMAQAAMAEAtwYAAACMAQAAMAEAlQcAAAD/AQAAAAAAADABAG0IAAAAggACAAkDBQQAAABAAwYDBwMIAwkDCgMLAwwAFw0BGAAAAAAAAAAAAQAAAQAAAQAAAQAAAQAAAQAAAQAAAAEYAAAAAAUDAAAAAA+7AQEDUgQBAKQDAQAAAABAnwMCAbsBAgNSBAIApAMBAAAAAECfAwIBMAEA5wIAAAAwAgC3AwAAAIIAAQAEAw4EAAAAQAMJAwoAIg8BGAAAAAAAAQAAAAABAAEAASMAAAAABAIAAAAACTABAC0AAAAAHAIBADACAAwBAAAAvAIAmQIAAACfAgIBggABAAMDBgMHAxAAKBEBGAAAAQAAAQAAAikAAAAAEAEBAAAAMIwDAQBNAQAMAAAAAIwCAQCoASoAUgYDALwEALoBAAAAnwQDApUHAwK8BQC6AQAAAJ8FAwImBwUETQYHqgMAAAB4DgMCvAwAugEAAACfDAMCJgsFDE0KCwcFAAAACQkKBj4ICQRDBwQIlQ8DBrwNALoBAAAAnw0DAiYMDQRNCwwHBQAAAAkKCwY+CQoEJggFCU0JAG0HAAAA+woAAIwLECdSDAQAUg0HAFIOCABSDwUAnwoGAmoKCQOLAdb/ggABAAgDBwMSAgAAAAAAAPA/AwMCAAAAAAAACEADEwIAAAAAAAAAQAMMAC4QARgAAAAAAAEAAAABAAAAAQAAAQAAAAAAAAAAAAEAAAAAAAAAAAABAAAAAAAAAAAA+ggvAAAAAAgCAAAAAAlNAwAtAAAAAHgGAQFNBwAMAgAAAM8FBgeVBAUBhwIDBIICAgADAwYCAAAAAAAA8D8DBwA4EgEYAAAAAAAAAAAAOQAAAAASAgEAAAA0jAIAAE0GAOcBAAAAlQUGAE0GAAwCAAAATQcAtwMAAAAmAwYHjAQBAKgDKABSCAUAvAYAugQAAACfBgMClQkFALwHALoEAAAAnwcDAiYJBwZNCAmqBQAAAHgQBQC8DgC6BAAAAJ8OAwImDQcOTQwNBwcAAAAJCwwIPgoLBkMJBgqVEQUIvA8AugQAAACfDwMCJg4PBk0NDgcHAAAACQwNCD4LDAYmCgcL+wsAAFIMAQBSDQYAUg4JAFIPCgBSEAcAnwsGAkMCAguLA9j/ggICAAkCAAAAAAAA8D8DCQMHAwoDEgMDAgAAAAAAAAhAAxMCAAAAAAAAAEAAOxQBGAABAAAAAAAAAAAAAQAAAAEAAAABAAABAAAAAAAAAAAAAQAAAAAAAAAAAAEAAAAAAAAA+gg8AAAAABoCAAAAAJQBTQIAlQAAAABNBwAMAQAAAE0IAOcCAAAAJgYHCE0HALcDAAAAJgUGBwkEAgVNBQDnAgAAAEMDBAUhBAMEuwwDA1IHAwCkBgcAABhQgJ8GAgKVBQYExgYAAMYHAADGCAAAxgkAAE0KADgIAAAAmgoKAAUAAABNBgC/CQAAAE0HAAgKAAAATQgAwQsAAABNCQD2DAAAAGUAKQBSDAUAvAoAug0AAACfCgMCUgYKAJUMBQS8CgC6DQAAAJ8KAwJSCQoAJgsJBk0KC6oOAAAAeBEFBLwPALoNAAAAnw8DAiYOCQ9NDQ4HEAAAAAkMDQo+CwwPQwcGC5URBRG8DwC6DQAAAJ8PAwImDg8GTQ0OBxAAAAAJDA0KPgsMDyYICQswBgC/CQAAADAHAAgKAAAAMAgAwQsAAAAwCQD2DAAAADAFADgIAAAAUgsGAFIMBwBSDQgAUg4JAPUPBASMFAMACRMUDwkSEw8mEwwLCRESE4wVBgAJFBUPCRMUBCYUDQwJEhMUQxAREowUAwAJExQECRITBCYTDg0JERITQwoQEU0LCqoOAAAAUg0GAFIOBwBSDwgAUhAJAPURBAQJFhERCRUWEQkUFQ2MGQMACRgZEQkXGBEJFhcECRUWDkMTFBWMGAMACRcYEQkWFwQJFRYECRQVD0MSExQJFQQECRQVBAkTFBBDDBITjA0AAGANDgALAAAA7A0BC00SAAwBAAAATRMA5wIAAAAmERITTRIAtwMAAAAmEBES7A8NEEMOAg8wDgCVAAAAAFINDABSDgoAgg0DABIDCwMHAwkDCgIAAAAAAADwPwMVAxYEABhQgAMIAxcDGAMZAxoDEgMDAgAAAAAAAAhAAxMCAAAAAAAAAEAAShsBGEcAAQAAAAAAAAAAAAAAAgIAAAAAAAEAAAABAAAAAQAAAAAAAAAAAgAAAAABAAAAAAMAAAEAAAAAAAAAAAABAAAAAAAAAAAAAQAAAAAAAAACAAIAAACoAQAAAAAAAAAAAAAAAAAAAABYAAEAAACiAQAAAAAAAAAAAAAAAAAAAAAAAF4AAAMCAAAAAAAAAAAAAAACAAAEAAAAABcCAQAAAHOMAwEATQQA5wAAAABDAgMEjAMAAMYEAADGBQAAxgYAAMYHAABSCgIAvAgAugEAAACfCAMCUgQIAJUKAgK8CAC6AQAAAJ8IAwJSBQgAJgkFBE0ICaoDAAAAeA8CArwNALoBAAAAnw0DAiYMBQ1NCwwHBQAAAAkKCwg+CQoEQwYECZUPAga8DQC6AQAAAJ8NAwImDA0ETQsMBwUAAAAJCgsIPgkKBCYHBQlNCgBtBwAAAHgNAgJNDgAMCAAAAM8MDQ6VCwwChwkKCysJCAD7CgAAjAsQJ1IMBABSDQYAUg4HAFIPBQCfCgYCUgkKAGABAwAJAAAA7AMBCWUAAwAmAQEJlQICAkgAx/9SCQMAUgoEAFILBgBSDAcAUg0FAPUOAgkJEw4OCRITDgkREgqMFgMACRUWDgkUFQ4JExQJCRITC0MQERKMFQMACRQVDgkTFAkJEhMJCRESDEMPEBEJEgkJCRESCQkQEQ1DCA8QUgoDAFILBABSDAYAUg0HAFIOBQD1DwIKjBQDAAkTFA8JEhMPJhMMCwkREhOMFQYACRQVDwkTFAomFA0MCRITFEMQERKMFAMACRMUCgkSEwomEw4NCRESE0MJEBGCCAMACQMJAxICAAAAAAAA8D8DAwIAAAAAAAAIQAMTAgAAAAAAAABAAwwDBwBxHAEYbgAAAAEBAAAAAgAAAAABAAAAAAEAAAEAAAAAAAAAAAABAAAAAAAAAAAAAgAAAAAAAAABAQAAAAAAAAACAAEBAgLvEwAAAAB8AQAAAAAAAAAAAAAAAAAAAAAAAIQAAAAAfwEAAAAAAAAAAAAAAAAAAAAAgQQAAAAABQEAAAAAE4wBAAAwAQCVAAAAAMYBAADGAgAAxgMAAMYEAAAwAQC/AQAAADACAAgCAAAAMAMAwQMAAAAwBAD2BAAAAMYBAAAwAQA4BQAAAIIAAQAGAwsDFwMYAxkDGgMIAIwBHQEYAAAAAQAAAAAAAAAAAAAAAQAAAY0AAAAABQAAAQIAKKMAAADAAAAAwAEBAMACAgD/AwUAAAAAADADA24DAAAAwAQEABIAAwAwBAPvBQAAAMAEBgAwBANfBwAAAMAECAAwBAP+CQAAAMAECgASAAIAMAQDmQsAAADABAwAMAQDug0AAADABA4AEgACADAEA6QPAAAAwAQQADAEA6YRAAAAwAQSABIAAgAwBAN/EwAAAMAEFAAwBAN/FQAAAIIDAgAWBgAGAQYCAx4GAwMNBgQDDwYFAxEGBgMQBgcDEgYIAxQGCQMbBgoDHAYLAx0MAAECAwQFBgcICQoLAQABGAABBQQKAAEAAQAAAAsAAAYAAAYAAAAKAAADAAAADwAAJwAAABsAAAYBAAAAAAyAFCyepqonzbLQRgqELk4tNiQHhHO1Bm1fu50RW2FA+bULzokumUmr

-- Decompiled by Krnl

local function v_u_10(p1, p2, p3, p4, p5)
	local v6 = 0
	for v7 = 1, p1 do
		local v8 = (v7 - 1) / p1
		local v9 = 1 - v8
		v6 = v6 + (3 * v9 * v9 * (p3 - p2) + 6 * v9 * v8 * (p4 - p3) + 3 * v8 * v8 * (p5 - p4)).Magnitude / p1
	end
	return v6
end
local v_u_11 = {}
v_u_11.__index = v_u_11
function v_u_11.new()
	-- upvalues: (copy) v_u_11
	local v12 = v_u_11
	local v13 = setmetatable({}, v12)
	v13.Points = nil
	v13.NumPoints = nil
	v13.LastIndex = nil
	v13.OffsetStart = 0
	v13.OffsetEnd = 0
	v13.t = 0
	v13.lengthCache = {}
	return v13
end
function v_u_11.SetNodeOffset(p14, p15, p16)
	assert(p15)
	assert(p16)
	p14.OffsetStart = p15
	p14.OffsetEnd = p16
end
function v_u_11.SetPoints(p17, p18)
	p17.Points = p18
	p17.NumPoints = #p18
	p17:_recomputeLengthCache()
end
function v_u_11._recomputeLengthCache(p19)
	-- upvalues: (copy) v_u_10
	for v20 = 1, p19.NumPoints do
		local v21 = p19:GetPoint(v20)
		local v22 = p19:GetPoint(v20 + 1)
		local v23 = (v22 - v21).Magnitude
		local v24 = v21 + (v22 - p19:GetPoint(v20 - 1)).Unit * v23 / 3
		local v25 = v22 - (p19:GetPoint(v20 + 2) - v21).Unit * v23 / 3
		p19.lengthCache[v20] = v_u_10(10000, v21, v24, v25, v22)
	end
end
function v_u_11.GetPoint(p26, p27)
	return p26.Points[(p27 - 1) % p26.NumPoints + 1]
end
function v_u_11.ApproximateLength(p28, p29)
	-- upvalues: (copy) v_u_10
	local v30 = 0
	for v31 = p28.OffsetStart + 1, p28.NumPoints - p28.OffsetEnd do
		local v32 = p28:GetPoint(v31)
		local v33 = p28:GetPoint(v31 + 1)
		local v34 = (v33 - v32).Magnitude
		v30 = v30 + v_u_10(p29, v32, v32 + (v33 - p28:GetPoint(v31 - 1)).Unit * v34 / 3, v33 - (p28:GetPoint(v31 + 2) - v32).Unit * v34 / 3, v33)
	end
	return v30
end
function v_u_11.Step(p35, p36)
	local v37 = p35.t
	local v38 = v37 * (p35.NumPoints - p35.OffsetStart - p35.OffsetEnd) + p35.OffsetStart
	local v39 = v38 % 1
	local v40 = math.floor(v38) + 1
	local v41, v42, v43, v44
	if p35.LastIndex == v40 then
		v41 = p35._p0
		v42 = p35._c0
		v43 = p35._c1
		v44 = p35._p1
	else
		v41 = p35:GetPoint(v40)
		v44 = p35:GetPoint(v40 + 1)
		local v45 = (v44 - v41).Magnitude
		v42 = v41 + (v44 - p35:GetPoint(v40 - 1)).Unit * v45 / 3
		v43 = v44 - (p35:GetPoint(v40 + 2) - v41).Unit * v45 / 3
		p35._p0 = v41
		p35._c0 = v42
		p35._c1 = v43
		p35._p1 = v44
	end
	p35.LastIndex = v40
	local v46 = 1 - v39
	local v47 = 3 * v46 * v46 * (v42 - v41) + 6 * v46 * v39 * (v43 - v42) + 3 * v39 * v39 * (v44 - v43)
	local v48 = v47.Magnitude
	local v49 = 1 - v39
	local v50 = v49 * v49 * v49 * v41 + 3 * v49 * v49 * v39 * v42 + 3 * v49 * v39 * v39 * v43 + v39 * v39 * v39 * v44
	if v48 > 0 then
		p35.t = v37 + p36 / v48 / (p35.NumPoints - p35.OffsetStart - p35.OffsetEnd)
	end
	return v50, v47
end
function v_u_11.GetWorldPositionAt(p51, p52)
	-- upvalues: (copy) v_u_10
	local v53 = 1 + p51.OffsetStart
	while true do
		local v54 = p51:GetPoint(v53)
		local v55 = p51:GetPoint(v53 + 1)
		local v56 = (v55 - v54).Magnitude
		local v57 = v54 + (v55 - p51:GetPoint(v53 - 1)).Unit * v56 / 3
		local v58 = v55 - (p51:GetPoint(v53 + 2) - v54).Unit * v56 / 3
		local v59 = p51.lengthCache[(v53 - 1) % p51.NumPoints + 1] or v_u_10(10000, v54, v57, v58, v55)
		if p52 < v59 then
			break
		end
		p52 = p52 - v59
		v53 = v53 + 1
	end
	local v60 = p52 / v59
	local v61 = 1 - v60
	local v62 = v61 * v61 * v61 * v54 + 3 * v61 * v61 * v60 * v57 + 3 * v61 * v60 * v60 * v58 + v60 * v60 * v60 * v55
	local v63 = 1 - v60
	return v62, 3 * v63 * v63 * (v57 - v54) + 6 * v63 * v60 * (v58 - v57) + 3 * v60 * v60 * (v55 - v58)
end
function v_u_11.Reset(p64)
	p64.t = 0
	p64._p0 = nil
	p64._c0 = nil
	p64._c1 = nil
	p64._p1 = nil
	p64.LastIndex = nil
end
return v_u_11
