-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 

-- Decompiled by Krnl

local v_u_1 = game:GetService("Players")
local v_u_2 = v_u_1.LocalPlayer
local v_u_3 = game:GetService("MarketplaceService")
local v_u_4 = game:GetService("ReplicatedStorage")
local v_u_5 = require(v_u_4.Std.Audio)
local v_u_6 = require(v_u_4.Std.waitForChild)
local v_u_7 = require(v_u_4.Resource.Settings)
local v_u_8 = require(v_u_4.Std.Maid)
local v_u_9 = require(v_u_4.Game.Notification)
local v_u_10 = require(v_u_4.Std.Interval)
local v_u_11 = require(v_u_4.Game.Level2.LevelSystem)
local v_u_12 = require(v_u_4.Game.Level2.LevelUtils)
local v_u_13 = require(v_u_4.Module.Window.Window)
local v_u_14 = require(v_u_4.Game.GameUtil)
local v_u_15 = require(v_u_4.App.RunUtils)
local v_u_16 = require(v_u_4.EzUi.EzUtils)
local v_u_17 = require(v_u_4.EzUi.Utils)
local v_u_18 = require(v_u_4.Game.Contract.ContractUtils)
local v_u_19 = require(v_u_4.Game.Level2.LevelConsts)
local v_u_20 = require(v_u_4.Game.Season.SeasonUIUtils)
local v_u_21 = require(script.Parent.SeasonConsts)
local v_u_22 = require(script.Parent.SeasonUtils)
local v_u_23 = nil
local v_u_24 = nil
local v_u_72 = {
	["init"] = function()
		-- upvalues: (ref) v_u_23, (ref) v_u_24, (copy) v_u_4, (copy) v_u_2, (copy) v_u_72, (copy) v_u_21, (copy) v_u_13, (copy) v_u_14, (copy) v_u_6
		v_u_23 = require(script.Parent.SeasonSystem)
		v_u_24 = require(v_u_4.Game.Contract.ContractUISystem)
		local v25 = v_u_4.StarterGui:FindFirstChild("SeasonGui")
		v25.Parent = v_u_2.PlayerGui
		v_u_72.gui = v25
		v_u_72._seasonState = -1
		v25.Background.Title.Frame.SeasonNumWelcome.Text = ("Welcome to SEASON %d"):format(v_u_21.SEASON_NUM)
		v25.Background.Title.Frame.SeasonNumWelcome.TextLabel.Text = v25.Background.Title.Frame.SeasonNumWelcome.Text
		v25.Background.Title.Frame.SeasonTitle.Text = v_u_21.SEASON_TITLE
		local v26 = v_u_13.new()
		v26:GetOnOpenedSignal():Connect(v_u_72._open)
		v26:GetOnClosedSignal():Connect(v_u_72._close)
		v_u_72._window = v26
		v_u_14.getCenterWindowGroup():Add(v26)
		v_u_6(v_u_4, v_u_21.PRIZE_PURCHASE_REMOTE_NAME, 30):andThen(function(p27)
			-- upvalues: (ref) v_u_23
			v_u_23._prizePurchaseRemote = p27
		end):catch(warn)
		v25.Background.BonusAwards.Visible = v_u_21.SEASON_BONUS_ENABLED
	end,
	["_updateSeasonUi"] = function(p28)
		-- upvalues: (copy) v_u_72, (copy) v_u_21
		v_u_72._seasonState = p28
		local v29 = v_u_72.gui
		if p28 == 0 then
			v29.Background.Timer.Title.Text = "SEASON ENDS"
			v29.Background.Help.Text = v_u_21.SEASON_SUBTITLE
			v29.Background.Bottom.Container.ReviewButton.TextLabel.Text = "CONTRACTS"
			return
		elseif p28 == 1 then
			v29.Background.Timer.Title.Text = "BUYING ENDS"
			v29.Background.Help.Text = v_u_21.BUY_SUBTITLE
			v29.Background.Bottom.Container.ReviewButton.TextLabel.Text = "COMING SOON"
			return
		elseif p28 == 2 then
			v29.Background.Timer.Title.Text = "SEASON ENDS"
			v29.Background.Help.Text = v_u_21.POST_SUBTITLE
			v29.Background.Bottom.Container.ReviewButton.TextLabel.Text = "COMING SOON"
		else
			error(("Invalid season state: %d"):format(p28))
		end
	end,
	["_updateDeadline"] = function()
		-- upvalues: (copy) v_u_72, (copy) v_u_22, (copy) v_u_21, (copy) v_u_18, (copy) v_u_19
		local v30 = v_u_72.gui
		local v31 = v_u_22.getRemainingTime()
		local v32 = v31 < 0
		local v33 = v_u_22.isBuyEnabled()
		if v33 then
			local v34 = v_u_22.getRemainingBuyTime()
			local v35 = v_u_22.formatRemaining(v34)
			v30.Background.Timer.Time.Text = v35
		else
			local v36 = v_u_22.formatRemaining(v31)
			v30.Background.Timer.Time.Text = v36
		end
		local v37 = (v32 or v33) and (v33 and 1 or 2) or 0
		if v_u_72._seasonState ~= v37 then
			v_u_72._updateSeasonUi(v37)
		end
		local v38 = v30.Background.Body.Line.Container
		for v39 = 2, v_u_21.MAX_REWARD_LEVEL do
			local v40 = v38:FindFirstChild(("%02d"):format(v39)).Reward:FindFirstChild("Buy")
			if v40 then
				v40.Visible = v33
			end
		end
		local v41 = v30.Background.DailyExpRefreshHelp
		local v42 = v_u_18.getQuantizedBlock(v_u_19.DAILY_EXP_DURATION, v_u_19.DAILY_EXP_DURATION_OFFSET)
		v41.Text = ("Daily XP reloads in <font color=\"rgb(255, 207, 0)\">%s</font>!"):format(v_u_22.formatRemaining(v42 - workspace:GetServerTimeNow()))
	end,
	["_open"] = function()
		-- upvalues: (copy) v_u_72, (copy) v_u_8, (copy) v_u_17, (copy) v_u_10, (copy) v_u_2, (copy) v_u_11, (ref) v_u_23, (copy) v_u_22, (copy) v_u_5, (ref) v_u_24, (copy) v_u_16, (copy) v_u_21, (copy) v_u_15, (copy) v_u_9, (copy) v_u_7, (copy) v_u_3, (copy) v_u_20
		local v43 = v_u_72._maid == nil
		assert(v43)
		local v44 = v_u_8.new()
		v_u_72._maid = v44
		local v_u_45 = v_u_72.gui
		if v_u_17.isSmallScreen() then
			v_u_45.Background.BonusAwards.Position = UDim2.new(-0.15, 0, 0, 2)
		else
			v_u_45.Background.BonusAwards.Position = UDim2.new(1.01, 0, 0, 2)
		end
		v_u_45.Enabled = true
		v44:GiveTask(function()
			-- upvalues: (copy) v_u_45
			v_u_45.Enabled = false
		end)
		v44:GiveTask(v_u_10.every(1):Connect(v_u_72._updateDeadline))
		v_u_72._updateDeadline()
		v_u_72.updateProgress(v_u_2)
		v44:GiveTask(v_u_11.getOnLevelChangedSignal():Connect(v_u_72.updateProgress))
		v44:GiveTask(v_u_11.getOnExpChangedSignal():Connect(v_u_72.updateProgress))
		v44:GiveTask(v_u_23.getSeasonPassOwnedSignal():Connect(function(p46)
			-- upvalues: (ref) v_u_2, (ref) v_u_72
			if p46 == v_u_2 then
				v_u_72.updateProgress(v_u_2)
			end
		end))
		v44:GiveTask(v_u_45.Background.Bottom.Container.ReviewButton.MouseButton1Down:Connect(function()
			-- upvalues: (ref) v_u_22, (ref) v_u_5, (ref) v_u_2, (ref) v_u_72, (ref) v_u_24
			if v_u_22.getRemainingTime() >= 0 then
				v_u_5.ObjectLocal(v_u_2.PlayerGui, 6105461542)
				v_u_72.close()
				v_u_24.open()
			end
		end))
		local v47 = v_u_45.Background.Bottom.Container.ReviewButton
		v_u_16.selectIfGamepad(v47)
		v_u_45.Background.Bottom.Container.SeasonPass.Title.Text = ("SEASON %d: %s"):format(v_u_21.SEASON_NUM, v_u_21.SEASON_TITLE)
		v44:GiveTask(v_u_45.Background.Bottom.Container.SeasonPass.MouseButton1Down:Connect(function()
			-- upvalues: (ref) v_u_15, (ref) v_u_22, (ref) v_u_9, (ref) v_u_5, (ref) v_u_2, (ref) v_u_7, (ref) v_u_23, (ref) v_u_3
			if v_u_15.isStudio() or v_u_22.getRemainingTime() > 0 then
				v_u_5.ObjectLocal(v_u_2.PlayerGui, 6105461542)
				local v48 = v_u_7.getFirstProductByType("SeasonPass")
				local v49 = v48 ~= nil
				assert(v49)
				if not v_u_23.doesPlayerOwnSeasonPass(v_u_2) then
					v_u_3:PromptProductPurchase(v_u_2, v48.Id)
				end
			else
				v_u_9.new({
					["Text"] = "Season is over! Wait until next season."
				})
			end
		end))
		v_u_20.hookGiftContainer(v_u_45.Background.GiftContainer, v44)
		if v_u_23.doesPlayerOwnSeasonPass(v_u_2) then
			v_u_45.Background.Bottom.Container.SeasonPass.Buy.Visible = false
			v_u_45.Background.Bottom.Container.SeasonPass.Price.Visible = false
			v_u_45.Background.Bottom.Container.SeasonPass.Owned.Visible = true
		else
			v44:GiveTask(v_u_23.getSeasonPassOwnedSignal():Connect(function(p50)
				-- upvalues: (ref) v_u_2, (copy) v_u_45
				if p50 == v_u_2 then
					v_u_45.Background.Bottom.Container.SeasonPass.Buy.Visible = false
					v_u_45.Background.Bottom.Container.SeasonPass.Price.Visible = false
					v_u_45.Background.Bottom.Container.SeasonPass.Owned.Visible = true
				end
			end))
		end
		v44:GiveTask(v_u_45.Background.Close.MouseButton1Down:Connect(v_u_72.close))
		local function v54()
			-- upvalues: (ref) v_u_7, (copy) v_u_45
			local v51 = v_u_7.getFirstProductByType("SeasonPass")
			if v51 and v51.Robux then
				local v52 = v_u_45.Background.Bottom.Container.SeasonPass.Price
				local v53 = v51.Robux
				v52.Text = tostring(v53)
			end
		end
		local v55 = v_u_7.getFirstProductByType("SeasonPass")
		if v55 and v55.Robux then
			local v56 = v_u_45.Background.Bottom.Container.SeasonPass.Price
			local v57 = v55.Robux
			v56.Text = tostring(v57)
		end
		v_u_7.OnProductsFetched:Connect(v54)
		local v58 = v_u_45.Background.Body.Line.Container
		for v59 = 2, v_u_21.MAX_REWARD_LEVEL do
			local v60 = v_u_23.getClientLevelAward(v59)
			v58:FindFirstChild(("%02d"):format(v59)).Reward.Icon.Image = ("rbxassetid://%d"):format(v60.imageId)
		end
		local v61 = v_u_45.Background.BonusAwards.Container
		for v62 = 1, v_u_21.NUM_BONUS_AWARDS do
			local v63 = v_u_23.getClientBonusAward(v62)
			local v64 = v61:FindFirstChild(("Bonus%02d"):format(v62))
			v64.Icon.Image = ("rbxassetid://%d"):format(v63.imageId)
			v64.Desc.Text = ("TOP %d%%"):format(v63.scoreLte * 100)
		end
		if v_u_21.SEASON_BONUS_ENABLED then
			local v65 = v_u_2:FindFirstChild("SeasonBonusScore")
			local v66 = not v65 and "CHECK LATER..." or ("YOU: TOP %.2f%%"):format(v65.Value * 100)
			v_u_45.Background.BonusAwards.Score.Text = v66
		end
	end,
	["_close"] = function()
		-- upvalues: (copy) v_u_72
		local v67 = v_u_72._maid ~= nil
		assert(v67)
		local v68 = v_u_72._maid
		v_u_72._maid = nil
		v68:Destroy()
	end,
	["open"] = function()
		-- upvalues: (copy) v_u_72
		v_u_72._window:Open()
	end,
	["close"] = function()
		-- upvalues: (copy) v_u_72
		v_u_72._window:Close()
	end,
	["updateProgress"] = function(p69)
		-- upvalues: (copy) v_u_2, (copy) v_u_12, (copy) v_u_72
		if p69 == v_u_2 then
			local v70 = v_u_12.yieldLevel(p69)
			local v71 = v_u_12.yieldExp(p69)
			v_u_72.setProgress(v70, v71)
		end
	end
}
local function v_u_81(p73, p74, p75)
	-- upvalues: (copy) v_u_21
	local v76 = p73.Parent
	if v76 ~= nil then
		local v77 = v76.Size.X.Scale
		local v78 = (v77 - 1) * (1 / v77) / 2
		local v79 = (p74 - 1) / (v77 * (v_u_21.MAX_REWARD_LEVEL - 1)) + v78
		if p75 then
			local v80 = (p75 - 1) / (v77 * (v_u_21.MAX_REWARD_LEVEL - 1)) + v78
			v79 = v79 - v80
			p73.Position = UDim2.new(UDim.new(v80, p73.Position.X.Offset), p73.Position.Y)
		end
		p73.Size = UDim2.new(UDim.new(v79, p73.Size.X.Offset), p73.Size.Y)
		p73.Visible = true
	end
end
function v_u_72.setProgress(p82, p83)
	-- upvalues: (copy) v_u_19, (ref) v_u_23, (copy) v_u_2, (copy) v_u_22, (copy) v_u_1, (copy) v_u_21, (copy) v_u_72, (copy) v_u_12, (copy) v_u_81
	local v84 = v_u_19.MAX_DAILY_EXP
	if v_u_23.doesPlayerOwnSeasonPass(v_u_2) then
		v84 = v_u_19.MAX_DAILY_EXP_SEASON_PASS
	end
	local v85 = v84 * v_u_22.getSeasonExpMult()
	local v86 = v_u_1.LocalPlayer:FindFirstChild(v_u_19.DAILY_EXP_VALUE_NAME)
	if v86 then
		v85 = v85 - v86.Value
	end
	local v87 = v_u_22.getRemainingTime() < 0 and 0 or v85
	if v_u_21.MAX_REWARD_LEVEL <= p82 then
		p82 = v_u_21.MAX_REWARD_LEVEL
		p83 = 0
	end
	local v88 = v_u_72.gui
	local v89 = p82 + p83 / v_u_12.calculateExpNextLevel(p82)
	local v90, v91 = v_u_12.calculateLevelFromExp(v_u_12.calculateExpOfLevel(p82) + p83 + v87)
	if v_u_21.MAX_REWARD_LEVEL <= v90 then
		v90 = v_u_21.MAX_REWARD_LEVEL
		v91 = 0
	end
	local v92 = v90 + v91 / v_u_12.calculateExpNextLevel(v90)
	v_u_81(v88.Background.Body.Line.Bg.Progress1, v89)
	v_u_81(v88.Background.Body.Line.Bg.Progress2, v92, v89)
end
return v_u_72
