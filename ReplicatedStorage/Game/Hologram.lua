-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgN+BnN0cmluZwVtYXRjaBVeKFteJWRdKiVkKSglZCopKC4tKSQHcmV2ZXJzZQgoJWQlZCVkKQMlMSwEZ3N1YgVjb21tYQABLQxHZW5lcmFsLkNhc2gLRm9ybWF0QnlLZXkLRm9ybWF0TW9uZXkFU2NhbGUFTm9kZXMGQ2VudGVyBU1vZGVsCkxhc3RSZW5kZXILUGxheWVyTm9kZXMGQ0ZyYW1lA25ldwhJbnN0YW5jZQhIb2xvZ3JhbQROYW1lCXdvcmtzcGFjZQZQYXJlbnQKTWFrZVN5c3RlbQV0YWJsZQZyZW1vdmUHRGVzdHJveQ1EZXN0cm95U3lzdGVtBFBhcnQBcgFnAWIGQ29sb3IzBUNvbG9yDFNlbGVjdGlvbkJveAxTZXROb2RlQ29sb3IMVHJhbnNwYXJlbmN5BEVudW0ITWF0ZXJpYWwNU21vb3RoUGxhc3RpYwpDYW5Db2xsaWRlCEFuY2hvcmVkClRvcFN1cmZhY2UNQm90dG9tU3VyZmFjZQdBZG9ybmVlDUxpbmVUaGlja25lc3MNQ29uc3RydWN0Tm9kZQFjAXMITWFrZU5vZGUJTWFnbml0dWRlEkhvcml6b250YWxEaXN0YW5jZQRuZXh0CFBvc2l0aW9uCkNsb3NlVG9BbnkEQmFuawZpbnNlcnQJTXVsdGlBQUJCBG1hdGgGcmFuZG9tBWZsb29yB2Zyb21SR0IRU2ltcGxpZnlDaXR5UGFydHMLR2V0Q2hpbGRyZW4NU2ltcGxpZnlUcmVlcwNMb2MNU2ltcGxpZnlFeHRyYQR0aWNrAXAJX2xhc3RTaXplBFNpemUDY29zCkdldFBsYXllcnMJQ2hhcmFjdGVyC1ByaW1hcnlQYXJ0CElzUG9saWNlBkFuZ2xlcwlUZWFtVmFsdWUORmluZEZpcnN0Q2hpbGQFVmFsdWUGUG9saWNlCUJvdW50eUd1aQ5Ib2xvZ3JhbUJvdW50eQhSZXNvdXJjZQVDbG9uZQVGcmFtZQZQbGF5ZXILRGlzcGxheU5hbWUEVGV4dAZCb3VudHkHVmlzaWJsZQpUZXh0Q29sb3IzDFJlbmRlclN5c3RlbQhwdXBqdHFkeAhBZGRlZEZ1bgpSZW1vdmVkRnVuBWRlYnVnDHByb2ZpbGViZWdpbgFYAVkMQnVpbGRpbmdOZW9uCUdldFRhZ2dl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AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAQAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAABAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPP///8AAAAAEAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAEAAAAAAAAAAQAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAQAAAAIAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP3///8AAAAABQAAAAAAAAAAAAAAAAAAAAEAAAAB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

-- Decompiled by Krnl

local v_u_1 = game:GetService("ReplicatedStorage")
local v_u_2 = game:GetService("CollectionService")
local v_u_3 = require(v_u_1.Module.Logic)
local v_u_4 = game:GetService("RunService")
local v_u_5 = game:GetService("Players")
local _ = v_u_5.LocalPlayer
local v_u_6 = workspace.CurrentCamera
local v_u_7 = require(v_u_1.Module.Localization)
local v_u_8 = math.abs
local function v_u_10()
	local v9 = {
		["Scale"] = 0.015625,
		["Nodes"] = {},
		["Center"] = CFrame.new(),
		["Model"] = Instance.new("Model"),
		["LastRender"] = 0,
		["PlayerNodes"] = {}
	}
	v9.Model.Name = "Hologram"
	v9.Model.Parent = workspace
	return v9
end
local v_u_11 = {}
local function v_u_14(p12)
	-- upvalues: (copy) v_u_11
	for v13 = #v_u_11, 1, -1 do
		if v_u_11[v13] == p12 then
			table.remove(v_u_11, v13)
			break
		end
	end
	p12.Model:Destroy()
end
local function v_u_23(p15, p16)
	local v17 = Instance.new("Part")
	v17.Transparency = 0
	v17.Material = Enum.Material.SmoothPlastic
	v17.CanCollide = false
	v17.Anchored = true
	v17.TopSurface = 0
	v17.BottomSurface = 0
	local v18 = Instance.new("SelectionBox")
	v18.Parent = v17
	v18.Adornee = v17
	v18.LineThickness = 0.0001
	p15.Part = v17
	local v19 = p15.Part
	local v20 = p16.r
	local v21 = p16.g
	local v22 = p16.b
	v19.Color = Color3.new(v20, v21, v22)
	v19.SelectionBox.Color3 = Color3.new(v20 + 0.2, v21 + 0.2, v22 + 0.2)
end
local function v_u_24()
	-- upvalues: (copy) v_u_3, (copy) v_u_23
	-- failed to decompile
end
local v_u_25 = {}
local v26 = {
	["Color"] = Color3.fromRGB(255, 176, 0),
	["Loc"] = {
		{
			["c"] = CFrame.new(-1306.4353, 27.0160275, -1588.15491, 0, 0, 0.999999821, 0, 1, 0, -0.999999821, 0, 0),
			["s"] = Vector3.new(70.69997, 22.100002, 104.200005)
		},
		{
			["c"] = CFrame.new(-1418.48523, 35.1660271, -1790.30481, 0, 0, 0.999999821, 0, 1, 0, -0.999999821, 0, 0),
			["s"] = Vector3.new(238.19997, 38.4, 130.3)
		},
		{
			["c"] = CFrame.new(-1180.7854, 27.0160275, -1583.95483, 0, 0, 0.999999821, 0, 1, 0, -0.999999821, 0, 0),
			["s"] = Vector3.new(62.299965, 22.100002, 97.70001)
		},
		{
			["c"] = CFrame.new(-1159.08545, 36.4160271, -1572.70496, 0, 0, 0.999999821, 0, 1, 0, -0.999999821, 0, 0),
			["s"] = Vector3.new(57.59996, 40.9, 54.30001)
		}
	}
}
local v27 = {
	["Color"] = Color3.fromRGB(33, 84, 185),
	["Loc"] = {
		{
			["c"] = CFrame.new(-1414.62683, 29.2624836, 240.934875, 0.974374056, 0, -0.224932864, 0, 1, 0, 0.224932864, 0, 0.974374056),
			["s"] = Vector3.new(72.1, 18.149998, 21.249998)
		},
		{
			["c"] = CFrame.new(1626.70471, 23.6678162, 321.181366, -0.0703834072, 3.45619391e-8, 0.997519851, 1.21779853e-9, 1, -3.45619462e-8, -0.99752003, -1.21779953e-9, -0.0703832731),
			["s"] = Vector3.new(98.69996, 20.600004, 32.499996)
		},
		{
			["c"] = CFrame.new(1609.9812, 24.7178154, 236.899399, -0.0703834072, 3.45619391e-8, 0.997519851, 1.21779853e-9, 1, -3.45619462e-8, -0.99752003, -1.21779953e-9, -0.0703832731),
			["s"] = Vector3.new(21.799957, 22.700005, 54)
		}
	}
}
local v28 = {
	["Color"] = Color3.fromRGB(10, 245, 10),
	["Loc"] = {
		{
			["c"] = CFrame.new(261.724365, 22.0178318, -1759.17798, -1.78813934e-7, 0, 0.999999464, 0, 1, 0, -0.999999464, 0, -1.78813934e-7),
			["s"] = Vector3.new(43.299965, 14.7000065, 70.39999)
		},
		{
			["c"] = CFrame.new(-1577.18359, 27.4110489, 703.805176, -0.156434387, 0, 0.987687826, 0, 1, 0, -0.987687826, 0, -0.156434387),
			["s"] = Vector3.new(60.099968, 27.200005, 30.299988)
		},
		{
			["c"] = CFrame.new(119.976921, 55.0110474, 1313.11108, -0.156433716, 0, 0.987683594, 0, 1, 0, -0.987683594, 0, -0.156433716),
			["s"] = Vector3.new(82.19997, 82.40001, 51.19999)
		},
		{
			["c"] = CFrame.new(1084.36975, 116.81105, 1211.08044, 0.615661383, 0, 0.788010776, 0, 1, 0, -0.788010776, 0, 0.615661442),
			["s"] = Vector3.new(148.69997, 40.500008, 85.899994)
		},
		{
			["c"] = CFrame.new(49.8085251, 87.265625, 829.535156, 0.0348739922, 0, 0.999391735, 0, 1, 0, -0.999391735, 0, 0.0348739922),
			["s"] = Vector3.new(68.200005, 145.3, 69.399956)
		}
	}
}
local v29 = {
	["Color"] = Color3.fromRGB(151, 0, 0),
	["Loc"] = {
		{
			["c"] = CFrame.new(1030.40198, 170.611053, 1115.61755, 0.615661263, 0, 0.788010716, 0, 1, 0, -0.788010776, 0, 0.615661502),
			["s"] = Vector3.new(22.099964, 148.1, 21.699997)
		}
	}
}
__set_list(v_u_25, 1, {v26, v27, v28, v29})
local function v_u_40(p30)
	-- upvalues: (copy) v_u_25, (copy) v_u_23
	for _, v31 in next, v_u_25 do
		for _, v32 in next, v31.Loc do
			local v33 = v32.c
			local v34 = v32.s
			local v35 = math.random() * 30 / 255
			local v36 = math.floor(v35)
			local v37 = {
				["c"] = v33,
				["s"] = v34
			}
			local v38 = v31.Color
			v_u_23(v37, Color3.new(v38.r + v36, v38.g + v36, v38.b + v36))
			v37.Part.Parent = p30.Model
			local v39 = p30.Nodes
			table.insert(v39, v37)
		end
	end
end
local function v_u_90(p41)
	-- upvalues: (copy) v_u_5, (copy) v_u_23, (copy) v_u_1, (copy) v_u_7, (copy) v_u_8
	local v42 = p41.Scale
	local v43 = tick()
	for _, v44 in next, p41.Nodes do
		local v45 = v44.c
		local v46 = v44.s
		local v47 = v44.Part
		local v48 = v45 + v45.p * (v42 - 1)
		local v49 = v48.p.Magnitude / (64 * v42)
		local v50 = v44._lastSize
		local v51 = v46 * v42
		if not v50 or (v50 - v51).Magnitude > 0.001 then
			v47.Size = v51
			v44._lastSize = v51
		end
		local v52 = p41.Center * v48
		local v53 = CFrame.new
		local v54 = 0.1 * v49 + 2 * v43
		v47.CFrame = v52 * v53(0, math.cos(v54) * 0.2, 0)
	end
	local v55 = p41.PlayerNodes
	local v56 = next
	local v57, v58 = v_u_5:GetPlayers()
	local v59 = {}
	for _, v60 in v56, v57, v58 do
		local v61 = v60.Name
		local v62 = v60.Character
		if v62 then
			local v63 = v62.PrimaryPart
			if v63 then
				v59[v61] = true
				local v64 = v63.CFrame
				local v65 = v55[v61]
				if v65 then
					v55[v61].c = v64
				else
					v65 = {
						["c"] = v64,
						["s"] = v63.Size,
						["IsPolice"] = false
					}
					v55[v61] = v65
					v_u_23(v65, Color3.fromRGB(240, 20, 20))
					v65.Part.Parent = p41.Model
				end
				local v66 = v43 % 6.283185307179586
				local v67 = v65.Part
				local v68 = v65.c
				local v69 = v68 + v68.p * (v42 - 1)
				local v70 = 8 * v66
				v67.Size = Vector3.new(1, 1, 1) * ((math.cos(v70) * 0.5 + 0.5) * 0.5 + 0.3) * 64 * v42
				v67.CFrame = p41.Center * v69 * CFrame.Angles(0, 4 * v66, 0) * CFrame.Angles(0.7853981633974483, 0, 0.7853981633974483)
				local v71 = v60:FindFirstChild("TeamValue")
				if v71 then
					local v72 = v71.Value == "Police"
					if not v65.BountyGui then
						local v73 = v_u_1.Resource.HologramBounty:Clone()
						v73.Parent = v67
						v73.Frame.Player.Text = v60.DisplayName
						v65.BountyGui = v73
					end
					if v65.Bounty and not v72 then
						v65.BountyGui.Frame.Bounty.Visible = true
						local v74 = v65.BountyGui.Frame.Bounty
						local v75 = v65.Bounty
						local v76 = v75 >= 0 and "" or "-"
						local v77 = v_u_7
						local v78 = {}
						local v79 = v_u_8(v75)
						local v80, v81, v82 = string.match(v79, "^([^%d]*%d)(%d*)(.-)$")
						__set_list(v78, 1, {v80 .. v81:reverse():gsub("(%d%d%d)", "%1,"):reverse() .. v82})
						v74.Text = v76 .. v77:FormatByKey("General.Cash", v78)
					else
						v65.BountyGui.Frame.Bounty.Visible = false
					end
					if v65.IsPolice ~= v72 then
						v65.IsPolice = v72
						local v83 = v72 and Color3.new(1, 1, 1) or Color3.fromRGB(240, 20, 20)
						local v84 = v65.Part
						local v85 = v83.r
						local v86 = v83.g
						local v87 = v83.b
						v84.Color = Color3.new(v85, v86, v87)
						v84.SelectionBox.Color3 = Color3.new(v85 + 0.2, v86 + 0.2, v87 + 0.2)
						v65.BountyGui.Frame.Player.TextColor3 = v83
					end
				end
			end
		end
	end
	for v88, _ in next, v55 do
		if not v59[v88] then
			local v89 = v55[v88]
			if v89.BountyGui then
				v89.BountyGui:Destroy()
			end
			v89.Part:Destroy()
			v55[v88] = nil
		end
	end
end
return {
	["Init"] = function(p91)
		-- upvalues: (copy) v_u_11, (copy) v_u_14, (copy) v_u_2, (copy) v_u_6, (copy) v_u_10, (ref) v_u_24, (ref) v_u_40, (copy) v_u_90, (copy) v_u_4
		function p91.em.pupjtqdx(p92)
			-- upvalues: (ref) v_u_11
			for _, v93 in next, v_u_11 do
				for v94, v95 in next, p92 do
					local v96 = v93.PlayerNodes[v94]
					if v96 then
						v96.Bounty = v95
					end
				end
			end
		end
		local v_u_97 = {}
		local v_u_98 = {}
		local function v102(p99)
			-- upvalues: (copy) v_u_97, (copy) v_u_98, (ref) v_u_14
			for v100 = #v_u_97, 1, -1 do
				if v_u_97[v100] == p99 then
					table.remove(v_u_97, v100)
					local v101 = v_u_98[p99]
					if v101 then
						v_u_14(v101)
					end
					return
				end
			end
		end
		local v103 = next
		local v104, v105 = v_u_2:GetTagged("MapHologram")
		local function v108(p106)
			-- upvalues: (copy) v_u_97
			local v107 = v_u_97
			table.insert(v107, p106)
		end
		for _, v109 in v103, v104, v105 do
			table.insert(v_u_97, v109)
		end
		v_u_2:GetInstanceAddedSignal("MapHologram"):Connect(v108)
		v_u_2:GetInstanceRemovedSignal("MapHologram"):Connect(v102)
		local v_u_110 = tick()
		local function v120()
			-- upvalues: (ref) v_u_110, (copy) v_u_97, (copy) v_u_98, (ref) v_u_6, (ref) v_u_10, (ref) v_u_24, (ref) v_u_2, (ref) v_u_40, (ref) v_u_11, (ref) v_u_14, (ref) v_u_90
			debug.profilebegin("Hologram")
			local v111 = tick()
			if v111 - v_u_110 > 1 then
				v_u_110 = v111
				for _, v112 in next, v_u_97 do
					local v113 = v_u_98[v112]
					if (v112.Position - v_u_6.CFrame.p).Magnitude < 500 then
						if not v113 then
							local v114 = v112.Size.X / 4096
							local v115 = v_u_10()
							v115.Scale = v114
							v115.Center = v112.CFrame * CFrame.new(0, v112.Size.Y * 0.5 + 0.2, 0)
							v_u_24(v115, v_u_2:GetTagged("BuildingNeon"))
							v_u_40(v115)
							local v116 = v_u_11
							table.insert(v116, v115)
							v_u_98[v112] = v115
						end
					elseif v113 then
						v_u_98[v112] = nil
						v_u_14(v113)
					end
				end
			end
			for _, v117 in next, v_u_11 do
				local v118 = v117.LastRender
				local v119 = (v117.Center.p - v_u_6.CFrame.p).Magnitude
				if (v119 < 100 and 0 or (v119 < 300 and 0.1 or (v119 < 500 and 0.2 or 1))) < v111 - v118 then
					v117.LastRender = v111
					v_u_90(v117)
				end
			end
			debug.profileend()
		end
		v_u_4.Heartbeat:Connect(v120)
	end
}
