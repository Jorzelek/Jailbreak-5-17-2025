-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgNVByVzIC8gJXMIQ3VycmVuY3kGZm9ybWF0BENhc2gHJXMgQ2FzaAlDYXNoTm9NYXgNJWQga2cgLyAlZCBrZwZXZWlnaHQKU3RhcnRlckd1aQ9Sb2JiZXJ5TW9uZXlHdWkORmluZEZpcnN0Q2hpbGQJUGxheWVyR3VpBlBhcmVudANHdWkESW5pdAZhc3NlcnQJQ29udGFpbmVyBkJvdHRvbQhQcm9ncmVzcwVUaWVycwRUaWVyCFBvc2l0aW9uAVgFU2NhbGURR2V0TWF4U2l6ZUZvclRpZXIHRW5hYmxlZAZTbGlkZXIFVmFsdWUFVURpbTIDbmV3BFNpemUETWFpZAhHaXZlVGFzawRTaG93A1RvcAdVcGdyYWRlEGdldFVwZ3JhZGVCdXR0b24RU2VsZWN0ZWRGb3JtYXR0ZXIMU2V0Rm9ybWF0dGVyBFRpbWUHVmlzaWJsZRAlZCBzZWNvbmRzIGxlZnQhBG1hdGgDbWF4BFRleHQHU2V0VGltZQZpcGFpcnMLR2V0Q2hpbGRyZW4FRnJhbWUDSXNBFkJhY2tncm91bmRUcmFuc3BhcmVuY3kGQ29sb3IzB2Zyb21SR0IQQmFja2dyb3VuZENvbG9yMwZDaXJjbGUERW51bQRGb250DlNvdXJjZVNhbnNCb2xkClNvdXJjZVNhbnMJRm9ybWF0dGVyC0FsdGVybmF0aXZlBVRpdGxlE1VubG9jayBMZXZlbCAlZCBCYWcLQ3VycmVudFRpZXIHU2V0VGllcgZBbW91bnQPRWFzaW5nRGlyZWN0aW9uA091dAtFYXNpbmdTdHlsZQRRdWFkCVR3ZWVuU2l6ZQhTZXRNb25leQdNZXNzYWdlClNldE1lc3NhZ2UHRGVzdHJveQRIaWRlBGdhbWUHUGxheWVycwpHZXRTZXJ2aWNlC0xvY2FsUGxheWVyEVJlcGxpY2F0ZWRTdG9yYWdlB3JlcXVpcmUDU3RkBkZvcm1hdAZNb2R1bGUAEAcCAQAABwAAAQMCCwIPbwIAAPsFAABNBAUJAQAAAFIFAACfBAIC+wYAAE0FBgkBAAAAUgYBAJ8FAgC8AgKNAgAAAJ8CAACCAgAAAwMBAwIDAwALBAEYAAAAAAAAAAAAAAAAAAAADAAAAAAFAQEAAAcAAAEDAQYCCm8BAAD7BAAATQMECQEAAABSBAAAnwMCALwBAY0CAAAAnwEAAIIBAAADAwUDAgMDAA4GARgAAAAAAAAAAAAADwAAAAAGAgAAAAcAAAEDAgMCB28CAABSBAAAUgUBALwCAo0BAAAAnwIEAIICAAACAwcDAwARCAEYAAAAAAAAABIAAAAAAwADAAAAEPsBAABNAAELAAAAAG8CAQC8AAADAgAAAJ8AAwL7AgEATQECmQMAAAAwAQAkBAAAAPsBAgAwAAEfBQAAAIIAAQAGAwkDCgMLAwwDDQMOABUPARgAAAAAAAAAAQAAAAACAAABFgAAAAAIAQEAAAApRwACAAAAAICpAgABqQIBALsBAgKkAQEAAAAAQJ8BAgGMAwEA1AMCAAAAAACpAgABqQIBALsBAgKkAQEAAAAAQJ8BAgH7AgAATQECHwIAAABNBQFvAwAAAE0EBRMEAAAATQME5AUAAABNAgNlBgAAAG8GBwBSBwAAcwUGB7wDAgMIAAAAnwMDAk0GAzsJAAAATQUGeQoAAABNBAWECwAAAIIEAgAMAxAEAAAAQAMOAxEDEgMTAxQDFQMLAxYDFwMYABsZARgAAAAAAAAAAAEAAAAAAAAAAAEAAAEAAAAAAAAAAQAAAAAAAQAAAAAAABwAAAAAAgABAAAABfsAAACpAQAAMAEA8AAAAACCAAEAAQMaACwAARgAAAAAAS0AAAAABgABAAAAFfsFAABNBAVvAAAAAE0DBBMBAAAATQID5AIAAABNAQJ/AwAAAE0AAewEAAAApAEHAAAYUICMAgAAjAMAAIwEAQCMBQAAnwEFAjABAC8IAAAAggABAAkDEQMSAxMDGwMcAx0DHgQAGFCAAx8AMAABGAAAAAAAAAAAAAAAAAAAAAAAAAAAATEAAAAACAACAAAAMvsBAABNAAF2AAAAAEcAAwAAAAAAqQAAAIIAAgD7AQAATQABHwEAAAD7AgEATQEC7wIAAACfAQEC+wIAADABAnYAAAAAqQIBADACAPADAAAA2QQAABIAAAC8AgH9BAAAAJ8CAwFNBgBvBQAAAE0FBhMGAAAATQQF5AcAAABNAwR/CAAAAE0CA+wJAAAApAMLAAAIoICMBAAAjAUAAIwGAQCMBwAAnwMFAjADAi8MAAAA2QQBABIAAAC8AgH9BAAAAJ8CAwGCAAEADQMgAw4DHgMaAyEDEQMSAxMDGwMcAx0EAAiggAMfAgUGIyIBGAAAAAAAAQACAAABAAAAAQAAAgAAAQAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAHJAAAAAAEAAEAAAAK+wEAAE0AAR8AAAAATQMAbwEAAABNAgOYAgAAAE0BAsMDAAAAggECAAQDDgMRAyMDJAA4JQEYAAAAAQAAAAAAADkAAAAAAgEBAAAABPsBAAAwAAHlAAAAAIIAAQABAyYAPCcBGAAAAAE9AAAAAAgBAQAABwAAAQMDHwIl+wIAAE0BAh8AAAAATQQBbwEAAABNAwQTAgAAAE0CA0oDAAAARwACAAAAAICpAwABqQMBADADAoAEAAAARwAUAAAAAABNBAFvAQAAAE0DBBMCAAAATQIDSgMAAABvAwUAgRIABQYAAABSBgAAbwcGAKQFCQAAIHCAnwUDArwDA40KAAAAnwMDAjADAvULAAAAggABAAwDDgMRAxIDKAMpAyoCAAAAAAAAAAADKwMsBAAgcIADAwMtAD8uARgAAAABAAAAAAAAAAAAAAABAAEAAAAAAAAAAAAAAAAAAAAAAAACQAAAAAANAgEAAAgAAAEDCJUBAqIBRwACAAAAAICpAwABqQMBALsBAwKkAgEAAAAAQJ8CAgGMBAEA1AQCAAAAAACpAwABqQMBALsBAwKkAgEAAAAAQJ8CAgFHAQIAAAAAgKkDAAGpAwEAuwEDAqQCAQAAAABAnwICAfsDAABNAgMfAgAAAE0GAm8DAAAATQUGEwQAAABNBAXkBQAAAE0DBGUGAAAAjAQAAKQFCAAAAHBAvAYDaAkAAACfBgIAnwUABFEFBgBvDAoAvAoJ/gsAAACfCgMCDgoBAJUEBAxuBfn/AgAAgNQAAgAEAAAAqQYAAakGAQC7AQYCpAUBAAAAAECfBQIBjAcBAFIFBACMBgEAqAUyAG8LDQBSDAcAcwoLDLwIAwMOAAAAnwgDApoHFQAAAAAAjAkAADAJCDoPAAAApAkSAABEAIGMCqIAjAvrAIwMAwCfCQQCMAkInxMAAABNCghwFAAAAE0JCosNAAAApAoYABdYUMEwCgk5FgAAAGUAEwBvCRkAMAkIOg8AAACkCRIAAEQAgYwKtgCMC/8AjAwXAJ8JBAIwCQifEwAAAE0KCHAUAAAATQkKiw0AAACkChsAGlhQwTAKCTkWAAAAMAEIgBwAAACLBc7/TQYCbwMAAABNBQaYHQAAAKkGAABgAA0ABAAAAKkGAAD7CAAATQcI5R4AAAD7CgAATQkK+B8AAABNCAlOIAAAAPEHAgAIAAAAUgYBAE0HBcMhAAAAMAYHgBwAAABNBwXiIgAAAFYIBgAwCAeAHAAAAA4GCwBNCAXDIQAAAE0HCLojAAAAbwgkAJUKAAy8CAiNJQAAAJ8IAwIwCAf1JgAAAPsHAAAOAQIAUggAACsIAQBSCAQAMAgHUycAAACCAAEAKAMQBAAAAEADDgMRAxIDEwMUAy8EAABwQAMwAzEDMgIAAAAAAADwPwMVAwsDMwM0AzUEAEQAgQM2AzcDOAM5AzoEF1hQwQJmZmZmZmbmPwM7BBpYUMEDKQMjAyYDPAMGAyQDPQM+Az8DAwMtA0AASUEBGAAAAAAAAAAAAQAAAAAAAAAAAQAAAAAAAAABAAABAAAAAAAAAAEBAAAAAAAAAQAAAAAB/gAFAAAAAAAAAAEAAAABAAAAAAABAAEAAAEAAAAAAAAAAQAAAAAAAAAAAgAAAQAAAAAAAAABAAAAAAAAAAIA9Q0AAAABAAAAAQAAAAAAAAAAAAEBAAAAAgAAAAABAQAAAAAAAAAAAAAEAAAAAAAAAUoAAAAADAIBAAAAjgG7AQADUgMAAKQCAQAAAABAnwICAbsBAQNSAwEApAIBAAAAAECfAgIB+wMAAE0CAx8CAAAA+wQAAE0DBOUDAAAAUgQAAFIFAQCfAwMCTQcCbwQAAABNBgcTBQAAAE0FBuQGAAAATQQFKwcAAAAwAwT1CAAAAPsFAABNBAXlAwAAAPsHAABNBgf4CQAAAE0FBk4KAAAAmgQ6AAUAAABNCAJvBAAAAE0HCBMFAAAATQYH5AYAAABNBQZ/CwAAAE0EBewMAAAApAUPAAA40ICMBgAAjAcAAIwIAQCMCQAAnwUFAjAFBC8QAAAATQgCbwQAAABNBwgTBQAAAE0GB+QGAAAATQUGfwsAAABNBAXsDAAAAKQGDwAAONCAjAcBAIwIAACMCQEAjAoAAJ8GBQKkBxQAE0gQwaQIFwAWVBDBbwkYAKkKAQC8BATUGQAAAJ8EBwFNBwJvBAAAAE0GBxMFAAAATQUG5AYAAABNBAVlGgAAAKkFAAAwBQSAGwAAAIIAAQD7BQAATQQFmRwAAAD7BgAATQUGUx0AAACfBAICTQkCbwQAAABNCAkTBQAAAE0HCOQGAAAATQYHfwsAAABNBQbsDAAAAKQHDwAAONCACQkEAOwICQGMCQAAjAoBAIwLAACfBwUCpAgUABNIEMGkCRcAFlQQwW8KGACpCwEAvAUF1BkAAACfBQcBTQgCbwQAAABNBwgTBQAAAE0GB+QGAAAATQUGZRoAAACpBgEAMAYFgBsAAACCAAEAHgMQBAAAAEADDgMmAxEDEgMTA0IDLQM8AwYDGwMcAx0DHgQAONCAAx8DOANDA0QEE0gQwQNFA0YEFlQQwQIAAAAAAADgPwNHAxQDKQMZA0AAe0gBGAAAAAAAAQAAAAABAAABAAAAAAABAAAAAAAAAAAAAwAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAQAAAAAAAAEAAQABAfsAAAcAAAAAAAAAAAAAAAIAAAAAAAABAAAAAAAAAAAAAQAAAAAAAAABAAEAAQH7AAAHAAAAAAAAAAAAAAJ8AAAAAAQBAQAAABv7AgAATQECHwAAAABHAA8AAAAAAE0DAW8BAAAATQID+AIAAACpAwEAMAMCgAMAAABNAwFvAQAAAE0CA/gCAAAAMAAC9QQAAACCAAEATQMBbwEAAABNAgP4AgAAAKkDAAAwAwKAAwAAAIIAAQAFAw4DEQNJAykDLQCZAUoBGAAAAAEAAQAAAAAAAAEAAAAAAAACAAAAAAAAApoAAAAAAgABAAAAEvsBAABNAAF2AAAAAEcAAwAAAACAqQAAAIIAAgD7AQAATQABdgAAAAC8AABQAQAAAJ8AAgH7AAAAxgEAADABAHYAAAAAggABAAIDIANLAKIBTAEYAAAAAAABAAIAAAAAAAEAAAABowAAAAAIAAABAgBpowAAAKQAAQAAAABAbwICALwAABYDAAAAnwADAk0BADEEAAAApAIBAAAAAEBvBAUAvAICFgMAAACfAgMCpAMHAAAAYEBNBQKhCAAAAE0EBXYJAAAAnwMCAqQEBwAAAGBATQYCQAsAAABNBQatCgAAAJ8EAgL/BQUAAAAAAP8GAAAAAAAAMAYF+AwAAACMBgEAMAYFUw0AAADABg4AEgAEAE0HBfgMAAAAMAYH/w8AAADABhAAEgAEAE0HBfgMAAAAMAYHThEAAADABhIATQcF+AwAAAAwBgerEwAAAE0HBfgMAAAATQYH/w8AAAAwBgXlFAAAAMAGFQASAAIAEgABABIABQAwBgVzFgAAAMAGFwASAAUAMAYFmRgAAADABhkAEgAFABIAAwAwBgWYGgAAAMAGGwASAAUAMAYFBRwAAADABh0AEgAFADAGBXYeAAAAwAYfABIABQAwBgUaIAAAAMAGIQASAAUAMAYFKSIAAADABiMAEgAFADAGBREkAAAAwAYlABIABQAwBgWGJgAAAMAGJwASAAUAMAYFzygAAACCBQIAKQNNBAAAAEADTgNPA1ADUQNSBAAAYEADUwMgA1QDVQM8A0AGAAMEBgEDBgYCAwgDJgYDAw8GBAMZBgcDIgYIAyUGCQMnBgoDLgYLA0EGDANIBg0DSgYOA0wNAAECAwQHCAkKCwwNDgEAARgAAQAAAAAAAQABAAAAAAABAAAAAAAAAQAAAAAAAAIAAQAAAAEAAAEAAAAAAAMAAAAAAAMAAAAAAwAAAAAAAQAAAAAABgAAAAgAAAAAFQAAAAQAAAADAAAACgAAADIAAAAeAAAACQAAAAcBAAAAAA8xwps1nztrJwMG8aFxXXiSvEeiyYyLbJeaY+u+m8cyrZteGRjSEWbB

-- Decompiled by Krnl

local v_u_1 = game:GetService("Players").LocalPlayer
local v_u_2 = game:GetService("ReplicatedStorage")
local v_u_3 = require(v_u_2.Std.Maid)
local v_u_4 = require(v_u_2.Module.Format)
local v_u_5 = {
	["Formatter"] = {},
	["CurrentTier"] = 1
}
function v_u_5.Formatter.Cash(p6, p7)
	-- upvalues: (copy) v_u_4
	return ("%s / %s"):format(v_u_4.Currency(p6), v_u_4.Currency(p7))
end
function v_u_5.Formatter.CashNoMax(p8)
	-- upvalues: (copy) v_u_4
	return ("%s Cash"):format(v_u_4.Currency(p8))
end
function v_u_5.Formatter.Weight(p9, p10)
	return ("%d kg / %d kg"):format(p9, p10)
end
v_u_5.SelectedFormatter = v_u_5.Formatter.Cash
function v_u_5.Init()
	-- upvalues: (copy) v_u_2, (copy) v_u_1, (copy) v_u_5
	local v11 = v_u_2.StarterGui:FindFirstChild("RobberyMoneyGui")
	v11.Parent = v_u_1.PlayerGui
	v_u_5.Gui = v11
end
function v_u_5.GetMaxSizeForTier(p12)
	-- upvalues: (copy) v_u_5
	local v13 = p12 ~= nil
	assert(v13)
	local v14 = p12 >= 1
	assert(v14)
	return v_u_5.Gui.Container.Bottom.Progress.Tiers:FindFirstChild("Tier" .. p12).Position.X.Scale
end
function v_u_5.Show()
	-- upvalues: (copy) v_u_5, (copy) v_u_3
	if v_u_5.Maid ~= nil then
		return false
	end
	local v_u_15 = v_u_5.Gui
	local v16 = v_u_3.new()
	v_u_5.Maid = v16
	v_u_15.Enabled = true
	v16:GiveTask(function()
		-- upvalues: (copy) v_u_15
		v_u_15.Enabled = false
	end)
	v_u_15.Container.Bottom.Progress.Slider.Value.Size = UDim2.new(0, 0, 1, 0)
	v16:GiveTask(function()
		-- upvalues: (copy) v_u_15
		v_u_15.Container.Bottom.Progress.Slider.Value.Size = UDim2.new(0, 0, 1, 0)
	end)
end
function v_u_5.getUpgradeButton()
	-- upvalues: (copy) v_u_5
	return v_u_5.Gui.Container.Top.Upgrade
end
function v_u_5.SetFormatter(p17)
	-- upvalues: (copy) v_u_5
	v_u_5.SelectedFormatter = p17
end
function v_u_5.SetTime(p18)
	-- upvalues: (copy) v_u_5
	local v19 = v_u_5.Gui
	v19.Container.Bottom.Time.Visible = p18 ~= nil
	if p18 ~= nil then
		v19.Container.Bottom.Time.Text = ("%d seconds left!"):format((math.max(p18, 0)))
	end
end
function v_u_5.SetTier(p20, p21)
	-- upvalues: (copy) v_u_5
	local v22 = p20 ~= nil
	assert(v22)
	local v23 = p20 >= 1
	assert(v23)
	local v24 = p21 ~= nil
	assert(v24)
	local v25 = v_u_5.Gui
	local v26 = v25.Container.Bottom.Progress.Tiers
	local v27 = 0
	for _, v28 in ipairs(v26:GetChildren()) do
		if v28:IsA("Frame") then
			v27 = v27 + 1
		end
	end
	local v29 = p20 <= v27
	assert(v29)
	for v30 = 1, v27 do
		local v31 = v26:FindFirstChild("Tier" .. v30)
		if v30 == p20 then
			v31.BackgroundTransparency = 0
			v31.BackgroundColor3 = Color3.fromRGB(162, 235, 3)
			v31.Circle.Tier.Font = Enum.Font.SourceSansBold
		else
			v31.BackgroundTransparency = 0.7
			v31.BackgroundColor3 = Color3.fromRGB(182, 255, 23)
			v31.Circle.Tier.Font = Enum.Font.SourceSans
		end
		v31.Visible = p21
	end
	local v32 = v25.Container.Top
	local v33
	if p20 < v27 then
		if v_u_5.SelectedFormatter == v_u_5.Formatter.CashNoMax then
			v33 = false
		else
			v33 = p21
		end
	else
		v33 = false
	end
	v32.Upgrade.Visible = v33
	v32.Alternative.Visible = not v33
	if v33 then
		v32.Upgrade.Title.Text = ("Unlock Level %d Bag"):format(p20 + 1)
	end
	local v34 = v_u_5
	if p21 then
		v27 = p20 or v27
	end
	v34.CurrentTier = v27
end
function v_u_5.SetMoney(p35, p36)
	-- upvalues: (copy) v_u_5
	assert(p35)
	assert(p36)
	local v37 = v_u_5.Gui
	local v38 = v_u_5.SelectedFormatter(p35, p36)
	v37.Container.Bottom.Progress.Amount.Text = v38
	if v_u_5.SelectedFormatter == v_u_5.Formatter.CashNoMax then
		v37.Container.Bottom.Progress.Slider.Value.Size = UDim2.new(0, 0, 1, 0)
		v37.Container.Bottom.Progress.Slider.Value:TweenSize(UDim2.new(1, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true)
		v37.Container.Bottom.Progress.Tiers.Visible = false
	else
		local v39 = v_u_5.GetMaxSizeForTier(v_u_5.CurrentTier)
		v37.Container.Bottom.Progress.Slider.Value:TweenSize(UDim2.new(v39 * p35 / p36, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true)
		v37.Container.Bottom.Progress.Tiers.Visible = true
	end
end
function v_u_5.SetMessage(p40)
	-- upvalues: (copy) v_u_5
	local v41 = v_u_5.Gui
	if p40 == nil then
		v41.Container.Message.Visible = false
	else
		v41.Container.Message.Visible = true
		v41.Container.Message.Text = p40
	end
end
function v_u_5.Hide()
	-- upvalues: (copy) v_u_5
	if v_u_5.Maid == nil then
		return false
	end
	v_u_5.Maid:Destroy()
	v_u_5.Maid = nil
end
return v_u_5
