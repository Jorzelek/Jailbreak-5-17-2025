-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgNAA25ldwRtYWlkBXByb2JzCHNldFN0YXRlBGluaXQFcHJvcHMFc3RhdGUIUkFSSVRJRVMCaWQFRnJhbWUWQmFja2dyb3VuZFRyYW5zcGFyZW5jeQ9Cb3JkZXJTaXplUGl4ZWwEU2l6ZQhQb3NpdGlvbgVVRGltMghQcm9ncmVzcwVUaXRsZRBCYWNrZ3JvdW5kQ29sb3IzBWNvbG9yBkNvbG9yMwRUZXh0CVRleHRMYWJlbAtBbmNob3JQb2ludA5UZXh0WEFsaWdubWVudARGb250CkxpbmVIZWlnaHQKVGV4dFNjYWxlZApUZXh0Q29sb3IzB1ZlY3RvcjIIJXM6ICVkJSUEbmFtZQZmb3JtYXQERW51bQRMZWZ0B0JhbmdlcnMKYnJpZ2h0ZW5CeQZyZW5kZXILcHJvYnNGb2xkZXIIdG9zdHJpbmcORmluZEZpcnN0Q2hpbGQFVmFsdWUBZgdDaGFuZ2VkB0Nvbm5lY3QIR2l2ZVRhc2sPb2JzZXJ2ZUNoaWxkcmVuCGRpZE1vdW50CkRvQ2xlYW5pbmcLd2lsbFVubW91bnQEZ2FtZRFSZXBsaWNhdGVkU3RvcmFnZQpHZXRTZXJ2aWNlB3JlcXVpcmUDU3RkBE1haWQFUm9hY3QNY3JlYXRlRWxlbWVudApDb2xvclV0aWxzD1J4SW5zdGFuY2VVdGlscw1SZXdhcmRTcGlubmVyE1Jld2FyZFNwaW5uZXJDb25zdHMNUHVyZUNvbXBvbmVudBBCcmllZmNhc2VEaXNwbGF5BmV4dGVuZAAHBQEBAAAAD/sCAABNAQLvAAAAAJ8BAQIwAQAWAQAAAOIDAwD/BAAAAAAAADAEA/wCAAAAvAEAKgQAAACfAQMBggABAAUDAQMCAwMFAQIDBAALBQEYAAAAAAAAAQEAAAD/AAADDAAAAAAZAQMAAAgAAAEDFJQBAssBTQIABwAAAABNAQL8AQAAACsBBABNAgAYAgAAAE0BAvwBAAAA/wIAAAAAAAD7BQAATQQFHAMAAAAcAwQAjAYBAFIEAwCMBQEAqASmAPsJAABNCAkcAwAAAIcHCAZNCwf0BgAAAIcKAQuQCQoFPggJBPsJAQBvCgcA4gsMAIwMAQAwDAs6CAAAAIwMAAAwDAuOCQAAAKQMDwAAONCAjA0BAIwOAADYDxADjBAAAJ8MBQIwDAsv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

-- Decompiled by Krnl

local v1 = game:GetService("ReplicatedStorage")
local v_u_2 = require(v1.Std.Maid)
local v3 = require(v1.Roact)
local v_u_4 = v3.createElement
local v_u_5 = require(v1.Std.ColorUtils)
local v_u_6 = require(v1.Std.RxInstanceUtils)
local v_u_7 = require(v1.RewardSpinner.RewardSpinnerConsts)
local v8 = v3.PureComponent:extend("BriefcaseDisplay")
function v8.init(p9)
	-- upvalues: (copy) v_u_2
	p9.maid = v_u_2.new()
	p9:setState({
		["probs"] = {}
	})
end
function v8.render(p10)
	-- upvalues: (copy) v_u_7, (copy) v_u_4, (copy) v_u_5
	local v11 = p10.props.probs or p10.state.probs
	local v12 = #v_u_7.RARITIES
	local v13 = {}
	for v14 = 1, v12 do
		local v15 = v_u_7.RARITIES[v14]
		local v16 = (v11[v15.id] or 0) / 100
		local v17 = v_u_4
		local v18 = {
			["BackgroundTransparency"] = 1,
			["BorderSizePixel"] = 0,
			["Size"] = UDim2.new(1, 0, 1 / v12, 0),
			["Position"] = UDim2.new(0, 0, (v14 - 1) / v12, 0)
		}
		local v19 = {
			["Progress"] = v_u_4("Frame", {
				["BorderSizePixel"] = 0,
				["BackgroundColor3"] = v15.color,
				["Size"] = UDim2.new(v16, 0, 1, 0)
			}),
			["Title"] = v_u_4("Frame", {
				["BackgroundTransparency"] = 1,
				["BackgroundColor3"] = Color3.new(1, 0, 0),
				["Size"] = UDim2.new(1, 0, 1, 0),
				["Position"] = UDim2.new(0, 0, 0, 0)
			}, {
				["Text"] = v_u_4("TextLabel", {
					["BackgroundTransparency"] = 1,
					["Size"] = UDim2.new(0.9, 0, 1, 0),
					["Position"] = UDim2.new(0.5, 0, 0.5, 0),
					["AnchorPoint"] = Vector2.new(0.5, 0.5),
					["Text"] = ("%s: %d%%"):format(v15.name, v16 * 100 or 0),
					["TextXAlignment"] = Enum.TextXAlignment.Left,
					["Font"] = Enum.Font.Bangers,
					["LineHeight"] = 1,
					["TextScaled"] = true,
					["TextColor3"] = v_u_5.brightenBy(v15.color, -0.9)
				})
			})
		}
		v13[v14] = v17("Frame", v18, v19)
	end
	return v_u_4("Frame", {
		["Size"] = UDim2.new(1, 0, 1, 0),
		["BackgroundTransparency"] = 1
	}, v13)
end
function v8.didMount(p_u_20)
	-- upvalues: (copy) v_u_7, (copy) v_u_6
	if p_u_20.props.probsFolder then
		local function v_u_24()
			-- upvalues: (ref) v_u_7, (copy) p_u_20
			local v21 = {}
			for v22 = 1, #v_u_7.RARITIES do
				local v23 = p_u_20.props.probsFolder:FindFirstChild((tostring(v22)))
				if v23 then
					v21[v22] = v23.Value
				end
			end
			p_u_20:setState({
				["probs"] = v21
			})
		end
		p_u_20.maid:GiveTask(v_u_6.observeChildren(p_u_20.props.probsFolder, function(p25, p26)
			-- upvalues: (copy) v_u_24
			v_u_24()
			p26:GiveTask(p25.Changed:Connect(v_u_24))
		end))
	end
end
function v8.willUnmount(p27)
	p27.maid:DoCleaning()
end
return v8
