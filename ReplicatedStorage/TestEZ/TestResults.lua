-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v_u_1 = require(script.Parent.TestEnum)
local v_u_2 = {
	[v_u_1.TestStatus.Success] = "+",
	[v_u_1.TestStatus.Failure] = "-",
	[v_u_1.TestStatus.Skipped] = "~"
}
local v_u_3 = {}
v_u_3.__index = v_u_3
function v_u_3.new(p4)
	-- upvalues: (copy) v_u_3
	local v5 = {
		["successCount"] = 0,
		["failureCount"] = 0,
		["skippedCount"] = 0,
		["planNode"] = p4,
		["children"] = {},
		["errors"] = {}
	}
	local v6 = v_u_3
	setmetatable(v5, v6)
	return v5
end
function v_u_3.createNode(p7)
	return {
		["planNode"] = p7,
		["children"] = {},
		["errors"] = {},
		["status"] = nil
	}
end
function v_u_3.visitAllNodes(p8, p9, p10)
	for _, v11 in ipairs((p10 or p8).children) do
		p9(v11)
		p8:visitAllNodes(p9, v11)
	end
end
function v_u_3.visualize(p12, p13, p14)
	-- upvalues: (copy) v_u_1, (copy) v_u_2
	local v15 = p14 or 0
	local v16 = {}
	for _, v17 in ipairs((p13 or p12).children) do
		if v17.planNode.type == v_u_1.NodeType.It then
			local v18 = v_u_2[v17.status] or "?"
			local v19 = ("%s[%s] %s"):format((" "):rep(3 * v15), v18, v17.planNode.phrase)
			if v17.messages and #v17.messages > 0 then
				v19 = v19 .. "\n " .. (" "):rep(3 * v15) .. table.concat(v17.messages, "\n " .. (" "):rep(3 * v15))
			end
			table.insert(v16, v19)
		else
			local v20 = ("%s%s"):format((" "):rep(3 * v15), v17.planNode.phrase or "")
			if v17.status then
				v20 = v20 .. (" (%s)"):format(v17.status)
			end
			table.insert(v16, v20)
			if #v17.children > 0 then
				local v21 = p12:visualize(v17, v15 + 1)
				table.insert(v16, v21)
			end
		end
	end
	return table.concat(v16, "\n")
end
return v_u_3
