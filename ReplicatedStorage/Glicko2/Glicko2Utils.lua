-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v1 = game:GetService("ReplicatedStorage")
local v_u_2 = require(v1.Glicko2.Glicko2Consts)
local v_u_3 = require(v1.Std.MathUtils)
local v_u_84 = {
	["g"] = function(p4)
		local v5 = 1 + 3 * p4 ^ 2 / 9.869604401089358
		return 1 / math.sqrt(v5)
	end,
	["E"] = function(p6, p7, p8)
		-- upvalues: (copy) v_u_84
		local v9 = -v_u_84.g(p8) * (p6 - p7)
		return 1 / (math.exp(v9) + 1)
	end,
	["v"] = function(p10, p11, p12)
		-- upvalues: (copy) v_u_84
		local v13 = 0
		for v14 = 1, #p11 do
			local v15 = p11[v14]
			local v16 = p12[v14]
			local v17 = v_u_84.E(p10, v15, v16)
			v13 = v13 + v_u_84.g(v16) ^ 2 * v17 * (1 - v17)
		end
		return 1 / v13
	end,
	["delta"] = function(p18, p19, p20, p21, p22)
		-- upvalues: (copy) v_u_84
		local v23 = 0
		for v24 = 1, #p20 do
			local v25 = p20[v24]
			local v26 = p21[v24]
			local v27 = p22[v24]
			v23 = v23 + v_u_84.g(v26) * (v27 - v_u_84.E(p19, v25, v26))
		end
		return p18 * v23
	end,
	["f"] = function(p28, p29, p30, p31, p32, p33)
		local v34 = 0.5 * (math.exp(p28) * (p29 ^ 2 - p31 ^ 2 - p30 - math.exp(p28))) / (p31 ^ 2 + p30 + math.exp(p28)) ^ 2
		local v35 = p32 ^ 2
		return v34 - (p28 - math.log(v35)) / p33 ^ 2
	end,
	["convertToGlicko2Rating"] = function(p36, p37)
		-- upvalues: (copy) v_u_2
		return (p36 - 1500) / v_u_2.CONVERSION_FACTOR, p37 / v_u_2.CONVERSION_FACTOR
	end,
	["convertFromGlicko2Rating"] = function(p38, p39)
		-- upvalues: (copy) v_u_2
		return v_u_2.CONVERSION_FACTOR * p38 + 1500, v_u_2.CONVERSION_FACTOR * p39
	end,
	["calculateNewRatingData"] = function(p40, p41, p_u_42, p43, p44, p45, p46)
		-- upvalues: (copy) v_u_84, (copy) v_u_2, (copy) v_u_3
		local v47 = typeof(p43) == "table"
		assert(v47, "Invalid ratingList")
		local v48 = typeof(p44) == "table"
		assert(v48, "Invalid ratingDeviationList")
		local v49 = typeof(p45) == "table"
		assert(v49, "Invalid scoreList")
		local v50 = #p43 == #p44
		assert(v50, "Lengths of lists must be the same")
		local v51 = #p43 == #p45
		assert(v51, "Lengths of lists must be the same")
		local v52
		if typeof(p40) == "number" then
			v52 = p40 > 0
		else
			v52 = false
		end
		assert(v52, "Invalid rating")
		local v53
		if typeof(p41) == "number" then
			v53 = p41 > 0
		else
			v53 = false
		end
		assert(v53, "Invalid ratingDeviation")
		local v54
		if typeof(p_u_42) == "number" then
			v54 = p_u_42 > 0
		else
			v54 = false
		end
		assert(v54, "Invalid sigma")
		local v55, v_u_56 = v_u_84.convertToGlicko2Rating(p40, p41)
		if #p43 == 0 then
			local v57 = v_u_56 ^ 2 + p_u_42 ^ 2
			local v58 = math.sqrt(v57)
			local _, v59 = v_u_84.convertFromGlicko2Rating(v55, v58)
			return p40, v59, p_u_42
		end
		local v60 = {}
		local v61 = {}
		for v62 = 1, #p43 do
			local v63 = p43[v62]
			local v64 = p44[v62]
			local v65, v66 = v_u_84.convertToGlicko2Rating(v63, v64)
			table.insert(v60, v65)
			table.insert(v61, v66)
		end
		local v_u_67 = p46 or v_u_2.DEFAULT_TAU
		local v_u_68 = v_u_84.v(v55, v60, v61)
		local v_u_69 = v_u_84.delta(v_u_68, v55, v60, v61, p45)
		local function v71(p70)
			-- upvalues: (ref) v_u_84, (copy) v_u_69, (copy) v_u_68, (copy) v_u_56, (copy) p_u_42, (ref) v_u_67
			return v_u_84.f(p70, v_u_69, v_u_68, v_u_56, p_u_42, v_u_67)
		end
		local v72 = v_u_3.regulaFalsi(v71) / 2
		local v73 = math.exp(v72)
		local v74 = 1 / (v_u_56 ^ 2 + v73 ^ 2) + 1 / v_u_68
		local v75 = 1 / math.sqrt(v74)
		local v76 = 0
		for v77 = 1, #v60 do
			local v78 = v60[v77]
			local v79 = v61[v77]
			local v80 = p45[v77]
			v76 = v76 + v_u_84.g(v79) * (v80 - v_u_84.E(v55, v78, v79))
		end
		local v81 = v55 + v75 ^ 2 * v76
		local v82, v83 = v_u_84.convertFromGlicko2Rating(v81, v75)
		return v82, v83, v73
	end
}
return v_u_84
