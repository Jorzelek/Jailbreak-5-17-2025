-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 

-- Decompiled by Krnl

local v_u_1 = workspace:FindFirstChild("Terrain")
local v_u_2 = game:GetService("CollectionService")
game:GetService("Debris")
local v_u_3 = game:GetService("Players")
local v4 = game:GetService("ReplicatedStorage")
local v_u_5 = game:GetService("RunService")
local v_u_6 = require(v4.Std.GeomUtils)
local v_u_7 = require(v4.Std.TableUtils)
local v8 = require(v4.Std.Debug.Pool)
local v_u_9 = require(v4.VoxelDestruction.VoxelDestructionConsts)
local v_u_14 = v8.new(function()
	local v10 = Instance.new("Part")
	v10.Anchored = true
	local v11 = Enum.SurfaceType.SmoothNoOutlines
	local v12 = Enum.SurfaceType.SmoothNoOutlines
	v10.TopSurface = v11
	v10.BottomSurface = v12
	return v10
end, function(p13)
	p13:Destroy()
end)
v_u_14:Populate(5000)
local function v_u_31(p15, p16, p17)
	local v18 = p15.Size
	local v19 = p15.CFrame
	local v20 = v19 - v19.Position
	local v21 = p17:Dot(v18)
	local v22 = v18 - p17 * v21
	local v23 = v21 / 2
	local v24 = -v21 / 2
	local v25 = p17:Dot(v19:PointToObjectSpace(p16))
	local v26 = v23 - v25
	local v27 = v25 - v24
	if v24 > v25 or (v25 > v23 or (v26 <= 0.001 or v27 <= 0.001)) then
		return nil, nil
	end
	local v28 = v19 * (p17 * (v26 / 2 + v25))
	local v29 = v19 * (p17 * (-v27 / 2 + v25))
	p15.CFrame = CFrame.new(v28) * v20
	p15.Size = v22 + p17 * v26
	local v30 = p15:Clone()
	v30.CFrame = CFrame.new(v29) * v20
	v30.Size = v22 + p17 * v27
	v30.Parent = p15.Parent
	return p15, v30
end
local function v_u_59(p32, p33, p34)
	-- upvalues: (copy) v_u_31
	local v35 = p33 / 2
	local v36 = p34[1].CFrame
	local v37 = {}
	local v38 = {}
	for v39 = 1, #p34 do
		v37[p34[v39]] = true
	end
	for _, v40 in Enum.Axis:GetEnumItems() do
		local v41 = Vector3.FromAxis(v40)
		local v42 = p32 * (v41 * v35)
		local v43 = p32 * (-v41 * v35)
		local v44 = v36:VectorToObjectSpace(p32:VectorToWorldSpace(v41))
		local function v47(p45)
			local v46 = math.abs(p45)
			return math.min(1, v46)
		end
		local v48 = v47(v44.X)
		local v49 = v47(v44.Y)
		local v50 = v44.Z
		local v51 = Vector3.new(v48, v49, v47(v50))
		for v52 = 1, #p34 do
			local v53, v54 = v_u_31(p34[v52], v42, v51)
			if v53 == nil or v54 == nil then
				local v55, v56 = v_u_31(p34[v52], v43, v51)
				if v55 ~= nil and v56 ~= nil then
					p34[v52] = v55
					if not v37[v56] then
						v37[v56] = true
						table.insert(v38, v56)
					end
				end
			else
				if not v37[v54] then
					v37[v54] = true
					table.insert(v38, v54)
				end
				local v57, v58 = v_u_31(v54, v43, v51)
				if v57 == nil or v58 == nil then
					p34[v52] = v54
				else
					p34[v52] = v57
					if not v37[v58] then
						v37[v58] = true
						table.insert(v38, v58)
					end
				end
			end
		end
	end
	return v38
end
local function v_u_109(p_u_60, p_u_61, p_u_62, p_u_63)
	local v_u_64 = {}
	local function v_u_71(p65, p66, p67, p68)
		-- upvalues: (copy) v_u_64, (copy) p_u_63
		for v69 = p65, p66 do
			local v70 = (v69 * 73856093 + p67 * 19351301 + p68 * 83492791) % 100000000
			if v_u_64[v70] or not p_u_63(v70, v69, p67, p68) then
				return false
			end
		end
		return true
	end
	local function v_u_80(p72, p73, p74, p75, p76)
		-- upvalues: (copy) v_u_64, (copy) p_u_63
		for v77 = p75, p76 do
			for v78 = p72, p73 do
				local v79 = (v78 * 73856093 + p74 * 19351301 + v77 * 83492791) % 100000000
				if v_u_64[v79] or not p_u_63(v79, v78, p74, v77) then
					return false
				end
			end
		end
		return true
	end
	local function v_u_101(p81, p82, p83)
		-- upvalues: (copy) p_u_60, (copy) p_u_61, (copy) p_u_62, (copy) v_u_64, (copy) p_u_63, (copy) v_u_71, (copy) v_u_80
		local v84 = p_u_60
		local v85 = p_u_61
		local v86 = p_u_62
		local v87 = 0
		local v88 = 0
		local v89 = 0
		for v90 = p81 + 1, v84 do
			local v91 = (v90 * 73856093 + p82 * 19351301 + p83 * 83492791) % 100000000
			if v_u_64[v91] or not p_u_63(v91, v90, p82, p83) then
				break
			end
			v_u_64[v91] = true
			v87 = v87 + 1
		end
		local v92 = p83 + 1
		local v93 = (p81 * 73856093 + p82 * 19351301 + v92 * 83492791) % 100000000
		if not v_u_64[v93] and p_u_63(v93, p81, p82, p83 + 1) then
			for v94 = p83 + 1, v86 do
				if not v_u_71(p81, p81 + v87, p82, v94) then
					break
				end
				for v95 = p81, p81 + v87 do
					v_u_64[(v95 * 73856093 + p82 * 19351301 + v94 * 83492791) % 100000000] = true
				end
				v89 = v89 + 1
			end
		end
		local v96 = p82 + 1
		local v97 = (p81 * 73856093 + v96 * 19351301 + p83 * 83492791) % 100000000
		if not v_u_64[v97] and p_u_63(v97, p81, p82 + 1, p83) then
			for v98 = p82 + 1, v85 do
				if not v_u_80(p81, p81 + v87, v98, p83, p83 + v89) then
					break
				end
				for v99 = p83, p83 + v89 do
					for v100 = p81, p81 + v87 do
						v_u_64[(v100 * 73856093 + v98 * 19351301 + v99 * 83492791) % 100000000] = true
					end
				end
				v88 = v88 + 1
			end
		end
		return v87, v88, v89
	end
	return coroutine.wrap(function()
		-- upvalues: (copy) p_u_60, (copy) p_u_61, (copy) p_u_62, (copy) v_u_64, (copy) p_u_63, (copy) v_u_101
		for v102 = 1, p_u_60 do
			for v103 = 1, p_u_61 do
				for v104 = 1, p_u_62 do
					local v105 = (v102 * 73856093 + v103 * 19351301 + v104 * 83492791) % 100000000
					if not v_u_64[v105] and p_u_63(v105, v102, v103, v104) then
						local v106, v107, v108 = v_u_101(v102, v103, v104)
						coroutine.yield(v102, v103, v104, v106 + 1, v107 + 1, v108 + 1)
					end
				end
			end
		end
	end)
end
local v_u_110 = Instance.new("Model")
v_u_110.Name = "VoxelDestructionDebris"
v_u_110.Parent = workspace
local function v_u_125(p111, p112, p113, p114)
	-- upvalues: (copy) v_u_14, (copy) v_u_110, (copy) v_u_6
	local v_u_115 = v_u_14:Get()
	v_u_115.CastShadow = false
	local v116 = p113.X
	local v117 = p114.Size.X
	local v118 = math.min(v116, v117)
	local v119 = p113.Y
	local v120 = p114.Size.Y
	local v121 = math.min(v119, v120)
	local v122 = p113.Z
	local v123 = p114.Size.Z
	local v124 = math.min(v122, v123)
	v_u_115.Size = Vector3.new(v118, v121, v124)
	v_u_115.Material = p114.Material
	v_u_115.Color = p114.Color
	v_u_115.Transparency = p114.Transparency
	v_u_115.CanTouch = false
	v_u_115.CanCollide = math.random() < 0.1
	v_u_115.CollisionGroup = "NoCollide"
	v_u_115.CanQuery = false
	v_u_115.Anchored = false
	v_u_115.Position = p112
	v_u_115.Parent = v_u_110
	v_u_115.AssemblyLinearVelocity = ((p112 - p111).Unit * 0.5 + v_u_6.randomPointInSphere() * 0.5 + Vector3.new(0, 1, 0)) * 100
	v_u_115.AssemblyAngularVelocity = v_u_6.randomPointInSphere() * 100
	task.delay(math.random(), function()
		-- upvalues: (copy) v_u_115, (ref) v_u_14
		v_u_115.Parent = nil
		v_u_14:Free(v_u_115)
	end)
end
local function v_u_172(p_u_126, p127, p_u_128, p_u_129, p_u_130, p_u_131, p_u_132)
	-- upvalues: (copy) v_u_125, (copy) v_u_109
	local v_u_133 = {}
	local v_u_134 = 0
	local v135 = math.round
	local v136 = p127 / p_u_128
	local v137 = v135(v136.X)
	local v138 = v135(v136.Y)
	local v139 = v136.Z
	local v140 = Vector3.new(v137, v138, v135(v139))
	local v_u_141 = -(p_u_128 + v140 * p_u_128) / 2
	local function v_u_146(p142, p143, p144)
		-- upvalues: (copy) p_u_128, (copy) v_u_141, (copy) p_u_126, (copy) p_u_129, (copy) p_u_130
		local v145 = Vector3.new(p142, p143, p144) * p_u_128 + v_u_141
		return (p_u_126 * v145 - p_u_129).Magnitude > p_u_130 + math.noise(v145.X * 10 + 3845.013130122367, v145.Y * 10 + 10782.895910767973, v145.Z * 10 + 6047.444858337303) * 0.5
	end
	local v_u_147 = 0.2 * (p_u_128.Magnitude * 0.5773502691896257)
	local function v154(p148, p149, p150, p151)
		-- upvalues: (copy) v_u_133, (copy) v_u_146, (copy) p_u_132, (copy) v_u_147, (copy) p_u_128, (copy) v_u_141, (copy) p_u_126, (ref) v_u_125, (copy) p_u_129, (copy) p_u_131, (ref) v_u_134
		if v_u_133[p148] then
			return v_u_133[p148]
		end
		local v152 = v_u_146(p149, p150, p151)
		v_u_133[p148] = v152
		if p_u_132 and (not v152 and math.random() < v_u_147) then
			local v_u_153 = p_u_126 * (Vector3.new(p149, p150, p151) * p_u_128 + v_u_141)
			task.delay(math.random() * 0.2, function()
				-- upvalues: (ref) v_u_125, (ref) p_u_129, (copy) v_u_153, (ref) p_u_128, (ref) p_u_131
				v_u_125(p_u_129, v_u_153, p_u_128, p_u_131)
			end)
		end
		if v152 then
			v_u_134 = v_u_134 + 1
		end
		return v152
	end
	local v155 = Instance.new("Model")
	v155.Parent = p_u_131.Parent
	local v156 = p_u_131:IsA("BasePart")
	local v157 = 0
	for v158, v159, v160, v161, v162, v163 in v_u_109(v140.X, v140.Y, v140.Z, v154) do
		local v164 = Vector3.new(v161, v162, v163)
		local v165 = v158 - 0.5
		local v166 = v159 - 0.5
		local v167 = v160 - 0.5
		local v168 = (Vector3.new(v165, v166, v167) + v164 * 0.5) * p_u_128 + v_u_141
		local v169
		if v156 then
			v169 = Instance.new(p_u_131.ClassName)
			v169.Anchored = p_u_131.Anchored
			v169.CanCollide = p_u_131.CanCollide
			v169.CastShadow = false
			v169.Material = p_u_131.Material
			v169.MaterialVariant = p_u_131.MaterialVariant
			v169.Color = p_u_131.Color
			v169.Transparency = p_u_131.Transparency
			v169.Size = v164 * p_u_128
			v169.CFrame = p_u_126 * CFrame.new(v168)
			local v170 = p_u_131.TopSurface
			local v171 = p_u_131.BottomSurface
			v169.TopSurface = v170
			v169.BottomSurface = v171
		else
			v169 = nil
		end
		v169.Parent = v155
		v157 = v157 + 1
	end
	return v155
end
local function v_u_191(p173, p174, p175, p176)
	local v177 = p173 * (-p174 / 2 + p175 / 2) + p176
	local v178 = math.round
	local v179 = v177 / p175
	local v180 = v178(v179.X)
	local v181 = v178(v179.Y)
	local v182 = v179.Z
	local v183 = Vector3.new(v180, v181, v178(v182)) * p175 - p176 - p175 / 2
	local v184 = p173 * (p174 / 2 - p175 / 2) + p176
	local v185 = math.round
	local v186 = v184 / p175
	local v187 = v185(v186.X)
	local v188 = v185(v186.Y)
	local v189 = v186.Z
	local v190 = Vector3.new(v187, v188, v185(v189)) * p175 - p176 + p175 / 2
	return CFrame.new((v183 + v190) / 2), v190 - v183
end
local function v_u_199(p192, p193)
	-- upvalues: (copy) v_u_1
	local v194 = v_u_1:ReadVoxels(Region3.new(p192 - Vector3.new(1, 1, 1) * p193 * 4, p192 + Vector3.new(1, 1, 1) * p193 * 4), 4)
	local v195 = v194.Size
	for v196 = 1, v195.X do
		for v197 = 1, v195.Y do
			for v198 = 1, v195.Z do
				if v194[v196][v197][v198] == Enum.Material.Water then
					return true
				end
			end
		end
	end
	return false
end
local v236 = {
	["subtractSphere"] = function(p200)
		-- upvalues: (copy) v_u_199, (copy) v_u_1, (copy) v_u_2, (copy) v_u_9, (copy) v_u_125, (copy) v_u_191, (copy) v_u_59, (copy) v_u_7, (copy) v_u_172
		if not p200.fx then
			p200.fx = false
		end
		local v201 = p200.fx ~= nil
		assert(v201)
		if not p200.copy then
			p200.copy = false
		end
		if not p200.terrainDamageDisabled then
			local v202 = p200.sphereRadius * 0.4
			if not v_u_199(p200.spherePosition, v202) then
				v_u_1:FillBall(p200.spherePosition, p200.sphereRadius, Enum.Material.Air)
			end
		end
		local v_u_203 = {}
		local v_u_204 = {}
		for _, v205 in workspace:GetPartBoundsInRadius(p200.spherePosition, p200.sphereRadius, p200.overlapParams) do
			if not v_u_2:HasTag(v205, v_u_9.VOXEL_INDESTRUCTIBLE_TAG_NAME) and (not p200.partsOnly or v205:IsA("Part")) and (v205.CanCollide and v205.Transparency ~= 1) then
				local v206 = v205:GetAttribute(v_u_9.VOXEL_SIZE_ATTR_NAME) or (not p200.voxelSize and Vector3.new(1, 1, 1) or p200.voxelSize)
				if v205.Size.Magnitude <= v206.Magnitude + 0.1 then
					if p200.fx then
						v_u_125(p200.spherePosition, v205.Position, v206, v205)
					end
					if p200.copy then
						local v207 = { v205, v205.Parent }
						table.insert(v_u_203, v207)
						v205.Parent = nil
					else
						v205:Destroy()
					end
				else
					local v208 = v205.CFrame
					local v209 = v205.Size
					local v210 = math.round
					local v211 = v209 / v206
					local v212 = v210(v211.X)
					local v213 = v210(v211.Y)
					local v214 = v211.Z
					local v215 = -(v206 + Vector3.new(v212, v213, v210(v214)) * v206) / 2
					local v216 = v208 - v208.Position + p200.spherePosition
					local v217 = Vector3.new(1, 1, 1) * p200.sphereRadius * 2 + v206 * 2
					local v218, v219 = v_u_191(v208:ToObjectSpace(v216), v217, v206, v215)
					local v220 = v208:ToWorldSpace(v218)
					local v221
					if p200.copy then
						v221 = v205:Clone()
						v221.Parent = v205.Parent
						local v222 = { v205, v205.Parent }
						table.insert(v_u_203, v222)
						v205.Parent = nil
					else
						v221 = v205
					end
					local v223 = { v221 }
					local v224 = v_u_59(v220, v219, v223)
					table.insert(v_u_204, v221)
					v_u_7.concatInPlace(v_u_204, v224)
					local v225 = OverlapParams.new()
					v225.FilterType = Enum.RaycastFilterType.Include
					v225.FilterDescendantsInstances = v223
					local v226 = workspace:GetPartBoundsInBox(v220, v219 - Vector3.new(0.1, 0.1, 0.1), v225)
					for v227 = 1, #v226 do
						local v228 = v226[v227]
						local v229 = v228.CFrame
						local v230 = v228.Size
						local v231, v232 = v_u_191(v208:ToObjectSpace(v229), v230, v206, v215)
						local v233 = v_u_172(v208:ToWorldSpace(v231), v232, v206, p200.spherePosition, p200.sphereRadius, v221, p200.fx)
						table.insert(v_u_204, v233)
						v228:Destroy()
					end
				end
			end
		end
		return function()
			-- upvalues: (copy) v_u_203, (copy) v_u_204
			for _, v_u_234 in v_u_203 do
				pcall(function()
					-- upvalues: (copy) v_u_234
					v_u_234[1].Parent = v_u_234[2]
				end)
			end
			for _, v235 in v_u_204 do
				v235:Destroy()
			end
		end
	end
}
local v_u_237 = {}
local v_u_238 = nil
function v236.addToRestoreVoxelDestructionQueue(p239)
	-- upvalues: (ref) v_u_238, (copy) v_u_237, (copy) v_u_3, (copy) v_u_5
	if v_u_238 then
		task.cancel(v_u_238)
		v_u_238 = nil
	end
	local v240 = v_u_237
	table.insert(v240, p239)
	local v241 = v_u_3.LocalPlayer:GetNetworkPing()
	if v_u_5:IsStudio() then
		v241 = math.max(v241, 0.15)
	end
	v_u_238 = task.delay(2 * v241 + 0.1, function()
		-- upvalues: (ref) v_u_237
		for v242 = #v_u_237, 1, -1 do
			v_u_237[v242]()
		end
		table.clear(v_u_237)
	end)
end
return v236
