-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v1 = {}
local v_u_2 = require(script.Parent.Bitbuf)
local v_u_3 = require(script.Parent.Base85)
local function v_u_12(p4)
	local v5 = { p4:GetComponents() }
	local v6 = 0
	local v7 = 0
	for v8 = 4, 12 do
		local v9 = v5[v8]
		local v10 = math.abs(v9)
		if v10 == 1 then
			v7 = v7 + 1
		elseif v10 == 0 then
			v6 = v6 + 1
		end
	end
	local v11
	if v6 == 6 then
		v11 = v7 == 3
	else
		v11 = false
	end
	return v11
end
local function v_u_15(p13)
	for _, v14 in ipairs(Enum.NormalId:GetEnumItems()) do
		if Vector3.FromNormalId(v14):Dot(p13) == 1 then
			return v14.Value
		end
	end
	return -1
end
local function v_u_40(p16)
	local v17, v18, v19, v20, v21, v22, v23, v24, v25 = select(4, p16:GetComponents())
	local v26 = v17 + v21 + v25
	local v27 = 2
	local v28, v29, v30, v31
	if v26 > 0 then
		local v32 = 1 + v26
		local v33 = v27 * math.sqrt(v32)
		v28 = v33 / 4
		v29 = (v24 - v22) / v33
		v30 = (v19 - v23) / v33
		v31 = (v20 - v18) / v33
	elseif v21 < v17 and v25 < v17 then
		local v34 = 1 + v17 - v21 - v25
		local v35 = v27 * math.sqrt(v34)
		v28 = (v24 - v22) / v35
		v29 = v35 / 4
		v30 = (v20 + v18) / v35
		v31 = (v19 + v23) / v35
	elseif v25 < v21 then
		local v36 = 1 - v17 + v21 - v25
		local v37 = v27 * math.sqrt(v36)
		v28 = (v19 - v23) / v37
		v29 = (v20 + v18) / v37
		v30 = v37 / 4
		v31 = (v24 + v22) / v37
	else
		local v38 = 1 - v17 - v21 + v25
		local v39 = v27 * math.sqrt(v38)
		v28 = (v20 - v18) / v39
		v29 = (v19 + v23) / v39
		v30 = (v24 + v22) / v39
		v31 = v39 / 4
	end
	return {
		v29,
		v30,
		v31,
		v28
	}
end
function v1.encode(p41)
	-- upvalues: (copy) v_u_2, (copy) v_u_12, (copy) v_u_15, (copy) v_u_40, (copy) v_u_3
	local v42 = v_u_2.new()
	local v43 = p41.Position
	v42:WriteFloat(32, v43.X)
	v42:WriteFloat(32, v43.Y)
	v42:WriteFloat(32, v43.Z)
	local v44
	if v_u_12(p41) then
		local v45 = v_u_15(p41.RightVector)
		local v46 = v_u_15(p41.UpVector)
		local v47 = 6 * v45 + v46
		local v48 = v47 / 6
		v44 = math.floor(v48) % 3 == v47 % 3 and -1 or v47
	else
		v44 = -1
	end
	v42:WriteByte(v44 + 1)
	if v44 < 0 then
		local v49 = v_u_40(p41)
		v42:WriteByte(#v49)
		for _, v50 in ipairs(v49) do
			v42:WriteFloat(32, v50)
		end
	end
	local v51 = v42:String()
	return v_u_3.encode(v51)
end
function v1.decode(p52)
	-- upvalues: (copy) v_u_3, (copy) v_u_2
	local v53, v54 = v_u_3.decode(p52)
	if v53 then
		assert(v53)
	end
	local v55 = v_u_2.fromString(v54)
	local v56 = v55:ReadFloat(32)
	local v57 = v55:ReadFloat(32)
	local v58 = v55:ReadFloat(32)
	local v59 = v55:ReadByte()
	if v59 <= 0 then
		local v60 = v55:ReadByte()
		local v61 = table.create(v60)
		for v62 = 1, v60 do
			v61[v62] = v55:ReadFloat(32)
		end
		return CFrame.new(v56, v57, v58, unpack(v61))
	end
	local v63 = v59 - 1
	local v64 = v63 / 6
	if math.floor(v64) % 3 == v63 % 3 then
		return CFrame.new(v56, v57, v58)
	end
	local v65 = Vector3.new(v56, v57, v58)
	local v66 = Vector3.FromNormalId(v63 / 6)
	local v67 = Vector3.FromNormalId(v63 % 6)
	return CFrame.fromMatrix(v65, v66, v67)
end
return v1
