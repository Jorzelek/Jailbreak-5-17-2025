-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v1 = {}
local v_u_2 = {
	"0",
	"1",
	"2",
	"3",
	"4",
	"5",
	"6",
	"7",
	"8",
	"9",
	"A",
	"B",
	"C",
	"D",
	"E",
	"F",
	"G",
	"H",
	"I",
	"J",
	"K",
	"L",
	"M",
	"N",
	"O",
	"P",
	"Q",
	"R",
	"S",
	"T",
	"U",
	"V",
	"W",
	"X",
	"Y",
	"Z",
	"a",
	"b",
	"c",
	"d",
	"e",
	"f",
	"g",
	"h",
	"i",
	"j",
	"k",
	"l",
	"m",
	"n",
	"o",
	"p",
	"q",
	"r",
	"s",
	"t",
	"u",
	"v",
	"w",
	"x",
	"y",
	"z",
	"!",
	"#",
	"$",
	"%",
	"&",
	"(",
	")",
	"*",
	"+",
	"-",
	";",
	"<",
	"=",
	">",
	"?",
	"@",
	"^",
	"_",
	"`",
	"{",
	"|",
	"}",
	"~"
}
function v1.encode(p3)
	-- upvalues: (copy) v_u_2
	local v4 = table.create
	local v5 = (#p3 + 3) / 4
	local v6 = v4(math.floor(v5) * 5)
	local v7 = 1
	local v8 = 1
	while v7 <= #p3 do
		local v9 = v7 + 3
		local v10, v11, v12, v13 = string.byte(p3, v7, v9)
		local v14 = (v10 or 0) * 16777216 + (v11 or 0) * 65536 + (v12 or 0) * 256 + (v13 or 0)
		for v15 = 4, 0, -1 do
			local v16 = v8 + v15
			local v17 = v_u_2
			local v18 = v14 % 85
			v6[v16] = v17[math.floor(v18) + 1]
			local v19 = v14 / 85
			v14 = math.floor(v19)
		end
		v7 = v7 + 4
		v8 = v8 + 5
	end
	for v20 = 1, v7 - #p3 - 1 do
		v6[v8 - v20] = nil
	end
	return table.concat(v6)
end
local v_u_21 = {
	[48] = 0,
	[49] = 1,
	[50] = 2,
	[51] = 3,
	[52] = 4,
	[53] = 5,
	[54] = 6,
	[55] = 7,
	[56] = 8,
	[57] = 9,
	[65] = 10,
	[66] = 11,
	[67] = 12,
	[68] = 13,
	[69] = 14,
	[70] = 15,
	[71] = 16,
	[72] = 17,
	[73] = 18,
	[74] = 19,
	[75] = 20,
	[76] = 21,
	[77] = 22,
	[78] = 23,
	[79] = 24,
	[80] = 25,
	[81] = 26,
	[82] = 27,
	[83] = 28,
	[84] = 29,
	[85] = 30,
	[86] = 31,
	[87] = 32,
	[88] = 33,
	[89] = 34,
	[90] = 35,
	[97] = 36,
	[98] = 37,
	[99] = 38,
	[100] = 39,
	[101] = 40,
	[102] = 41,
	[103] = 42,
	[104] = 43,
	[105] = 44,
	[106] = 45,
	[107] = 46,
	[108] = 47,
	[109] = 48,
	[110] = 49,
	[111] = 50,
	[112] = 51,
	[113] = 52,
	[114] = 53,
	[115] = 54,
	[116] = 55,
	[117] = 56,
	[118] = 57,
	[119] = 58,
	[120] = 59,
	[121] = 60,
	[122] = 61,
	[33] = 62,
	[35] = 63,
	[36] = 64,
	[37] = 65,
	[38] = 66,
	[40] = 67,
	[41] = 68,
	[42] = 69,
	[43] = 70,
	[45] = 71,
	[59] = 72,
	[60] = 73,
	[61] = 74,
	[62] = 75,
	[63] = 76,
	[64] = 77,
	[94] = 78,
	[95] = 79,
	[96] = 80,
	[123] = 81,
	[124] = 82,
	[125] = 83,
	[126] = 84,
	[9] = -1,
	[10] = -1,
	[11] = -1,
	[12] = -1,
	[13] = -1,
	[32] = -1,
	[133] = -1,
	[160] = -1
}
function v1.decode(p22)
	-- upvalues: (copy) v_u_21
	local v23 = table.create
	local v24 = #p22 * 4 / 5
	local v25 = v23((math.floor(v24)))
	local v26 = 0
	local v27 = 0
	for v28 = 1, #p22 do
		local v29 = v_u_21[string.byte(p22, v28)]
		if not v29 then
			return "invalid byte at " .. v28, ""
		end
		if v29 >= 0 then
			v26 = v26 * 85 + v29
			v27 = v27 + 1
			if v27 == 5 then
				local v30 = v26 / 16777216 % 256
				local v31 = math.floor(v30)
				local v32 = v26 / 65536 % 256
				local v33 = math.floor(v32)
				local v34 = v26 / 256 % 256
				local v35 = math.floor(v34)
				local v36 = v26 % 256
				local v37 = math.floor(v36)
				local v38 = string.char(v31, v33, v35, v37)
				table.insert(v25, v38)
				v26 = 0
				v27 = 0
			end
		end
	end
	if v27 > 0 then
		if v27 == 1 then
			return "corrupted base85 data at byte " .. #v25 - 1, ""
		end
		for _ = v27, 4 do
			v26 = v26 * 85 + 84
		end
		for _ = 0, v27 - 2 do
			local v39 = v26 / 16777216 % 256
			local v40 = math.floor(v39)
			local v41 = string.char(v40)
			table.insert(v25, v41)
			v26 = v26 * 256
		end
	end
	return nil, table.concat(v25)
end
return v1
