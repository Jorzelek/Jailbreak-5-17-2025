-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v_u_1 = game:GetService("RunService")
local v_u_2 = require(script.Trove)
local v_u_3 = Random.new()
local v_u_4 = 0
local v_u_5 = {}
v_u_5.__index = v_u_5
function v_u_5.new()
	-- upvalues: (copy) v_u_5, (copy) v_u_1, (copy) v_u_3, (copy) v_u_2
	local v6 = v_u_5
	local v7 = setmetatable({}, v6)
	v7.Amplitude = 1
	v7.Frequency = 1
	v7.FadeInTime = 1
	v7.FadeOutTime = 1
	v7.SustainTime = 0
	v7.Sustain = false
	v7.PositionInfluence = Vector3.new(1, 1, 1)
	v7.RotationInfluence = Vector3.new(1, 1, 1)
	local v8
	if v_u_1:IsRunning() then
		v8 = time
	else
		v8 = os.clock
	end
	v7.TimeFunction = v8
	v7._timeOffset = v_u_3:NextNumber(-1000000000, 1000000000)
	v7._startTime = 0
	v7._trove = v_u_2.new()
	v7._running = false
	return v7
end
function v_u_5.InverseSquare(p9, p10)
	local v11 = p10 < 1 and 1 or p10
	return p9 * (1 / (v11 * v11))
end
function v_u_5.NextRenderName()
	-- upvalues: (ref) v_u_4
	v_u_4 = v_u_4 + 1
	return ("__shake_%.4i__"):format(v_u_4)
end
function v_u_5.Start(p_u_12)
	p_u_12._startTime = p_u_12.TimeFunction()
	p_u_12._running = true
	p_u_12._trove:Add(function()
		-- upvalues: (copy) p_u_12
		p_u_12._running = false
	end)
end
function v_u_5.Stop(p13)
	p13._trove:Clean()
end
function v_u_5.IsShaking(p14)
	return p14._running
end
function v_u_5.StopSustain(p15)
	local v16 = p15.TimeFunction()
	p15.Sustain = false
	p15.SustainTime = v16 - p15._startTime - p15.FadeInTime
end
function v_u_5.Update(p17)
	local v18 = false
	local v19 = p17.TimeFunction()
	local v20 = v19 - p17._startTime
	local v21 = (v19 + p17._timeOffset) / p17.Frequency % 1000000
	local v22 = 1
	local v23 = v20 >= p17.FadeInTime and 1 or v20 / p17.FadeInTime
	if not p17.Sustain and p17.FadeInTime + p17.SustainTime < v20 then
		if p17.FadeOutTime == 0 then
			v18 = true
		else
			v22 = 1 - (v20 - p17.FadeInTime - p17.SustainTime) / p17.FadeOutTime
			if not p17.Sustain and p17.FadeInTime + p17.SustainTime + p17.FadeOutTime <= v20 then
				v18 = true
			end
		end
	end
	local v24 = math.noise(v21, 0) / 2
	local v25 = math.noise(0, v21) / 2
	local v26 = math.noise(v21, v21) / 2
	local v27 = Vector3.new(v24, v25, v26) * p17.Amplitude * math.min(v23, v22)
	if v18 then
		p17:Stop()
	end
	return p17.PositionInfluence * v27, p17.RotationInfluence * v27, v18
end
function v_u_5.OnSignal(p_u_28, p29, p_u_30)
	return p_u_28._trove:Connect(p29, function()
		-- upvalues: (copy) p_u_30, (copy) p_u_28
		p_u_30(p_u_28:Update())
	end)
end
function v_u_5.BindToRenderStep(p_u_31, p32, p33, p_u_34)
	p_u_31._trove:BindToRenderStep(p32, p33, function()
		-- upvalues: (copy) p_u_34, (copy) p_u_31
		p_u_34(p_u_31:Update())
	end)
end
function v_u_5.Clone(p35)
	-- upvalues: (copy) v_u_5
	local v36 = v_u_5.new()
	for _, v37 in {
		"Amplitude",
		"Frequency",
		"FadeInTime",
		"FadeOutTime",
		"SustainTime",
		"Sustain",
		"PositionInfluence",
		"RotationInfluence",
		"TimeFunction"
	} do
		v36[v37] = p35[v37]
	end
	return v36
end
function v_u_5.Destroy(p38)
	p38:Stop()
end
return v_u_5
