-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgOfARFDb250aW51b3VzU3ByaW5nMRJDb250aW51b3VzU3ByaW5nM0YGdHlwZW9mB1ZlY3RvcjMBdAFwAXYBcwFkAnQwCk1ha2VTcHJpbmcEdGljaw9ub3QgaW1wbGVtZW50ZWQGYXNzZXJ0BlNwcmluZw9TcHJpbmdTZXRUYXJnZXQQU3ByaW5nQWNjZWxlcmF0ZQRQYXJ0BlRhcmdldAFrAUICZjMPTWFrZVdvcmxkU3ByaW5nBkNGcmFtZQhWZWxvY2l0eRN2ZWN0b3JUb09iamVjdFNwYWNlEVdvcmxkU3ByaW5nVXBkYXRlCFBvc2l0aW9uFFdvcmxkU3ByaW5nU2V0VGFyZ2V0CkNyb3NzTWFnU3ELQ3Jvc3NNYWdTcUYBeAF5AXoTQ0ZyYW1lRnJvbUF4aXNBbmdsZRRDRnJhbWVGcm9tQXhpc0FuZ2xlRhJDRnJhbWVUb0F4aXNBbmdsZUYRQ0ZyYW1lVG9BeGlzQW5nbGUVVW5pdFZlY3RvclRvQW5nbGVzWVhGFFVuaXRWZWN0b3JUb0FuZ2xlc1lYEVZlY3RvclRvQW5nbGVzWVhGEFZlY3RvclRvQW5nbGVzWVgSVmVjdG9yRnJvbUFuZ2xlc1lYClF1YXRlcm5pb24LUXVhdGVybmlvbkYUQXhpc0FuZ2xlSW50ZXJwb2xhdGUBWAFaEklzUG9pbnRJblBvbHlnb25YWhJwb2ludFRvT2JqZWN0U3BhY2UUSXNQb2ludEluUmVjdGFuZ2xlWVoUSXNQb2ludEluUmVjdGFuZ2xlWFkUSXNQb2ludEluUmVjdGFuZ2xlWFoOSXNQb2ludEluUHJpc20KbG9va1ZlY3RvcgR1bml0EklzUG9pbnRJbkZpeGVkQ29uZQNEb3QcRG9lc0ZpeGVkQ29uZUludGVyc2VjdFNwaGVyZQhUb3BQb2ludAtCb3R0b21Qb2ludAh1cFZlY3RvcgZOb3JtYWwRSW50ZXJzZWN0UmF5UGxhbmUdSW50ZXJzZWN0UmVjdGFuZ2xlc0J5Q29ybmVyc0YUSW50ZXJzZWN0UmVjdGFuZ2xlc0YVSW50ZXJzZWN0UmVjdGFuZ2xlc1haBVJvdW5kCFJvdW5kVmVjB0FBQkJYWkYGQUFCQlhaBFNpemUPSXNQcmlzbVZpc2libGVEDklzUHJpc21WaXNpYmxlFElzUHJpc21BcHByb3hWaXNpYmxlE0ludGVyc2VjdFJheVNwaGVyZUYSSW50ZXJzZWN0UmF5U3BoZXJlAiV4BmZvcm1hdCR4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgEW3h5XQRnc3ViBEdVSUQGeHh4LXl4CVNob3J0R1VJRAlVbmlmb3JtMkQKTmV4dE51bWJlcg5XZWlnaHRlZFJhbmRvbQFZBkxvb2tBdARTb3J0CkJpbmFyeUZpbmQEbWF0aAZyYW5kb20HU2h1ZmZsZQVJc05hTgdJc05hTnYzC3JpZ2h0VmVjdG9yB0lzTmFOY2YFY2xhbXAHQ2xhbXB2MwZzdHJpbmcFbWF0Y2gVXihbXiVkXSolZCkoJWQqKSguLSkkB3JldmVyc2UIKCVkJWQlZCkDJTEsBWNvbW1hAAEtBSVzJCVzC0Zvcm1hdE1vbmV5BWZsb29yBnN0b2htcwJvcwR0aW1lA05vdwRjZWlsDE5leHRNaWRuaWdodBFUaW1lVW50aWxNaWRuaWdodA1UaW1lQWNjdW1EaWZmDFRpbWVBY2N1bUFkZA5FYXNlX2luT3V0UXVhZAFpAnQxBFR5cGUIRmluaXNoZWQJVHdlZW5UeXBlBkxpbmVhcglNYWtlVHdlZW4JSW5PdXRRdWFkC1VwZGF0ZVR3ZWVuDFR3ZWVuRnVuU3dhcANuZXcGQW5nbGVzBUNyb3NzA2NvcwNzaW4DdGFuBGFjb3MEYXNpbgVhdGFuMgRhdGFuCmNvbXBvbmVudHMHaW52ZXJzZQ1mcm9tQXhpc0FuZ2xlA2FicwRnYW1lEVJlcGxpY2F0ZWRTdG9yYWdlCkdldFNlcnZpY2UHcmVxdWlyZQNTdGQGU3RyaW5nEUNvbnRpbnVvdXNTcHJpbmczBUNsYW1wCmJhc2U4NVVVSUQKQmFzZTg1VVVJRAZSYW5kb20DbWF4AEgMBgAAAAAJCQgCBQkHCANDBgEHJgsAASYKCwIJCQoFCQgJBEMHAgiCBgMAAAAeAQEYAAAAAAAAAAAAHwAAAAAWDAAAAAAZCQ4GCwkNDglDDAMNCQ8ICwkODwlDDQUOCRAICwkPEAlDDgUPJhMAAyYSEwYJERILCRARCkMPBhAmFAEEJhMUBwkSEwsJERIKQxAHESYVAgUmFBUICRMUCwkSEwpDEQgSggwH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

-- Decompiled by Krnl

local v_u_1 = Vector3.new
local v_u_2 = CFrame.new
local _ = CFrame.Angles
local v3 = Vector3.new(0, 0, 0)
local v_u_4 = v_u_2()
local v_u_5 = v3.Cross
local v_u_6 = v3.Dot
local v_u_7 = math.cos
local v_u_8 = math.sin
local v_u_9 = math.tan
local v_u_10 = math.acos
local v_u_11 = math.asin
local v_u_12 = math.atan2
local _ = math.atan
local v_u_13 = v_u_4.components
local v_u_14 = v_u_4.inverse
local v_u_15 = CFrame.fromAxisAngle
local v_u_16 = math.abs
local v_u_17 = math.floor
local v_u_18 = math.random
local _ = v_u_4.pointToObjectSpace
local v19 = game:GetService("ReplicatedStorage")
local v20 = require(v19.Std.String)
local v_u_27 = {
	["ContinuousSpring1"] = function(p21, p22, p23, p24, p25, p26)
		return p22 + p23 * p26 * p24, p23 + (p21 - p22 - p23) * p26 * p25
	end
}
v_u_27.ContinuousSpring3 = v_u_27.ContinuousSpring1
function v_u_27.ContinuousSpring3F(p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39)
	return p31 + p34 * p39 * p37, p33 + p36 * p39 * p37, p33 + p36 * p39 * p37, p34 + (p28 - p31 - p34) * p39 * p38, p35 + (p29 - p32 - p35) * p39 * p38, p36 + (p30 - p33 - p36) * p39 * p38
end
function v_u_27.MakeSpring(p40, p41, p42)
	local v43 = typeof(p40) == "Vector3" and Vector3.new(0, 0, 0) or 0
	return {
		["t"] = p40,
		["p"] = p40 or v43,
		["v"] = v43,
		["s"] = p41 or 10,
		["d"] = p42 or 0.5,
		["t0"] = 0
	}
end
function v_u_27.Spring(p44, _)
	-- upvalues: (copy) v_u_7, (copy) v_u_8
	local v45 = tick()
	local v46 = p44.t
	local v47 = p44.t0
	local v48 = p44.p
	local v49 = p44.v
	local v50 = p44.s
	local v51 = p44.d
	local v52 = v45 - v47
	if v50 == 0 then
		return v48, v49
	end
	if v51 < 1 then
		local v53 = (1 - v51 * v51) ^ 0.5
		local v54 = v48 - v46
		local v55 = (v51 * v54 + v49 / v50) / v53
		local v56 = 2.718281828459045 ^ (-v51 * v50 * v52)
		local v57 = v_u_7(v53 * v50 * v52)
		local v58 = v_u_8(v53 * v50 * v52)
		return v46 + (v54 * v57 + v55 * v58) * v56, ((v54 * v51 - v51 * v55 - v49) * v57 + (v54 * v53 + v55 * v51) * v58) * -v56
	end
	if v51 <= 1 then
		local v59 = v48 - v46
		local v60 = v59 + v49 / v50
		local v61 = 2.718281828459045 ^ (-v50 * v52)
		return v46 + (v59 + v60 * v50 * v52) * v61, v50 * (v60 - v59 - v60 * v50 * v52) * v61
	end
	assert(false, "not implemented")
end
function v_u_27.SpringSetTarget(p62, p63)
	-- upvalues: (copy) v_u_27
	local v64 = tick()
	local v65, v66 = v_u_27.Spring(p62, v64)
	p62.p = v65
	p62.v = v66
	p62.t0 = v64
	p62.t = p63
end
function v_u_27.SpringAccelerate(p67, p68)
	-- upvalues: (copy) v_u_27
	local v69 = tick()
	local v70, v71 = v_u_27.Spring(p67, v69)
	p67.p = v70
	p67.v = v71 + p68
	p67.t0 = v69
end
function v_u_27.MakeWorldSpring()
	return {
		["Part"] = nil,
		["Target"] = nil,
		["k"] = 200,
		["B"] = 15,
		["f3"] = nil
	}
end
function v_u_27.WorldSpringUpdate(p72, _)
	local v73 = p72.Part
	local v74 = p72.Target
	local v75 = p72.k
	local v76 = p72.B
	p72.f3 = not v74 and Vector3.new(0, 0, 0) or v75 * v74 - v76 * v73.CFrame:vectorToObjectSpace(v73.Velocity)
end
function v_u_27.WorldSpringSetTarget(p77, p78)
	p77.Target = p78 - p77.Part.Position
end
function v_u_27.CrossMagSq(p79, p80)
	-- upvalues: (copy) v_u_6
	local v81 = v_u_6(p79, p80)
	return v_u_6(p79, p79) * v_u_6(p80, p80) - v81 * v81
end
function v_u_27.CrossMagSqF(p82, p83, p84, p85, p86, p87)
	local v88 = p82 * p85 + p83 * p86 + p84 * p87
	return (p82 * p82 + p83 * p83 + p84 * p84) * (p85 * p85 + p86 * p86 + p87 * p87) - v88 * v88
end
function v_u_27.CFrameFromAxisAngle(p89)
	-- upvalues: (copy) v_u_6, (copy) v_u_8, (copy) v_u_2, (copy) v_u_7, (copy) v_u_4
	local v90 = v_u_6(p89, p89) ^ 0.5
	if v90 <= 1e-6 then
		return v_u_4
	end
	local v91 = v_u_8(v90 * 0.5) / v90
	return v_u_2(0, 0, 0, v91 * p89.x, v91 * p89.y, v91 * p89.z, (v_u_7(v90 * 0.5)))
end
function v_u_27.CFrameFromAxisAngleF(p92, p93, p94)
	-- upvalues: (copy) v_u_8, (copy) v_u_2, (copy) v_u_7, (copy) v_u_4
	local v95 = (p92 * p92 + p93 * p93 + p94 * p94) ^ 0.5
	if v95 <= 1e-6 then
		return v_u_4
	end
	local v96 = v_u_8(v95 * 0.5) / v95
	return v_u_2(0, 0, 0, v96 * p92, v96 * p93, v96 * p94, (v_u_7(v95 * 0.5)))
end
function v_u_27.CFrameToAxisAngleF(p97, p98, p99, p100, p101, p102, p103, p104, p105)
	-- upvalues: (copy) v_u_10
	local v106 = (p97 + p101 + p105 - 1) * 0.5
	if v106 < -0.99999 then
		local v107 = p97 + p98 + p99 + 1
		local v108 = p100 + p101 + p102 + 1
		local v109 = p103 + p104 + p105 + 1
		local v110 = 3.141592653589793 * (v107 * v107 + v108 * v108 + v109 * v109) ^ (-0.5)
		return v110 * v107, v110 * v108, v110 * v109
	end
	if v106 >= 0.99999 then
		return 0, 0, 0
	end
	local v111 = p104 - p102
	local v112 = p99 - p103
	local v113 = p100 - p98
	local v114 = v_u_10(v106) * (v111 * v111 + v112 * v112 + v113 * v113) ^ (-0.5)
	return v114 * v111, v114 * v112, v114 * v113
end
function v_u_27.CFrameToAxisAngle(p115)
	-- upvalues: (copy) v_u_13, (copy) v_u_27, (copy) v_u_1
	local _, _, _, v116, v117, v118, v119, v120, v121, v122, v123, v124 = v_u_13(p115)
	return v_u_1(v_u_27.CFrameToAxisAngleF(v116, v117, v118, v119, v120, v121, v122, v123, v124))
end
function v_u_27.UnitVectorToAnglesYXF(p125, p126, p127)
	-- upvalues: (copy) v_u_11, (copy) v_u_12
	return v_u_11(p126), v_u_12(-p125, -p127)
end
function v_u_27.UnitVectorToAnglesYX(p128)
	-- upvalues: (copy) v_u_27
	return v_u_27.UnitVectorToAnglesYXF(p128.x, p128.y, p128.z)
end
function v_u_27.VectorToAnglesYXF(p129, p130, p131)
	-- upvalues: (copy) v_u_11, (copy) v_u_12
	return v_u_11(p130 / (p129 * p129 + p130 * p130 + p131 * p131) ^ 0.5), v_u_12(-p129, -p131)
end
function v_u_27.VectorToAnglesYX(p132)
	-- upvalues: (copy) v_u_27
	return v_u_27.VectorToAnglesYXF(p132.x, p132.y, p132.z)
end
function v_u_27.VectorFromAnglesYX(p133, p134)
	-- upvalues: (copy) v_u_7, (copy) v_u_8, (copy) v_u_1
	local v135 = v_u_7(p133)
	return v_u_1(-v135 * v_u_8(p134), v_u_8(p133), -v135 * v_u_7(p134))
end
function v_u_27.Quaternion(p136, p137)
	-- upvalues: (copy) v_u_6, (copy) v_u_5, (copy) v_u_2
	local v138 = v_u_6(p136, p137)
	local v139 = v_u_5(p136, p137)
	local v140 = v139.x
	local v141 = v139.y
	local v142 = v139.z
	local v143 = (2 * (1 + v138)) ^ 0.5
	return v_u_2(0, 0, 0, v140 / v143, v141 / v143, v142 / v143, (1 + v138) / v143)
end
function v_u_27.QuaternionF(p144, p145, p146, p147, p148, p149)
	-- upvalues: (copy) v_u_2
	local v150 = 1 + p144 * p147 + p145 * p148 + p146 * p149
	local v151 = p145 * p149 - p146 * p148
	local v152 = p146 * p147 - p144 * p149
	local v153 = p144 * p148 - p145 * p147
	local v154 = (2 * v150) ^ 0.5
	return v_u_2(0, 0, 0, v151 / v154, v152 / v154, v153 / v154, v150 / v154)
end
function v_u_27.AxisAngleInterpolate(p155, p156, p157)
	-- upvalues: (copy) v_u_13, (copy) v_u_14, (copy) v_u_15, (copy) v_u_1, (copy) v_u_10
	local _, _, _, v158, v159, v160, v161, v162, v163, v164, v165, v166 = v_u_13(v_u_14(p155) * p156)
	local v167 = (v158 + v162 + v166 - 1) * 0.5
	return p155 * v_u_15(v_u_1(v165 - v163, v160 - v164, v161 - v159), v_u_10(v167 > 1 and 1 or (v167 < -1 and -1 or v167)) * p157) + (p156.p - p155.p) * p157
end
function v_u_27.IsPointInPolygonXZ(p168, p169)
	local v170 = p168.X
	local v171 = p168.Z
	local v172 = #p169
	local v173 = v172 - 1
	local v174 = 0
	local v175 = false
	while v172 > v174 do
		local v176 = p169[v174 + 1]
		local v177 = p169[v173 + 1]
		local v178 = v176.X
		local v179 = v176.Z
		local v180 = v177.X
		local v181 = v177.Z
		if v171 < v179 ~= (v171 < v181) and v170 < (v180 - v178) * (v171 - v179) / (v181 - v179) + v178 then
			v175 = not v175
		end
		local v182 = v174 + 1
		v173 = v174
		v174 = v182
	end
	return v175
end
function v_u_27.IsPointInRectangleYZ(p183, p184, p185)
	local v186 = p184:pointToObjectSpace(p183) + p185 * 0.5
	local v187
	if v186.y >= 0 and (v186.y < p185.y and v186.z >= 0) then
		v187 = v186.z < p185.z
	else
		v187 = false
	end
	return v187
end
function v_u_27.IsPointInRectangleXY(p188, p189, p190)
	local v191 = p189:pointToObjectSpace(p188) + p190 * 0.5
	local v192
	if v191.x >= 0 and (v191.x < p190.x and v191.y >= 0) then
		v192 = v191.y < p190.y
	else
		v192 = false
	end
	return v192
end
function v_u_27.IsPointInRectangleXZ(p193, p194, p195)
	local v196 = p194:pointToObjectSpace(p193) + p195 * 0.5
	local v197
	if v196.x >= 0 and (v196.x < p195.x and v196.z >= 0) then
		v197 = v196.z < p195.z
	else
		v197 = false
	end
	return v197
end
function v_u_27.IsPointInPrism(p198, p199, p200)
	local v201 = p199:pointToObjectSpace(p198) + p200 * 0.5
	local v202
	if v201.x >= 0 and (v201.x < p200.x and (v201.y >= 0 and (v201.y < p200.y and v201.z >= 0))) then
		v202 = v201.z < p200.z
	else
		v202 = false
	end
	return v202
end
function v_u_27.IsPointInFixedCone(p203, p204, p205, p206)
	-- upvalues: (copy) v_u_6, (copy) v_u_10
	local v207 = p206 - p203.p
	local v208 = p203.lookVector
	local v209 = v207.unit
	local v210
	if v207.z >= -p205 then
		v210 = v_u_10((v_u_6(v208, v209))) <= p204
	else
		v210 = false
	end
	return v210
end
function v_u_27.DoesFixedConeIntersectSphere(p211, p212, p213, p214, p215, p216)
	-- upvalues: (copy) v_u_9, (copy) v_u_7
	local v217 = p215 - p211
	if p213 <= p212:Dot(v217) then
		return false
	end
	local v218 = v217:Dot(p212)
	local v219 = v218 * v_u_9(p214)
	return ((v217:Dot(v217) - v218 * v218) ^ 0.5 - v219) * v_u_7(p214) <= p216
end
function v_u_27.TopPoint(p220, p221)
	-- upvalues: (copy) v_u_1
	return p220 * v_u_1(0, p221.y * 0.5, 0)
end
function v_u_27.BottomPoint(p222, p223)
	-- upvalues: (copy) v_u_27
	return v_u_27.TopPoint(p222, -p223)
end
function v_u_27.Normal(p224)
	return p224.upVector
end
function v_u_27.IntersectRayPlane(p225, p226, p227, p228)
	-- upvalues: (copy) v_u_6, (copy) v_u_16
	local v229 = v_u_6(p228, p226)
	if v_u_16(v229) >= 1e-6 then
		local v230 = v_u_6(p228, p227 - p225) / v229
		if v230 >= 0 then
			return p225 + p226 * v230
		end
	end
end
function v_u_27.IntersectRectanglesByCornersF(p231, p232, p233, p234, p235, p236, p237, p238)
	return p237 > p231 and (p233 > p235 and p238 > p232) and p234 > p236
end
function v_u_27.IntersectRectanglesF(p239, p240, p241, p242, p243, p244, p245, p246)
	-- upvalues: (copy) v_u_27
	local v247 = 0.5 * p243
	local v248 = 0.5 * p244
	local v249 = 0.5 * p245
	local v250 = 0.5 * p246
	local v251 = p239 - v247
	local v252 = p240 - v248
	local v253 = p239 + v247
	local v254 = p240 + v248
	local v255 = p241 - v249
	local v256 = p242 - v250
	local v257 = p241 + v249
	local v258 = p242 + v250
	return v_u_27.IntersectRectanglesByCornersF(v251, v252, v253, v254, v255, v256, v257, v258)
end
function v_u_27.IntersectRectanglesXZ(p259, p260, p261, p262)
	-- upvalues: (copy) v_u_27
	return v_u_27.IntersectRectanglesF(p259.x, p259.z, p260.x, p260.z, p261.x, p261.z, p262.x, p262.z)
end
function v_u_27.Round(p263, p264)
	-- upvalues: (copy) v_u_17
	return v_u_17(p263 / p264 + 0.5) * p264
end
function v_u_27.RoundVec(p265, p266)
	-- upvalues: (copy) v_u_17, (copy) v_u_1
	return v_u_1(v_u_17(p265.x / p266 + 0.5) * p266, v_u_17(p265.y / p266 + 0.5) * p266, v_u_17(p265.z / p266 + 0.5) * p266)
end
v_u_27.Clamp = math.clamp
function v_u_27.AABBXZF(p267, _, p268, _, _, _, p269, _, p270, p271, _, p272)
	local v273 = 0.5 * p271
	local v274 = 0.5 * p272
	local v275 = -p267 * v273 - p268 * v274
	local v276 = -p269 * v273 - p270 * v274
	local v277 = -p267 * v273 + p268 * v274
	local v278 = -p269 * v273 + p270 * v274
	if v277 < v275 then
		local v279 = v277
		v277 = v275
		v275 = v279
	elseif v275 > v277 then
		v277 = v275
	end
	if v278 < v276 then
		local v280 = v278
		v278 = v276
		v276 = v280
	elseif v276 > v278 then
		v278 = v276
	end
	local v281 = p267 * v273 - p268 * v274
	local v282 = p269 * v273 - p270 * v274
	if v281 < v275 then
		v275 = v281
		v281 = v277
	elseif v277 > v281 then
		v281 = v277
	end
	if v282 < v276 then
		v276 = v282
		v282 = v278
	elseif v278 > v282 then
		v282 = v278
	end
	local v283 = p267 * v273 + p268 * v274
	local v284 = p269 * v273 + p270 * v274
	if v283 < v275 then
		v275 = v283
		v283 = v281
	elseif v281 > v283 then
		v283 = v281
	end
	if v284 < v276 then
		v276 = v284
		v284 = v282
	elseif v282 > v284 then
		v284 = v282
	end
	return v283 - v275, v284 - v276
end
function v_u_27.AABBXZ(p285, p286)
	-- upvalues: (copy) v_u_13, (copy) v_u_27
	local _, _, _, v287, v288, v289, v290, v291, v292, v293, v294, v295 = v_u_13(p285)
	local v296 = p286.x
	local v297 = p286.y
	local v298 = p286.z
	return v_u_27.AABBXZF(v287, v288, v289, v290, v291, v292, v293, v294, v295, v296, v297, v298)
end
function v_u_27.IsPrismVisibleD(p299, p300, p301)
	-- upvalues: (copy) v_u_13, (copy) v_u_10
	local v302 = p300.lookVector
	local v303 = p300.x
	local v304 = p300.y
	local v305 = p300.z
	local v306 = v302.x
	local v307 = v302.y
	local v308 = v302.z
	local v309, v310, v311, v312, v313, v314, v315, v316, v317, v318, v319, v320 = v_u_13(p301.CFrame)
	local v321 = p301.Size * 0.5
	local v322 = v321.x
	local v323 = v321.y
	local v324 = v321.z
	local v325 = v322 * v312
	local v326 = v323 * v313
	local v327 = v324 * v314
	local v328 = v322 * v315
	local v329 = v323 * v316
	local v330 = v324 * v317
	local v331 = v322 * v318
	local v332 = v323 * v319
	local v333 = v324 * v320
	local v334 = v309 + v325 + v326 + v327
	local v335 = v310 + v328 + v329 + v330
	local v336 = v311 + v331 + v332 + v333
	local v337 = v309 - v325 - v326 - v327
	local v338 = v310 - v328 - v329 - v330
	local v339 = v311 - v331 - v332 - v333
	local v340 = v334 - v303
	local v341 = v335 - v304
	local v342 = v336 - v305
	local v343 = (v340 * v340 + v341 * v341 + v342 * v342) ^ (-0.5)
	local v344 = v340 * v343
	local v345 = v341 * v343
	local v346 = v342 * v343
	if v_u_10(v306 * v344 + v307 * v345 + v308 * v346) < p299 then
		return true
	end
	local v347 = v337 - v303
	local v348 = v338 - v304
	local v349 = v339 - v305
	local v350 = (v347 * v347 + v348 * v348 + v349 * v349) ^ (-0.5)
	local v351 = v347 * v350
	local v352 = v348 * v350
	local v353 = v349 * v350
	if v_u_10(v306 * v351 + v307 * v352 + v308 * v353) < p299 then
		return true
	end
	local v354 = v337 - v303
	local v355 = v335 - v304
	local v356 = v336 - v305
	local v357 = (v354 * v354 + v355 * v355 + v356 * v356) ^ (-0.5)
	local v358 = v354 * v357
	local v359 = v355 * v357
	local v360 = v356 * v357
	if v_u_10(v306 * v358 + v307 * v359 + v308 * v360) < p299 then
		return true
	end
	local v361 = v334 - v303
	local v362 = v338 - v304
	local v363 = v339 - v305
	local v364 = (v361 * v361 + v362 * v362 + v363 * v363) ^ (-0.5)
	local v365 = v361 * v364
	local v366 = v362 * v364
	local v367 = v363 * v364
	return v_u_10(v306 * v365 + v307 * v366 + v308 * v367) < p299
end
function v_u_27.IsPrismVisible(p368, p369, p370, p371)
	-- upvalues: (copy) v_u_1
	local v372 = 0.5 * p371
	local v373 = v372.x
	local v374 = v372.y
	local v375 = v372.z
	local _, v376 = p368(p369, p370 * v_u_1(v373, v374, v375))
	if v376 then
		return true
	end
	local _, v377 = p368(p369, p370 * v_u_1(-v373, -v374, -v375))
	if v377 then
		return true
	end
	local _, v378 = p368(p369, p370 * v_u_1(v373, v374, -v375))
	if v378 then
		return true
	end
	local _, v379 = p368(p369, p370 * v_u_1(-v373, v374, v375))
	if v379 then
		return true
	end
	local _, v380 = p368(p369, p370 * v_u_1(-v373, v374, -v375))
	if v380 then
		return true
	end
	local _, v381 = p368(p369, p370 * v_u_1(v373, -v374, v375))
	if v381 then
		return true
	end
	local _, v382 = p368(p369, p370 * v_u_1(v373, -v374, -v375))
	if v382 then
		return true
	end
	local _, v383 = p368(p369, p370 * v_u_1(-v373, -v374, v375))
	if v383 then
		return true
	end
end
function v_u_27.IsPrismApproxVisible(p384, p385, p386, p387)
	-- upvalues: (copy) v_u_1
	local v388 = 0.5 * p387 * 2
	local v389 = v388.x
	local v390 = v388.y
	local v391 = v388.z
	local _, v392 = p384(p385, p386 * v_u_1(v389, v390, v391))
	if v392 then
		return true
	end
	local _, v393 = p384(p385, p386 * v_u_1(-v389, -v390, -v391))
	return v393 and true or false
end
function v_u_27.IntersectRaySphereF(p394, p395, p396, p397, p398, p399, p400, p401, p402, p403, p404)
	local v405 = p401 - p394
	local v406 = p402 - p395
	local v407 = p403 - p396
	local v408 = v405 * p397 + v406 * p398 + v407 * p399
	if v408 < 0 then
		return false
	else
		local v409 = v405 * v405 + v406 * v406 + v407 * v407 - v408 * v408
		local v410 = p404 * p404
		if v410 < v409 then
			return false
		else
			return p400 >= v408 - (v410 - v409) ^ 0.5
		end
	end
end
function v_u_27.IntersectRaySphere(p411, p412, p413, p414, p415)
	local v416 = p411.x
	local v417 = p411.y
	local v418 = p411.z
	local v419 = p412.x
	local v420 = p412.y
	local v421 = p412.z
	local v422 = p414.x
	local v423 = p414.y
	local v424 = p414.z
	local v425 = v422 - v416
	local v426 = v423 - v417
	local v427 = v424 - v418
	local v428 = v425 * v419 + v426 * v420 + v427 * v421
	if v428 < 0 then
		return false
	else
		local v429 = v425 * v425 + v426 * v426 + v427 * v427 - v428 * v428
		local v430 = p415 * p415
		if v430 < v429 then
			return false
		else
			return p413 >= v428 - (v430 - v429) ^ 0.5
		end
	end
end
function v_u_27.GUID()
	-- upvalues: (copy) v_u_18
	return ("xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx"):gsub("[xy]", function(p431)
		-- upvalues: (ref) v_u_18
		return ("%x"):format(p431 == "x" and v_u_18(0, 15) or v_u_18(8, 11))
	end)
end
function v_u_27.ShortGUID()
	-- upvalues: (copy) v_u_18
	return ("xxx-yx"):gsub("[xy]", function(p432)
		-- upvalues: (ref) v_u_18
		return ("%x"):format(p432 == "x" and v_u_18(0, 15) or v_u_18(8, 11))
	end)
end
v_u_27.Base85UUID = v20.base85UUID
function v_u_27.Uniform2D(p433)
	-- upvalues: (copy) v_u_18, (copy) v_u_7, (copy) v_u_8, (copy) v_u_1
	local v434 = v_u_18()
	local v435 = v_u_18()
	if v435 < v434 then
		local v436 = v434
		v434 = v435
		v435 = v436
	end
	return v_u_1(v435 * p433 * v_u_7(6.283185307179586 * v434 / v435), v435 * p433 * v_u_8(6.283185307179586 * v434 / v435), 0)
end
local v_u_437 = Random.new()
function v_u_27.WeightedRandom(p438)
	-- upvalues: (copy) v_u_437
	for _ = 1, 10 do
		v_u_437:NextNumber()
	end
	local v439 = 0
	for v440 = 1, #p438 do
		v439 = v439 + p438[v440]
	end
	local v441 = v_u_437:NextNumber() * v439
	for v442 = 1, #p438 do
		if v441 < p438[v442] then
			return v442
		end
		v441 = v441 - p438[v442]
	end
	return false
end
function v_u_27.LookAt(p443, p444, p445)
	-- upvalues: (copy) v_u_5, (copy) v_u_2
	local v446 = (p444 - p445).unit
	local v447 = v_u_5(p443, v446).unit
	local v448 = v_u_5(v446, v447)
	return v_u_2(p444.X, p444.Y, p444.Z, v447.x, v448.x, v446.x, v447.y, v448.y, v446.y, v447.z, v448.z, v446.z)
end
function v_u_27.BinaryFind(p449, p450, p451)
	-- upvalues: (copy) v_u_17
	local v452 = #p449
	local v453 = 1
	local v454 = p451 or "Sort"
	while v453 <= v452 do
		local v455 = v_u_17((v453 + v452) * 0.5)
		local v456 = p449[v455][v454]
		if v456 < p450 then
			v453 = v455 + 1
		else
			if p450 >= v456 then
				return v455
			end
			v452 = v455 - 1
		end
	end
	return v453
end
function v_u_27.Shuffle(p457)
	for v458 = #p457, 2, -1 do
		local v459 = math.random(v458)
		local v460 = p457[v459]
		local v461 = p457[v458]
		p457[v458] = v460
		p457[v459] = v461
	end
end
function v_u_27.IsNaN(p462)
	return p462 ~= p462
end
function v_u_27.IsNaNv3(p463)
	return (p463.x ~= p463.x or p463.y ~= p463.y) and true or p463.z ~= p463.z
end
function v_u_27.IsNaNcf(p464)
	local v465 = p464.lookVector
	local v466 = (v465.x ~= v465.x or v465.y ~= v465.y) and true or v465.z ~= v465.z
	if not v466 then
		local v467 = p464.rightVector
		v466 = (v467.x ~= v467.x or v467.y ~= v467.y) and true or v467.z ~= v467.z
		if not v466 then
			local v468 = p464.upVector
			v466 = (v468.x ~= v468.x or v468.y ~= v468.y) and true or v468.z ~= v468.z
		end
	end
	return v466
end
function v_u_27.Clampv3(p469, p470, p471)
	-- upvalues: (copy) v_u_1
	local v472 = p469.x
	local v473 = math.clamp(v472, p470, p471)
	local v474 = p469.y
	local v475 = math.clamp(v474, p470, p471)
	local v476 = p469.z
	return v_u_1(v473, v475, (math.clamp(v476, p470, p471)))
end
function v_u_27.comma(p477)
	local v478, v479, v480 = string.match(p477, "^([^%d]*%d)(%d*)(.-)$")
	return v478 .. v479:reverse():gsub("(%d%d%d)", "%1,"):reverse() .. v480
end
function v_u_27.FormatMoney(p481)
	-- upvalues: (copy) v_u_16
	local v482 = p481 >= 0 and "" or "-"
	local v483 = v_u_16(p481)
	local v484, v485, v486 = string.match(v483, "^([^%d]*%d)(%d*)(.-)$")
	return ("%s$%s"):format(v482, v484 .. v485:reverse():gsub("(%d%d%d)", "%1,"):reverse() .. v486)
end
function v_u_27.stohms(p487)
	local v488 = p487 / 3600
	local v489 = math.floor(v488)
	local v490 = p487 - v489 * 3600
	local v491 = v490 / 60
	local v492 = math.floor(v491)
	return v489, v492, v490 - v492 * 60
end
function v_u_27.Now(p493)
	local v494 = (p493 or -8) + 1
	return os.time() + v494 * 60 * 60
end
function v_u_27.NextMidnight(p495)
	-- upvalues: (copy) v_u_27
	local v496 = v_u_27.Now(p495) / 86400
	return math.ceil(v496) * 86400
end
function v_u_27.TimeUntilMidnight(p497)
	-- upvalues: (copy) v_u_27
	local v498 = v_u_27.Now(p497)
	return v_u_27.NextMidnight(p497) - v498
end
local v_u_499 = math.max
local function v_u_502(p500, p501)
	-- upvalues: (copy) v_u_499
	return v_u_499(0, p500 - (p501 and os.time() or tick()))
end
local function v506(p503, p504, p505)
	-- upvalues: (ref) v_u_502
	return (p505 and os.time() or tick()) + v_u_502(p503) + p504
end
v_u_27.TimeAccumDiff = v_u_502
v_u_27.TimeAccumAdd = v506
v_u_27.TweenType = {
	["Linear"] = 1,
	["InOutQuad"] = 2
}
function v_u_27.MakeTween()
	-- upvalues: (copy) v_u_27
	return {
		["i"] = 0,
		["t0"] = 0,
		["t1"] = 1,
		["s"] = 1,
		["v"] = 0,
		["Type"] = v_u_27.TweenType.Linear,
		["Finished"] = nil
	}
end
function v_u_27.UpdateTween(p507, p508)
	-- upvalues: (copy) v_u_27
	p507.i = p507.i + p508 * p507.s
	if p507.Type == v_u_27.TweenType.Linear then
		p507.v = p507.t0 * (1 - p507.i) + p507.t1 * p507.i
	elseif p507.Type == v_u_27.TweenType.InOutQuad then
		local v509 = p507.i
		local v510 = p507.t0
		local v511 = p507.t1 - p507.t0
		local v512 = v509 / 1 * 2
		local v513
		if v512 < 1 then
			v513 = v511 * 0.5 * v512 * v512 + v510
		else
			v513 = -v511 * 0.5 * ((v512 - 1) * (v512 - 3) - 1) + v510
		end
		p507.v = v513
	end
	if p507.i >= 1 and p507.Finished then
		p507.Finished(p507)
	end
end
function v_u_27.TweenFunSwap(p514)
	local v515 = p514.t1
	p514.t1 = p514.t0
	p514.t0 = v515
	p514.i = p514.i - 1
end
return v_u_27
