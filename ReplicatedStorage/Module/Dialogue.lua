-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v1 = game:GetService("ReplicatedStorage")
local v_u_2 = game:GetService("RunService")
local v_u_3 = require(v1.Std.Signal)
local v_u_4 = require(v1.Std.Maid)
local v_u_5 = require(v1.Module.Timeline)
local v_u_6 = {}
v_u_6.__index = v_u_6
function v_u_6.new()
	-- upvalues: (copy) v_u_6, (copy) v_u_4, (copy) v_u_3
	local v7 = {}
	local v8 = v_u_6
	setmetatable(v7, v8)
	v7.Maid = v_u_4.new()
	v7.OnMessage = v_u_3.new()
	v7.ListEventUnconnected = {}
	v7.MapEventSignal = {}
	v7.Speed = 1
	return v7
end
function v_u_6.Run(p_u_9)
	-- upvalues: (copy) v_u_5, (copy) v_u_2
	local v_u_10 = v_u_5.new(p_u_9.Seqs)
	if not p_u_9.BornAt then
		p_u_9.BornAt = workspace:GetServerTimeNow()
	end
	local v_u_11 = 0
	p_u_9.Maid:GiveTask(v_u_2.Heartbeat:Connect(function()
		-- upvalues: (ref) v_u_11, (ref) v_u_10, (copy) p_u_9
		local v12 = workspace:GetServerTimeNow()
		if v12 - v_u_11 > 0.5 then
			v_u_11 = v12
			if v_u_10:Update(p_u_9.Speed * (v12 - p_u_9.BornAt)) then
				v_u_10 = nil
				p_u_9:Destroy()
			end
		end
	end))
end
function v_u_6.SetBornAt(p13, p14)
	p13.BornAt = p14
end
function v_u_6.SetSpeed(p15, p16)
	p15.Speed = p16
end
function v_u_6.LoadData(p_u_17, p18)
	-- upvalues: (copy) v_u_3
	local v19 = p_u_17.Data == nil
	assert(v19)
	p_u_17.Data = p18
	local v20 = {}
	for _, v_u_21 in ipairs(p18) do
		local v22 = v_u_21.Duration ~= nil
		assert(v22)
		local v25 = { function(p23)
				-- upvalues: (copy) p_u_17, (copy) v_u_21
				if p23 == 0 then
					p_u_17.OnMessage:Fire(v_u_21)
					if v_u_21.Events ~= nil then
						for _, v24 in ipairs(v_u_21.Events) do
							if p_u_17.MapEventSignal[v24] == nil then
								error(("Missing signal for event: %s"):format(v24))
							end
							p_u_17.MapEventSignal[v24]:Fire(v_u_21)
						end
					end
				end
			end, v_u_21.Duration }
		table.insert(v20, v25)
		if v_u_21.Events ~= nil then
			for _, v26 in ipairs(v_u_21.Events) do
				if p_u_17.MapEventSignal[v26] ~= nil then
					error(("There already exists an event named: %s"):format(v26))
				end
				local v27 = v_u_3.new()
				p_u_17.MapEventSignal[v26] = v27
				p_u_17.Maid:GiveTask(v27)
				local v28 = p_u_17.ListEventUnconnected
				table.insert(v28, v26)
			end
		end
	end
	p_u_17.Seqs = v20
end
function v_u_6.Connect(p29, p30, p31)
	for v32 = #p29.ListEventUnconnected, 1, -1 do
		if p29.ListEventUnconnected[v32] == p30 then
			table.remove(p29.ListEventUnconnected, v32)
			break
		end
	end
	if p29.MapEventSignal[p30] == nil then
		error(("No signal exists for event: %s"):format(p30))
	end
	p29.MapEventSignal[p30]:Connect(p31)
end
function v_u_6.VerifyAllConnected(p33)
	if #p33.ListEventUnconnected > 0 then
		error(("Not all events are unconnected... remaining: %s"):format(table.concat(p33.ListEventUnconnected, ", ")))
	end
end
function v_u_6.Destroy(p34)
	p34.MapEventSignal = nil
	p34.Maid:Destroy()
	p34.Maid = nil
	setmetatable(p34, nil)
end
return v_u_6
