-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

return function()
	local v_u_1 = require(script.Parent.createReducer)
	it("should handle actions", function()
		-- upvalues: (copy) v_u_1
		local v4 = v_u_1({
			["a"] = 0,
			["b"] = 0
		}, {
			["a"] = function(p2, _)
				return {
					["a"] = p2.a + 1,
					["b"] = p2.b
				}
			end,
			["b"] = function(p3, _)
				return {
					["a"] = p3.a,
					["b"] = p3.b + 2
				}
			end
		})
		local v5 = v4({
			["a"] = 0,
			["b"] = 0
		}, {
			["type"] = "a"
		})
		expect(v5.a).to.equal(1)
		local v6 = v4(v5, {
			["type"] = "b"
		})
		expect(v6.b).to.equal(2)
	end)
	it("should return the initial state if the state is nil", function()
		-- upvalues: (copy) v_u_1
		local v7 = v_u_1({
			["a"] = 0,
			["b"] = 0
		}, {})(nil, {})
		expect(v7).to.be.ok()
		expect(v7.a).to.equal(0)
		expect(v7.b).to.equal(0)
	end)
	it("should still run action handlers if the state is nil", function()
		-- upvalues: (copy) v_u_1
		local v_u_8 = 0
		local v9 = v_u_1(0, {
			["foo"] = function(_, _)
				-- upvalues: (ref) v_u_8
				v_u_8 = v_u_8 + 1
				return nil
			end
		})
		expect(v_u_8).to.equal(0)
		local v10 = v9(nil, {
			["type"] = "foo"
		})
		expect(v_u_8).to.equal(1)
		expect(v10).to.equal(nil)
		local v11 = v9(v10, {
			["type"] = "foo"
		})
		expect(v_u_8).to.equal(2)
		expect(v11).to.equal(nil)
	end)
	it("should return the same state if the action is not handled", function()
		-- upvalues: (copy) v_u_1
		local v12 = {
			["a"] = 0,
			["b"] = 0
		}
		local v15 = v_u_1(v12, {
			["a"] = function(p13, _)
				return {
					["a"] = p13.a + 1,
					["b"] = p13.b
				}
			end,
			["b"] = function(p14, _)
				return {
					["a"] = p14.a,
					["b"] = p14.b + 2
				}
			end
		})(v12, {
			["type"] = "c"
		})
		expect(v15).to.equal(v12)
	end)
end
