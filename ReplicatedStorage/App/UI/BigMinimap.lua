-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 

-- Decompiled by Krnl

local v_u_1 = game:GetService("ContextActionService")
local v_u_2 = game:GetService("GuiService")
local v_u_3 = game:GetService("UserInputService")
local v_u_4 = game:GetService("RunService")
local v5 = game:GetService("ReplicatedStorage")
local v_u_6 = require(v5.Std.Maid)
local v_u_7 = require(v5.EzUi.Dictionary)
local v_u_8 = require(v5.Roact)
local v9 = require(v5.RoactRodux)
local v_u_10 = v_u_8.createElement
local v_u_11 = require(script.Parent.MinimapUtils)
local v_u_12 = require(script.Parent.Minimap)
local v13 = v_u_8.PureComponent:extend("BigMinimap")
v13.defaultProps = {
	["visible"] = true,
	["mapScale"] = 1
}
function v13.init(p14)
	-- upvalues: (copy) v_u_8, (copy) v_u_6
	p14.horizontalRef = v_u_8.createRef()
	p14.verticalRef = v_u_8.createRef()
	p14.maid = v_u_6.new()
	if p14.props.containerSize then
		local v15 = p14.props.containerSize
		local v16 = p14.props.updateContainerSize
		p14.containerSize = v15
		p14.updateContainerSize = v16
	else
		local v17, v18 = v_u_8.createBinding(Vector2.new(512, 512))
		p14.containerSize = v17
		p14.updateContainerSize = v18
	end
	if p14.props.containerRef then
		p14.containerRef = p14.props.containerRef
	else
		p14.containerRef = v_u_8.createRef()
	end
	p14:setState({
		["crossHairEnabled"] = false,
		["inputType"] = Enum.UserInputType.Keyboard
	})
	p14.x = 0
	p14.y = 0
end
function v13.render(p_u_19)
	-- upvalues: (copy) v_u_10, (copy) v_u_12, (copy) v_u_7, (copy) v_u_8, (copy) v_u_2
	if p_u_19.props.visible then
		local v20 = v_u_10
		local v21 = v_u_12
		local v22 = v_u_7.merge(p_u_19.props, {
			["containerSize"] = p_u_19.containerSize,
			["updateContainerSize"] = p_u_19.updateContainerSize,
			["containerRef"] = p_u_19.containerRef,
			["containerChildren"] = {
				["LineHorizontal"] = v_u_10("Frame", {
					["BackgroundTransparency"] = 0,
					["Size"] = UDim2.new(1, 0, 0, 2),
					["AnchorPoint"] = Vector2.new(0, 0.5),
					["BackgroundColor3"] = Color3.new(1, 1, 1),
					["BorderSizePixel"] = 1,
					["BorderColor3"] = Color3.new(0.4, 0.4, 0.4),
					["ZIndex"] = 4,
					["Visible"] = p_u_19.state.crossHairEnabled,
					[v_u_8.Ref] = p_u_19.horizontalRef
				}),
				["LineVertical"] = v_u_10("Frame", {
					["BackgroundTransparency"] = 0,
					["Size"] = UDim2.new(0, 2, 1, 0),
					["AnchorPoint"] = Vector2.new(0.5, 0),
					["BackgroundColor3"] = Color3.new(1, 1, 1),
					["BorderSizePixel"] = 1,
					["BorderColor3"] = Color3.new(0.4, 0.4, 0.4),
					["ZIndex"] = 4,
					["Visible"] = p_u_19.state.crossHairEnabled,
					[v_u_8.Ref] = p_u_19.verticalRef
				})
			}
		})
		local v23 = {}
		local v24 = v_u_10
		local v25 = {
			["BackgroundTransparency"] = 1,
			["BorderSizePixel"] = 0,
			["Size"] = UDim2.new(1, 0, 0.05, 0),
			["Position"] = UDim2.new(0, 0, 1, 4)
		}
		local v26 = {
			["ListLayout"] = v_u_10("UIListLayout", {
				["HorizontalAlignment"] = Enum.HorizontalAlignment.Left,
				["VerticalAlignment"] = Enum.VerticalAlignment.Center,
				["SortOrder"] = Enum.SortOrder.LayoutOrder,
				["FillDirection"] = Enum.FillDirection.Horizontal,
				["Padding"] = UDim.new(0, 4)
			})
		}
		local v27 = v_u_10
		local v29 = {
			["BackgroundColor3"] = p_u_19.props.color,
			["Size"] = UDim2.new(1, 0, 1, 0),
			["Text"] = "",
			["LayoutOrder"] = 1,
			["Selectable"] = true,
			[v_u_8.Event.Activated] = function()
				-- upvalues: (copy) p_u_19, (ref) v_u_2
				if #p_u_19.props.waypoints == 0 then
					p_u_19:setState({
						["crossHairEnabled"] = true
					})
					if p_u_19.state.inputType == Enum.UserInputType.Gamepad1 then
						v_u_2.SelectedObject = nil
						local v28 = p_u_19.containerRef:getValue().AbsoluteSize
						p_u_19:_setXY(v28.X * 0.5, v28.Y * 0.5)
						return
					end
				else
					p_u_19.props.onSetWaypoint(nil)
				end
			end
		}
		local v30 = {
			["Title"] = v_u_10("TextLabel", {
				["BackgroundTransparency"] = 1,
				["BorderSizePixel"] = 0,
				["Size"] = UDim2.new(0.9, 0, 0.9, 0),
				["Position"] = UDim2.new(0.5, 0, 0.5, 0),
				["AnchorPoint"] = Vector2.new(0.5, 0.5),
				["Text"] = #p_u_19.props.waypoints == 0 and "Add Waypoint" or "Remove Waypoint",
				["Font"] = Enum.Font.LuckiestGuy,
				["LineHeight"] = 0.7,
				["TextScaled"] = true,
				["TextXAlignment"] = Enum.TextXAlignment.Center,
				["TextYAlignment"] = Enum.TextYAlignment.Center,
				["TextColor3"] = Color3.fromRGB(255, 255, 255),
				["ZIndex"] = 10
			}),
			["AspectRatio"] = v_u_10("UIAspectRatioConstraint", {
				["AspectRatio"] = 8
			}),
			["UICorner"] = v_u_10("UICorner", {
				["CornerRadius"] = UDim.new(0.25, 0)
			})
		}
		v26.Waypoint = v27("TextButton", v29, v30)
		v23.Buttons = v24("Frame", v25, v26)
		return v20(v21, v22, v23)
	end
end
function v13._setXY(p31, p32, p33)
	local v34 = p31.containerRef:getValue().AbsoluteSize
	local v35 = v34.X
	p31.x = math.clamp(p32, 0, v35)
	local v36 = v34.Y
	p31.y = math.clamp(p33, 0, v36)
	local v37 = p31.horizontalRef:getValue()
	local v38 = p31.verticalRef:getValue()
	if p31.state.crossHairEnabled then
		v37.Position = UDim2.new(0, 0, 0, p31.y)
		v38.Position = UDim2.new(0, p31.x, 0, 0)
	end
end
function v13._hookVisible(p_u_39, p40)
	-- upvalues: (copy) v_u_6, (copy) v_u_2, (copy) v_u_4, (copy) v_u_3, (copy) v_u_11
	if p40 then
		local v41 = v_u_6.new()
		p_u_39.maid.visibleMaid = v41
		local v_u_42 = v_u_2:GetGuiInset()
		v41:GiveTask(v_u_4.Heartbeat:Connect(function()
			-- upvalues: (copy) p_u_39, (ref) v_u_3, (copy) v_u_42
			local v43 = p_u_39.containerRef:getValue()
			if p_u_39.state.inputType == Enum.UserInputType.Keyboard then
				local v44 = v_u_3:GetMouseLocation() - v_u_42
				local v45 = v43.AbsolutePosition
				p_u_39:_setXY(v44.X - v45.X, v44.Y - v45.Y)
			end
		end))
		v41:GiveTask(v_u_3.InputBegan:Connect(function(p46)
			-- upvalues: (copy) p_u_39, (ref) v_u_11
			if p_u_39.state.crossHairEnabled then
				if p46.UserInputType == Enum.UserInputType.MouseButton1 or (p46.UserInputType == Enum.UserInputType.Touch or p46.UserInputType == Enum.UserInputType.Gamepad1 and p46.KeyCode == Enum.KeyCode.ButtonA) then
					local v47 = p_u_39.containerRef:getValue()
					local v48 = v47.AbsoluteSize
					if p46.UserInputType == Enum.UserInputType.Touch then
						local v49 = v47.AbsolutePosition
						p_u_39.x = p46.Position.X - v49.X
						p_u_39.y = p46.Position.Y - v49.Y
					end
					local v50 = p_u_39.x
					local v51 = p_u_39.y
					if v50 < 0 or (v51 < 0 or (v48.X < v50 or v48.Y < v51)) then
						return
					end
					local v52, v53 = v_u_11.computeWorldXY(v50, v51, p_u_39.props.worldPosition:getValue(), p_u_39.containerSize:getValue(), p_u_39.props.mapWorldWidth, p_u_39.props.mapWorldHeight, p_u_39.props.mapWorldCenterX, p_u_39.props.mapWorldCenterY, p_u_39.props.mapImageWidth, p_u_39.props.mapImageHeight, p_u_39.props.mapScale)
					if p_u_39.props.onSetWaypoint then
						p_u_39.props.onSetWaypoint((Vector3.new(v52, 50, v53)))
					end
					if p_u_39.props.onToggle then
						p_u_39.props.onToggle(false)
					end
					p_u_39:setState({
						["crossHairEnabled"] = false
					})
				end
			end
		end))
	else
		p_u_39.maid.visibleMaid = nil
	end
end
function v13.didMount(p_u_54)
	-- upvalues: (copy) v_u_3
	local function v56()
		-- upvalues: (ref) v_u_3, (copy) p_u_54
		local v55 = v_u_3:GetLastInputType()
		if (v55 == Enum.UserInputType.Gamepad1 or (v55 == Enum.UserInputType.Keyboard or v55 == Enum.UserInputType.Touch)) and p_u_54.state.inputType ~= v55 then
			p_u_54:setState({
				["inputType"] = v55
			})
		end
	end
	v56()
	p_u_54.maid:GiveTask(v_u_3.LastInputTypeChanged:Connect(v56))
end
function v13.didUpdate(p57, p58, p59)
	if p57.state.crossHairEnabled ~= p59.crossHairEnabled then
		p57:_hookGamepad(p57.state.crossHairEnabled)
	end
	if p57.props.visible ~= p58.visible then
		p57:_hookVisible(p57.props.visible)
	end
end
function v13._hookGamepad(p_u_60, p61)
	-- upvalues: (copy) v_u_1, (copy) v_u_3, (copy) v_u_4
	if p61 then
		v_u_1:BindActionAtPriority("sinkThumb1", function()
			return Enum.ContextActionResult.Sink
		end, false, Enum.ContextActionPriority.High.Value, Enum.KeyCode.Thumbstick1)
		v_u_1:BindActionAtPriority("sinkJump", function()
			return Enum.ContextActionResult.Sink
		end, false, Enum.ContextActionPriority.High.Value, Enum.KeyCode.ButtonA)
		local v_u_62 = nil
		p_u_60.maid.selectionDragListen = v_u_3.InputChanged:Connect(function(p63)
			-- upvalues: (ref) v_u_62
			if p63.UserInputType == Enum.UserInputType.Gamepad1 and p63.KeyCode == Enum.KeyCode.Thumbstick1 then
				v_u_62 = p63
			end
		end)
		p_u_60.maid.dragHeartbeat = v_u_4.Heartbeat:Connect(function(_)
			-- upvalues: (ref) v_u_62, (copy) p_u_60
			if v_u_62 then
				local v64 = v_u_62.Position.X
				local v65 = v_u_62.Position.Y
				if math.abs(v64) > 0.1 or math.abs(v65) > 0.1 then
					p_u_60:_setXY(p_u_60.x + v64 * 10, p_u_60.y - v65 * 10, true)
				end
			end
		end)
	else
		v_u_1:UnbindAction("sinkThumb1")
		v_u_1:UnbindAction("sinkJump")
		p_u_60.maid.selectionDragListen = nil
		p_u_60.maid.dragHeartbeat = nil
	end
end
function v13.willUnmount(p66)
	p66:_hookGamepad(false)
	p66.maid:DoCleaning()
end
return v9.connect(function(p67, _)
	return {
		["labels"] = p67.minimapLabels,
		["waypoints"] = p67.minimapWaypoints
	}
end, function(p_u_68)
	return {
		["onSetWaypoint"] = function(p69)
			-- upvalues: (copy) p_u_68
			if p69 then
				p_u_68({
					["type"] = "addWaypoint",
					["position"] = p69,
					["name"] = "USER",
					["priority"] = 100
				})
			else
				p_u_68({
					["type"] = "removeWaypointCurrent"
				})
			end
		end
	}
end)(v13)
