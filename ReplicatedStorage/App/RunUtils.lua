-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgMoCElzU3R1ZGlvCGlzU3R1ZGlvBGdhbWUHUGxhY2VJZAdEZWZhdWx0HUVOVl9UT19XT1JMRF9UT19QTEFDRV9JRFNfTUFQC1NUVURJT19OQU1FCmdldFBsYWNlSWQQVFJBREVfV09STERfTkFNRRVQTEFDRV9JRF9UT19XT1JMRF9NQVAMaXNUcmFkZVdvcmxkEGlzVHJhZGluZ0VuYWJsZWQPTUFJTl9XT1JMRF9OQU1FC2lzTWFpbldvcmxkE1BMQUNFX0lEX1RPX0VOVl9NQVAGZ2V0RW52CGdldFdvcmxkCVZvaWNlQ2hhdBpQTEFDRV9JRF9UT19QTEFDRV9UWVBFX01BUAxnZXRQbGFjZVR5cGURSW52YWxpZCBlbnYgZ2l2ZW4GYXNzZXJ0BEhhbmcUSW52YWxpZCBwbGFjZSB0eXBlOiAIdG9zdHJpbmccSW52YWxpZCB3b3JsZCBvciBubyBwbGFjZSBpZBZnZXRQbGFjZUlkRnJvbUVudldvcmxkD1ByaXZhdGVTZXJ2ZXJJZAAUUHJpdmF0ZVNlcnZlck93bmVySWQLaXNWSVBTZXJ2ZXIKUnVuU2VydmljZQpHZXRTZXJ2aWNlEVJlcGxpY2F0ZWRTdG9yYWdlB3JlcXVpcmUDQXBwCVJ1bkNvbnN0cw1Qcml2YXRlU2VydmVyE1ByaXZhdGVTZXJ2ZXJDb25zdHMISXNTZXJ2ZXIACwMAAQAAAAb7AQAAvAEBCgEAAACfAQICrQABAIIAAgACAQEDAQAOAgEYAAAAAAAADwAAAAAGAAMAAAAc+wAAALwAAAoAAAAAnwACAg4AEgCkAQIAAAAQQE0AAcUDAAAADQANAAQAAID7BAEATQME9wYAAAD7BQEATQQF7QcAAACHAgME+wMCAIcBAgNNAAE6BQAAAIIAAgCkAQIAAAAQQE0AAcUDAAAAggACAAgDAQMDBAAAEEADBAIAAAAAAAAAAAMFAwYDBwARCAEYAAAAAAAAAAAAAAABAAAAAAAAAAAAAAACAAAAABMAAAAACAADAAAANfsAAAC8AAAKAAAAAJ8AAgIOAAkA+wEBAPsDAgBNAgOvAQAAAPEBAgACAAAAqQAAAakAAQCCAAIA+wICAE0BApYCAAAA+wMAALwDAwoAAAAAnwMCAg4DEgCkBAQAAAAwQE0DBMUFAAAADQMNAAYA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

-- Decompiled by Krnl

local v_u_1 = game:GetService("RunService")
local v2 = game:GetService("ReplicatedStorage")
local v_u_3 = require(v2.App.RunConsts)
require(v2.PrivateServer.PrivateServerConsts)
local v_u_4 = {}
local v_u_5 = v_u_3.MAIN_WORLD_NAME
function v_u_4.isStudio()
	-- upvalues: (copy) v_u_1
	return v_u_1:IsStudio() and true
end
v_u_4.isStudio()
function v_u_4.isTradeWorld()
	-- upvalues: (copy) v_u_1, (copy) v_u_5, (copy) v_u_3
	if v_u_1:IsStudio() then
		return v_u_5 == v_u_3.TRADE_WORLD_NAME
	end
	local v6 = v_u_3.PLACE_ID_TO_WORLD_MAP
	local v7
	if v_u_1:IsStudio() and game.PlaceId == 0 then
		v7 = v_u_3.ENV_TO_WORLD_TO_PLACE_IDS_MAP[v_u_3.STUDIO_NAME][v_u_5].Default
	else
		v7 = game.PlaceId
	end
	return v6[v7] == v_u_3.TRADE_WORLD_NAME
end
function v_u_4.isTradingEnabled()
	-- upvalues: (copy) v_u_4
	return v_u_4.isTradeWorld()
end
function v_u_4.isMainWorld()
	-- upvalues: (copy) v_u_1, (copy) v_u_5, (copy) v_u_3
	if v_u_1:IsStudio() then
		return v_u_5 == v_u_3.MAIN_WORLD_NAME
	end
	local v8 = v_u_3.PLACE_ID_TO_WORLD_MAP
	local v9
	if v_u_1:IsStudio() and game.PlaceId == 0 then
		v9 = v_u_3.ENV_TO_WORLD_TO_PLACE_IDS_MAP[v_u_3.STUDIO_NAME][v_u_5].Default
	else
		v9 = game.PlaceId
	end
	return v8[v9] == v_u_3.MAIN_WORLD_NAME
end
function v_u_4.getEnv()
	-- upvalues: (copy) v_u_3, (copy) v_u_1, (copy) v_u_5
	local v10 = v_u_3.PLACE_ID_TO_ENV_MAP
	local v11
	if v_u_1:IsStudio() and game.PlaceId == 0 then
		v11 = v_u_3.ENV_TO_WORLD_TO_PLACE_IDS_MAP[v_u_3.STUDIO_NAME][v_u_5].Default
	else
		v11 = game.PlaceId
	end
	return v10[v11]
end
function v_u_4.getWorld()
	-- upvalues: (copy) v_u_1, (copy) v_u_5, (copy) v_u_3
	if v_u_1:IsStudio() then
		return v_u_5
	end
	local v12 = v_u_3.PLACE_ID_TO_WORLD_MAP
	local v13
	if v_u_1:IsStudio() and game.PlaceId == 0 then
		v13 = v_u_3.ENV_TO_WORLD_TO_PLACE_IDS_MAP[v_u_3.STUDIO_NAME][v_u_5].Default
	else
		v13 = game.PlaceId
	end
	return v12[v13]
end
function v_u_4.getPlaceType()
	-- upvalues: (copy) v_u_1, (copy) v_u_3, (copy) v_u_5
	if v_u_1:IsStudio() then
		return "VoiceChat"
	end
	local v14 = v_u_3.PLACE_ID_TO_PLACE_TYPE_MAP
	local v15
	if v_u_1:IsStudio() and game.PlaceId == 0 then
		v15 = v_u_3.ENV_TO_WORLD_TO_PLACE_IDS_MAP[v_u_3.STUDIO_NAME][v_u_5].Default
	else
		v15 = game.PlaceId
	end
	return v14[v15]
end
function v_u_4.getPlaceIdFromEnvWorld(p16, p17, p18)
	-- upvalues: (copy) v_u_3
	local v19 = v_u_3.ENV_TO_WORLD_TO_PLACE_IDS_MAP[p16]
	assert(v19, "Invalid env given")
	local v20 = p18 or "Default"
	local v21 = (v20 == "Default" or v20 == "VoiceChat") and true or v20 == "Hang"
	local v22 = "Invalid place type: " .. tostring(v20)
	assert(v21, v22)
	local v23 = v19[p17][v20]
	assert(v23, "Invalid world or no place id")
	return v23
end
if v_u_1:IsServer() then
	function v_u_4.isVIPServer()
		return game.PrivateServerId ~= "" and game.PrivateServerOwnerId ~= 0
	end
end
return v_u_4
