-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v_u_1 = table.insert
return function(p2)
	-- upvalues: (copy) v_u_1
	if p2 == nil then
		return "nil"
	end
	if typeof(p2) == "table" then
		local v_u_3 = {}
		local function v_u_17(p4, p5, p6)
			-- upvalues: (copy) v_u_3, (ref) v_u_1, (copy) v_u_17
			local v7 = ("\t"):rep(p5)
			if p6 then
				if typeof(p6) == "string" and (not p6:find("\"") and (not p6:find("\'") and p6:sub(1, 1):match("[%w_]"))) then
					v_u_1(v_u_3, ("%s%s = {"):format(v7, p6))
				else
					v_u_1(v_u_3, ("%s[%q] = {"):format(v7, p6))
				end
			else
				v_u_1(v_u_3, ("%s{"):format(v7))
			end
			local v8 = {}
			for v9, v10 in p4 do
				table.insert(v8, {
					["k"] = v9,
					["v"] = v10
				})
			end
			table.sort(v8, function(p11, p12)
				return p11.k < p12.k
			end)
			for _, v13 in v8 do
				local v14 = v13.k
				local v15 = v13.v
				if type(v15) == "table" then
					v_u_17(v15, p5 + 1, v14)
				else
					local v16
					if typeof(v15) == "Vector3" then
						v16 = ("Vector3.new(%s)"):format((tostring(v15)))
					elseif typeof(v15) == "string" then
						v16 = ("%q"):format(v15)
					elseif typeof(v15) == "Instance" then
						v16 = ("[%s]"):format(v15:GetFullName())
					else
						v16 = tostring(v15)
					end
					if typeof(v14) == "string" and (not v14:find("\"") and (not v14:find("\'") and v14:sub(1, 1):match("[%w_]"))) then
						v_u_1(v_u_3, ("\t%s%s = %s,"):format(v7, v14, v16))
					else
						v_u_1(v_u_3, ("\t%s[%q] = %s"):format(v7, v14, v16))
					end
				end
			end
			v_u_1(v_u_3, ("%s},"):format(v7))
		end
		v_u_17(p2, 0)
		table.remove(v_u_3)
		v_u_1(v_u_3, "}")
		return table.concat(v_u_3, "\n")
	end
	warn("table2Lua: t must be a table, currently of type: " .. typeof(p2))
end
