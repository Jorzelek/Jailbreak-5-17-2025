-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgNEA25ldwRtYWlkBXByb3BzCWNhbWVyYVJlZgljcmVhdGVSZWYLdmlld3BvcnRSZWYEaW5pdA1WaWV3cG9ydEZyYW1lD2JhY2tncm91bmRDb2xvchBCYWNrZ3JvdW5kQ29sb3IzFmJhY2tncm91bmRUcmFuc3BhcmVuY3kWQmFja2dyb3VuZFRyYW5zcGFyZW5jeQ9Cb3JkZXJTaXplUGl4ZWwIcG9zaXRpb24IUG9zaXRpb24Ec2l6ZQRTaXplC2FuY2hvclBvaW50C0FuY2hvclBvaW50BnpJbmRleAZaSW5kZXgGQ29sb3IzB0FtYmllbnQKTGlnaHRDb2xvcg1DdXJyZW50Q2FtZXJhA1JlZgVtZXJnZQZDYW1lcmELZmllbGRPZlZpZXcLRmllbGRPZlZpZXcIQ2hpbGRyZW4GcmVuZGVyCGdldFZhbHVlBGluc3QGUGFyZW50DHVwZGF0ZUNhbWVyYQ9fdXBkYXRlVmlld3BvcnQHZ2V0SW5zdAR0YXNrBmNhbmNlbAVkZWxheQRtYXRoBnJhbmRvbRFjYW5jZWxEZWxheVRocmVhZAlfcmVwYXJlbnQJSGVhcnRiZWF0B0Nvbm5lY3QIZGlkTW91bnQOZ2V0SW5zdENvbXBhcmUJZGlkVXBkYXRlCkRvQ2xlYW5pbmcLd2lsbFVubW91bnQEZ2FtZQpSdW5TZXJ2aWNlCkdldFNlcnZpY2UGc2NyaXB0BEV6VWkRRmluZEZpcnN0QW5jZXN0b3IHcmVxdWlyZQpEaWN0aW9uYXJ5A1N0ZARNYWlkBVJvYWN0DWNyZWF0ZUVsZW1lbnQNUHVyZUNvbXBvbmVudAZleHRlbmQFVURpbTIMZGVmYXVsdFByb3BzAAsDAQIAAAAr+wIAAE0BAu8AAAAAnwEBAjABABYBAAAATQIABwIAAABNAQIlAwAAAA4BBwBNAgAHAgAAAE0BAiUDAAAAMAEAJQMAAABlAAYA+wIBAE0BAtAEAAAAnwEBAjABACUDAAAATQIABwIAAABNAQKkBQAAAA4BBwBNAgAHAgAAAE0BAqQFAAAAMAEApAUAAACCAAEA+wIBAE0BAtAEAAAAnwEBAjABAKQFAAAAggABAAYDAQMCAwMDBAMFAwYAEwcBGAAAAAAAAAEAAAAAAQAAAAAAAAIAAAAAAAIAAAAAAQAAAAAAAAIA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

-- Decompiled by Krnl

local v_u_1 = game:GetService("RunService")
local v2 = script:FindFirstAncestor("EzUi")
local v_u_3 = require(v2.Dictionary)
local v_u_4 = require(v2.Parent.Std.Maid)
local v_u_5 = require(v2.Parent.Roact)
local v_u_6 = v_u_5.createElement
local v7 = v_u_5.PureComponent:extend("ViewportFrame")
v7.defaultProps = {
	["size"] = UDim2.new(1, 0, 1, 0),
	["position"] = UDim2.new(0, 0, 0, 0),
	["fieldOfView"] = 70
}
function v7.init(p8)
	-- upvalues: (copy) v_u_4, (copy) v_u_5
	p8.maid = v_u_4.new()
	if p8.props.cameraRef then
		p8.cameraRef = p8.props.cameraRef
	else
		p8.cameraRef = v_u_5.createRef()
	end
	if p8.props.viewportRef then
		p8.viewportRef = p8.props.viewportRef
	else
		p8.viewportRef = v_u_5.createRef()
	end
end
function v7.render(p9)
	-- upvalues: (copy) v_u_6, (copy) v_u_5, (copy) v_u_3
	local v10 = v_u_6
	local v11 = {
		["BackgroundColor3"] = p9.props.backgroundColor,
		["BackgroundTransparency"] = p9.props.backgroundTransparency,
		["BorderSizePixel"] = 0,
		["Position"] = p9.props.position,
		["Size"] = p9.props.size,
		["AnchorPoint"] = p9.props.anchorPoint,
		["ZIndex"] = p9.props.zIndex,
		["Ambient"] = Color3.new(1, 1, 1),
		["LightColor"] = Color3.new(1, 1, 1),
		["CurrentCamera"] = p9.cameraRef,
		[v_u_5.Ref] = p9.viewportRef
	}
	local v12 = v_u_3.merge
	local v13 = {
		["Camera"] = v_u_6("Camera", {
			["FieldOfView"] = p9.props.fieldOfView,
			[v_u_5.Ref] = p9.cameraRef
		})
	}
	return v10("ViewportFrame", v11, v12(v13, p9.props[v_u_5.Children]))
end
function v7._updateViewport(p14)
	local v15 = p14.cameraRef:getValue()
	local v16 = p14.maid.inst
	if v16 and v16.Parent ~= nil then
		p14.props.updateCamera(v15, v16)
	end
end
function v7._reparent(p_u_17)
	local v_u_18 = p_u_17.viewportRef:getValue()
	p_u_17.maid.inst = nil
	if p_u_17.props.getInst then
		local v_u_20 = task.delay(math.random() * 0.1, function()
			-- upvalues: (copy) p_u_17, (copy) v_u_18
			local v19 = p_u_17.props.getInst()
			p_u_17.maid.inst = v19
			v19.Parent = v_u_18
		end)
		function p_u_17.maid.cancelDelayThread()
			-- upvalues: (copy) v_u_20
			task.cancel(v_u_20)
		end
	end
	p_u_17:_updateViewport()
end
function v7.didMount(p_u_21)
	-- upvalues: (copy) v_u_1
	p_u_21:_reparent()
	p_u_21.maid.updateCamera = v_u_1.Heartbeat:Connect(function()
		-- upvalues: (copy) p_u_21
		p_u_21:_updateViewport()
	end)
end
function v7.didUpdate(p22, p23)
	if p22.props.getInstCompare and p22.props.getInstCompare ~= p23.getInstCompare or not p22.props.getInstCompare and p22.props.getInst ~= p23.getInst then
		p22:_reparent()
	end
end
function v7.willUnmount(p24)
	p24.maid:DoCleaning()
end
return v7
