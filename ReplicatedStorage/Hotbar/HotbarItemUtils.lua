-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- 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

-- Decompiled by Krnl

local v_u_1 = game:GetService("CollectionService")
local v2 = game:GetService("ReplicatedStorage")
local v_u_3 = require(v2.Hotbar.HotbarItemConsts)
local v_u_4 = require(v2.Inventory.InventoryItemConsts)
return {
	["calculateNewIndex"] = function(p5, p6, p7)
		if p5 == p6 then
			return p7
		end
		if p6 < p7 then
			if p6 < p5 and p5 <= p7 then
				return p5 - 1
			end
		elseif p7 < p6 and (p5 < p6 and p7 <= p5) then
			return p5 + 1
		end
		return p5
	end,
	["getOnHotbar"] = function(p8)
		-- upvalues: (copy) v_u_1, (copy) v_u_4, (copy) v_u_3
		local v9 = v_u_1:HasTag(p8, v_u_4.TAG_NAME)
		assert(v9, "provided inventoryItemValue is not an InventoryItem")
		return v_u_1:HasTag(p8, v_u_3.TAG_NAME)
	end,
	["setOnHotbar"] = function(p10, p11)
		-- upvalues: (copy) v_u_1, (copy) v_u_4, (copy) v_u_3
		local v12 = v_u_1:HasTag(p10, v_u_4.TAG_NAME)
		assert(v12, "provided inventoryItemValue is not an InventoryItem")
		local v13 = typeof(p11) == "boolean"
		assert(v13, "value must be a boolean")
		if p11 then
			v_u_1:AddTag(p10, v_u_3.TAG_NAME)
		else
			v_u_1:RemoveTag(p10, v_u_3.TAG_NAME)
		end
	end,
	["getDisplayOrder"] = function(p14)
		-- upvalues: (copy) v_u_1, (copy) v_u_3
		local v15 = v_u_1:HasTag(p14, v_u_3.TAG_NAME)
		assert(v15, "provided hotbarItemValue is not a HotbarItem")
		return p14:GetAttribute(v_u_3.DISPLAY_ORDER_ATTR_NAME)
	end,
	["setDisplayOrder"] = function(p16, p17)
		-- upvalues: (copy) v_u_1, (copy) v_u_3
		local v18 = v_u_1:HasTag(p16, v_u_3.TAG_NAME)
		assert(v18, "provided hotbarItemValue is not a HotbarItem")
		local v19 = typeof(p17) == "number"
		assert(v19, "value must be a string")
		p16:SetAttribute(v_u_3.DISPLAY_ORDER_ATTR_NAME, p17)
	end,
	["getImageSrc"] = function(p20)
		-- upvalues: (copy) v_u_1, (copy) v_u_3
		local v21 = v_u_1:HasTag(p20, v_u_3.TAG_NAME)
		assert(v21, "provided hotbarItemValue is not a HotbarItem")
		return p20:GetAttribute(v_u_3.IMAGE_SRC_ATTR_NAME)
	end,
	["setImageSrc"] = function(p22, p23)
		-- upvalues: (copy) v_u_1, (copy) v_u_3
		local v24 = v_u_1:HasTag(p22, v_u_3.TAG_NAME)
		assert(v24, "provided hotbarItemValue is not a HotbarItem")
		local v25 = typeof(p23) == "string"
		assert(v25, "value must be a string")
		p22:SetAttribute(v_u_3.IMAGE_SRC_ATTR_NAME, p23)
	end,
	["setBind"] = function(p26, p27)
		-- upvalues: (copy) v_u_1, (copy) v_u_3
		local v28 = v_u_1:HasTag(p26, v_u_3.TAG_NAME)
		assert(v28, "provided hotbarItemValue is not a HotbarItem")
		local v29 = typeof(p27) == "string"
		assert(v29, "value must be a string")
		p26:SetAttribute(v_u_3.IMAGE_SRC_ATTR_NAME, p27)
	end
}
