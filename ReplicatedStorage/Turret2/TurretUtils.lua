-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- Bytecode (Base64):
-- BgMYBmFzc2VydAVQYXJ0MQRCYXNlDkZpbmRGaXJzdENoaWxkA0FybQZDRnJhbWUCQzAHSW52ZXJzZRJQb2ludFRvT2JqZWN0U3BhY2UEUm9vdANUaXAIUG9zaXRpb24BeAF6BG1hdGgEc3FydAVhdGFuMgRhc2luFmNvbXB1dGVIb3Jpem9udGFsQW5nbGUBeRRjb21wdXRlVmVydGljYWxBbmdsZQZBbmdsZXMCQzELdXBkYXRlTW9kZWwABA0DAAAACAUAAAUDBwcIabsBAgNSBAIApAMBAAAAAECfAwIBuwEBA1IEAQCkAwEAAAAAQJ8DAgFNBAGxAgAAALsBBAKkAwEAAAAAQJ8DAgFvBQMAvAMAAwQAAACfAwMCuwEDA1IFAwCkBAEAAAAAQJ8EAgFvBgUAvAQAAwQAAACfBAMCuwEEA1IGBACkBQEAAAAAQJ8FAgFNBwGxAgAAAE0GB4UGAAAATQcB7QcAAAC8BwfaCAAAAJ8HAgIJBQYHUgcCALwFBcYJAAAAnwUDAk0HA3QKAAAATQYHhQYAAABNCQSxCwAAAE0ICTsMAAAAvAYGxgkAAACfBgMCTQoFmQ0AAABNCwWZDQAAAAkJCgtNCwWbDgAAAE0MBZsOAAAACQoLDEMICQq7GQgCpAcRAABA8ICfBwICTQsFmw4AAAA5CgsATQsFmQ0AAACeBQoDCwAAAKQJEwAASPCAnwkDAk0LBpkNAAAAYAsJAAcAAABNDAaZDQAAAOwLDAe7BAsCpAoVAABQ8ICfCgICKwoHAE0MBpkNAAAA7AsHDLsECwKkChUAAFDwgJ8KAgJDCAkKgggCABYDAQQAAABAAwIDAwMEAwUDBgMHAwgDCQMKAwsDDAMNAw4DDwMQBABA8IADEQQASPCAAxIEAFDwgAADEwEYAAAAAAABAAAAAAEAAAAAAAEAAAABAAAAAAEAAAABAAAAAAEAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAJAwAAAAgFAAAFAwcHCC27AQIDUgQCAKQDAQAAAABAnwMCAW8FAgC8AwADAwAAAJ8DAwK7AQMDUgUDAKQEAQAAAABAnwQCAU0FAbEEAAAAuwEFAqQEAQAAAABAnwQCAU0GAbEEAAAATQUGhQUAAABNBgHtBgAAALwGBtoHAAAAnwYCAgkEBQZSBgIAvAQExggAAACfBAMCTQYEmAkAAABNCASbCgAAADkHCACeBQYDBwAAAKQFDQAAMLCAnwUDAoIFAgAOAwEEAAAAQAMFAwQDAgMGAwcDCAMJAxQDDgMPAxEEADCwgAASFQEYAAAAAAABAAAAAQAAAAABAAAAAAABAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAABEwAAAAALBAAAAAkGAAAFBAcHAgIjTQYA7QAAAAC8BgbaAQAAAJ8GAgKkBwQAAAwggIwIAAB4CQIFjAoAAJ8HBAIJBQYHTQYA7QAAAAAJBAUGMAQAzAYAAABNBgHtAAAAALwGBtoBAAAAnwYCAqQHBAAADCCAUggDAIwJAACMCgAAnwcEAgkFBgdNBgHtAAAAAAkEBQYwBAHMBgAAAIIAAQAHAwcDCAMGAxYEAAwggAIYLURU+yH5PwMXABsYARgAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAARwAAAAAAgAAAQIADaMAAAD/AAMAAAAAAMABAAAwAQBFAQAAAMABAgAwAQDVAwAAAMABBAAwAQDlBQAAAIIAAgAGBgADEwYBAxUGAgMYAwABAgEAARgAAQABAAAPAAAJAAAEAQAAAAADVhLM7LSYMZZk1qZ4UQaq6Hnt1c3YOIdeB0eq8SeDYVoASZ9Ax3rBqQ==

-- Decompiled by Krnl

return {
	["computeHorizontalAngle"] = function(p1, p2, p3)
		assert(p3)
		assert(p2)
		local v4 = p2.Part1
		assert(v4)
		local v5 = p1:FindFirstChild("Base")
		assert(v5)
		local v6 = p1:FindFirstChild("Arm")
		assert(v6)
		local v7 = (p2.Part1.CFrame * p2.C0:Inverse()):PointToObjectSpace(p3)
		local v8 = v5.Root.CFrame:PointToObjectSpace(v6.Tip.Position)
		local v9 = v7.x * v7.x + v7.z * v7.z
		local v10 = math.sqrt(v9)
		local v11 = -v7.z
		local v12 = v7.x
		local v13 = math.atan2(v11, v12)
		if v8.x < v10 then
			local v14 = v8.x / v10
			v16 = math.asin(v14)
			if v16 then
				::l3::
				return v13 + v16
			end
		end
		local v15 = v10 / v8.x
		local v16 = math.asin(v15)
		goto l3
	end,
	["computeVerticalAngle"] = function(p17, p18, p19)
		assert(p19)
		local v20 = p17:FindFirstChild("Arm")
		assert(v20)
		local v21 = p18.Part1
		assert(v21)
		local v22 = (p18.Part1.CFrame * p18.C0:Inverse()):PointToObjectSpace(p19)
		local v23 = v22.y
		local v24 = -v22.z
		return math.atan2(v23, v24)
	end,
	["updateModel"] = function(p25, p26, p27, p28)
		p25.C1 = p25.C0:Inverse() * CFrame.Angles(0, p27 - 1.5707963267948966, 0) * p25.C0
		p26.C1 = p26.C0:Inverse() * CFrame.Angles(p28, 0, 0) * p26.C0
	end
}
